"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _BaseLayer2 = require("./BaseLayer");

var _BaseLayer3 = _interopRequireDefault(_BaseLayer2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var EventBaseLayer = function (_BaseLayer) {
    _inherits(EventBaseLayer, _BaseLayer);

    function EventBaseLayer() {
        _classCallCheck(this, EventBaseLayer);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(EventBaseLayer).apply(this, arguments));
    }

    _createClass(EventBaseLayer, null, [{
        key: "generateEvent",


        /**
         * Given a set of properties that a layer supports return the event value (payload) that
         * that this layer generates.
         *
         * @param props {Object}   An object with each field having the name of each layer
         *                         property and its event payloads if applicable
         *
         * @returns {Object}    A JSON object with the payload information for that layer
         */
        value: function generateEvent() /*props*/{
            throw "Implement static Layer.generateEvent()";
        }
    }, {
        key: "isEvent",
        value: function isEvent() {
            return true;
        }
    }, {
        key: "isValid",
        value: function isValid() /*generatedEvent*/{
            throw "Implement static Layer.isValid(generedatedEvent)";
        }
    }]);

    return EventBaseLayer;
}(_BaseLayer3.default);

exports.default = EventBaseLayer;
//# sourceMappingURL=../map/bases/EventBaseLayer.js.map
