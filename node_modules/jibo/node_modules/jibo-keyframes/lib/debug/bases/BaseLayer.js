"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var BaseLayer = function () {
    function BaseLayer() {
        _classCallCheck(this, BaseLayer);
    }

    _createClass(BaseLayer, null, [{
        key: "getInfo",


        /**
         * Return type information about the layer, such as:
         *   - Properties it supports and their:
         *      - type
         *      - default values
         *      - min/max where applicable
         *      - the operation (for DOF) that the layering system uses to blend with other layers:
         *        - additive for translations, rotations, and color type properties
         *        - multiplicative for scaling
         *        - last one wins for textures
         *   - values (DOF, events, etc.) the layer generates
         * Each layer needs to implement this.
         */
        value: function getInfo() {
            throw "Implement static Layer.getInfo() to supply property meta data";
        }
    }, {
        key: "isEvent",
        value: function isEvent() {
            throw "Implement static Layer.isEvent()";
        }
    }]);

    return BaseLayer;
}();

exports.default = BaseLayer;
//# sourceMappingURL=../map/bases/BaseLayer.js.map
