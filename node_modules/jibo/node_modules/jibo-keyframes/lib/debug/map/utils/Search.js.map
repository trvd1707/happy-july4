{"version":3,"sources":["utils/Search.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;IASqB;;;;;;;uCACK,WAAW,cAAa;AAC1C,gBAAI,KAAK,CAAL;gBACA,KAAK,UAAU,MAAV,GAAmB,CAAnB;gBACL;wCAFJ,CAD0C;AAK1C,mBAAO,MAAM,EAAN,EAAU;AACb,sBAAM,KAAK,KAAL,CAAW,CAAC,KAAG,EAAH,CAAD,GAAQ,CAAR,CAAjB;;;;AADa,oBAKR,gBAAgB,UAAU,MAAI,CAAJ,CAAV,CAAiB,IAAjB,EAAsB;;AAEvC,yBAAK,MAAM,CAAN,CAFkC;iBAA3C,MAIK,IAAK,eAAe,UAAU,GAAV,EAAe,IAAf,EAAoB;;AAEzC,yBAAK,MAAM,CAAN,CAFoC;iBAAxC,MAIA;;AAED,2BAAO;AACH,+BAAO,GAAP;AACA,6BAAK,MAAI,CAAJ;qBAFT,CAFC;iBAJA;aATT;;;;+CAuB0B,WAAW,cAAc;AACnD,gBAAI,UAAU,MAAV,KAAqB,CAArB,EAAwB;AACxB,uBAAO,SAAP,CADwB;aAA5B;;AAIA,gBAAI,KAAK,CAAL,CAL+C;AAMnD,gBAAI,KAAK,UAAU,MAAV,GAAmB,CAAnB,CAN0C;AAOnD,gBAAI,YAAJ,CAPmD;;AASnD,mBAAO,MAAM,EAAN,EAAU;AACb,sBAAM,KAAK,KAAL,CAAW,CAAC,KAAG,EAAH,CAAD,GAAQ,CAAR,CAAjB,CADa;;AAGb,oBAAI,UAAU,UAAU,GAAV,EAAe,IAAf,CAHD;;AAKb,oBAAI,iBAAiB,OAAjB,EAA0B;AAC1B,2BAAO,GAAP;AAD0B,iBAA9B,MAGK,IAAI,eAAe,OAAf,EAAwB;;AAE7B,6BAAK,MAAM,CAAN,CAFwB;qBAA5B,qCAIgC;;AAEjC,iCAAK,MAAM,CAAN,CAF4B;yBAJhC;aART;;;AATmD,mBA4B5C,SAAP,CA5BmD;;;;WA7BtC","file":"utils/Search.js","sourcesContent":["/**\n * keyframes entry point.\n */\n\n/**\n * This assumes that some higher level logic has already determined that the keyframeTime is between\n * the first and last keyframe's times\n */\n\nexport default class Search {\n    static keyframeSearch(keyframes, keyframeTime){\n        let lo = 0,\n            hi = keyframes.length - 2,\n            mid/*,\n            steps = 0*/;\n        while (lo <= hi) {\n            mid = Math.floor((lo+hi)/2);\n\n            //steps++;\n            //console.log(`mid: ${mid}, lo: ${lo}, hi: ${hi} start: ${keyframes[mid].time}, end: ${keyframes[mid+1].time}`)\n            if ( keyframeTime >= keyframes[mid+1].time){\n                //console.log('moving up');\n                lo = mid + 1;\n            }\n            else if ( keyframeTime < keyframes[mid].time){\n                //console.log('moving down');\n                hi = mid - 1;\n            }\n            else {\n                //console.log(`steps: ${steps}`);\n                return {\n                    start: mid,\n                    end: mid+1\n                };\n            }\n        }\n    }\n\n    static keyframeSearchAbsolute(keyframes, keyframeTime) {\n        if (keyframes.length === 0) {\n            return undefined;\n        }\n\n        let lo = 0;\n        let hi = keyframes.length - 1;\n        let mid;\n\n        while (lo <= hi) {\n            mid = Math.floor((lo+hi)/2);\n\n            let midTime = keyframes[mid].time;\n\n            if (keyframeTime === midTime) {\n                return mid; // found it\n            }\n            else if (keyframeTime > midTime) {\n                // if our time is greater, then move up\n                lo = mid + 1;\n            }\n            else /*if (keyframeTime < midTime)*/ {\n                // if our time is less, then move down\n                hi = mid - 1;\n            }\n        }\n\n        // not found\n        return undefined;\n    }\n}"],"sourceRoot":"/source/"}