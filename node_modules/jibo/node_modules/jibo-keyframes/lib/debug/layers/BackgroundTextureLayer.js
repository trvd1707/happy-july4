"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _DOFBaseLayer2 = require("../bases/DOFBaseLayer");

var _DOFBaseLayer3 = _interopRequireDefault(_DOFBaseLayer2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var BackgroundTextureInfo = {
    layerType: "Background Texture",
    properties: {
        Texture: {
            type: "texture",
            defaultValue: "",
            blendOperation: "lastOneWins"
        },
        Color: {
            type: "rgb",
            defaultValue: {
                r: 255,
                g: 255,
                b: 255
            },
            blendOperation: "add"
        }
    },
    dofs: {
        screenBGTextureInfixBn_r: true,
        screenBG_redChannelBn_r: true,
        screenBG_greenChannelBn_r: true,
        screenBG_blueChannelBn_r0: true
    }
};

var BackgroundTextureLayer = function (_DOFBaseLayer) {
    _inherits(BackgroundTextureLayer, _DOFBaseLayer);

    _createClass(BackgroundTextureLayer, null, [{
        key: "getInfo",
        value: function getInfo() {
            return BackgroundTextureInfo;
        }
    }]);

    function BackgroundTextureLayer() {
        _classCallCheck(this, BackgroundTextureLayer);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(BackgroundTextureLayer).call(this));
    }

    _createClass(BackgroundTextureLayer, null, [{
        key: "generateDofs",
        value: function generateDofs(props) {
            return {
                screenBGTextureInfixBn_r: props.Texture,
                screenBG_redChannelBn_r: props.Color.r / 255.0,
                screenBG_greenChannelBn_r: props.Color.g / 255.0,
                screenBG_blueChannelBn_r: props.Color.b / 255.0
            };
        }
    }]);

    return BackgroundTextureLayer;
}(_DOFBaseLayer3.default);

exports.default = BackgroundTextureLayer;
//# sourceMappingURL=../map/layers/BackgroundTextureLayer.js.map
