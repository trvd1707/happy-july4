'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _DOFBaseLayer2 = require('../bases/DOFBaseLayer');

var _DOFBaseLayer3 = _interopRequireDefault(_DOFBaseLayer2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var values = [{
    display: 'linear',
    label: 'Linear Tween',
    value: 'linear'
}, {
    display: 'sine in',
    label: 'Sine Ease In',
    value: 'sineIn'
}, {
    display: 'sine out',
    label: 'Sine Ease Out',
    value: 'sineOut'
}, {
    display: 'sine in out',
    label: 'Sine Ease In Out',
    value: 'sineInOut'
}, {
    display: 'cubic in',
    label: 'Cubic Ease In',
    value: 'cubicIn'
}, {
    display: 'cubic out',
    label: 'Cubic Ease Out',
    value: 'cubicOut'
}, {
    display: 'cubic in out',
    label: 'Cubic Ease In Out',
    value: 'cubicInOut'
}];

var Tween = {
    type: {
        name: 'enum',
        values: values
    },
    defaultValue: values[3],
    blendOperation: 'none'
};

var RotationType = {
    type: "float",
    defaultValue: 0.0,
    blendOperation: "add"
};

var BodyInfo = {
    layerType: "Body",
    properties: {
        Head: RotationType,
        Torso: RotationType,
        Pelvis: RotationType,
        Tween: Tween
    },
    dofs: {
        topSection_r: true,
        middleSection_r: true,
        bottomSection_r: true
    }
};

var BodyLayer = function (_DOFBaseLayer) {
    _inherits(BodyLayer, _DOFBaseLayer);

    _createClass(BodyLayer, null, [{
        key: 'getInfo',
        value: function getInfo() {
            return BodyInfo;
        }
    }]);

    function BodyLayer() {
        _classCallCheck(this, BodyLayer);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(BodyLayer).call(this));
    }

    _createClass(BodyLayer, null, [{
        key: 'generateDofs',
        value: function generateDofs(props) {
            return {
                topSection_r: props.Head / 180 * Math.PI,
                middleSection_r: props.Torso / 180 * Math.PI,
                bottomSection_r: props.Pelvis / 180 * Math.PI
            };
        }
    }]);

    return BodyLayer;
}(_DOFBaseLayer3.default);

exports.default = BodyLayer;
//# sourceMappingURL=../map/layers/BodyLayer.js.map
