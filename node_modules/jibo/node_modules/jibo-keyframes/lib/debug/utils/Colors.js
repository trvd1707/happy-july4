"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _hsv = require("color-space/hsv");

var _hsv2 = _interopRequireDefault(_hsv);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

// function clampColorComponent(v){
//     return Math.floor(Math.max(0, Math.min(255, v)));
// }

/**
 * hsv value range is:
 *  h = [0,360],
 *  s = [0,100],
 *  v = [0,100]
 *
 * Uses range/values mapped out in this interface:
 * http://www.colorpicker.com/
 */

var Colors = function () {
    function Colors() {
        _classCallCheck(this, Colors);
    }

    _createClass(Colors, null, [{
        key: "hsvToRgb",
        value: function hsvToRgb(h, s, v) {
            var rgb = _hsv2.default.rgb([h, s, v]);
            return {
                r: rgb[0],
                g: rgb[1],
                b: rgb[2]
            };
        }
    }]);

    return Colors;
}();

exports.default = Colors;
//# sourceMappingURL=../map/utils/Colors.js.map
