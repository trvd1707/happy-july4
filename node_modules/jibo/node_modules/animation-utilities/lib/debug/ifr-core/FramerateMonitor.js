/**
 * @author mattb
 * Copyright 2015 IF Robots LLC
 */

"use strict";

var Clock = require("./Clock");
var slog = require("./SLog");

/**
 * constructs a new framerate monitor.
 * @param {number} updateIntervalSeconds - the period at which the framerate measurement will be updated
 * @param {string} [slogChannel] - if specified, at every measurement the framerate will be printed to the given slog channel
 * @param {string} [prefixText] - prefix text for the framerate printout, defaults to 'fps: '
 * @constructor
 */
var FramerateMonitor = function FramerateMonitor(updateIntervalSeconds, slogChannel, prefixText) {
	var channel = slogChannel !== undefined ? slogChannel : null;
	var prefix = prefixText !== undefined ? prefixText : "fps: ";

	var updateCount = 0;
	var lastFramerateUpdateTime = Clock.currentTime();
	var updatesPerSecond = 0;

	var self = this;

	this.update = function () {
		updateCount++;
	};

	this.getUpdateFunction = function () {
		return function () {
			self.update();
		};
	};

	this.getFramerate = function () {
		return updatesPerSecond;
	};

	var updateFramerate = function updateFramerate() {
		var currentTime = Clock.currentTime();
		updatesPerSecond = updateCount / currentTime.subtract(lastFramerateUpdateTime);
		updateCount = 0;
		lastFramerateUpdateTime = currentTime;

		if (channel !== null) {
			slog(channel, "" + prefix + updatesPerSecond);
		}
	};

	var updateIntervalMillis = Math.round(updateIntervalSeconds * 1000);
	setInterval(updateFramerate, updateIntervalMillis);
};

module.exports = FramerateMonitor;
//# sourceMappingURL=../map/ifr-core/FramerateMonitor.js.map
