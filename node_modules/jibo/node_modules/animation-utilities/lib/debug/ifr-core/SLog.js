/**
 * @author jg
 * Copyright 2015 IF Robots LLC
 */

"use strict";

/**
 * @callback SlogDelegate
 * @param {string} channel
 * @param {string} message
 */

/** @type {SlogDelegate} */
// eslint-disable-next-line no-unused-vars

var _slogNOPDelegate = function _slogNOPDelegate(channel, message) {};

/** @type {boolean} */
var _printedUninitializedWarning = false;

/** @type {SlogDelegate} */
// eslint-disable-next-line no-unused-vars
var _slogWarnUninitializedDelegate = function _slogWarnUninitializedDelegate(channel, message) {
  if (!_printedUninitializedWarning) {
    _printedUninitializedWarning = true;
    console.log("slog used without being initialized, first usage stack:");
    console.log(new Error().stack);
  }
};

var _slogConsolePrinterDelegate = function _slogConsolePrinterDelegate(channel, message) {
  console.log(channel + " : " + message);
};

/** @type {SlogDelegate} */
var _slogDefaultDelegate = _slogNOPDelegate;

/** @type {Object.<string, SlogDelegate>} */
var _slogChannelDelegates = { ERROR: _slogConsolePrinterDelegate };

/**
 * @param {string} channel
 * @param {string} message
 */
var slog = function slog(channel, message) {
  if (_slogChannelDelegates.hasOwnProperty(channel)) {
    _slogChannelDelegates[channel](channel, message);
  } else {
    _slogDefaultDelegate(channel, message);
  }
};

/**
 * Enum Values for default channels.
 * @enum {string}
 */
slog.BaseChannels = {
  INFO: "INFO",
  WARN: "WARN",
  ERROR: "ERROR"
};

/**
 * Calls slog(INFO, message).
 *
 * @param {string} message
 */
slog.info = function (message) {
  slog(slog.BaseChannels.INFO, message);
};

/**
 * Calls slog(WARN, message).
 *
 * @param {string} message
 */
slog.warn = function (message) {
  slog(slog.BaseChannels.WARN, message);
};

/**
 * Calls slog(ERROR, message).
 *
 * @param {string} message
 */
slog.error = function (message) {
  slog(slog.BaseChannels.ERROR, message);
};

/**
 * Sets the default delegate which will handle all channels not explicitly
 * covered by a channel delegate.  Pass null for a NOP handler that prints nothing
 *
 * @param {SlogDelegate} slogDelegate - default delegate, null for NOP (silent) delegate
 */
slog.setDefaultDelegate = function (slogDelegate) {
  if (slogDelegate == null) {
    //null of undefined (eqnull)
    _slogDefaultDelegate = _slogNOPDelegate;
  } else {
    _slogDefaultDelegate = slogDelegate;
  }
};

/**
 * Sets the delegate for a particular channel.  Pass null for a NOP handler that prints nothing
 * @param {string} channel
 * @param {SlogDelegate} slogDelegate - channel delegate, null for NOP (silent) delegate
 */
slog.setChannelDelegate = function (channel, slogDelegate) {
  if (slogDelegate == null) {
    //null or undefined (eqnull)
    _slogChannelDelegates[channel] = _slogNOPDelegate;
  } else {
    _slogChannelDelegates[channel] = slogDelegate;
  }
};

/**
 * Clear the delegate from the given channel (channel will be handled by default delegate).
 * Pass null to clear all channel delegates
 *
 * @param {string} channel - channel to clear, null to clear all channels
 */
slog.clearChannelDelegate = function (channel) {
  if (channel == null) {
    //null or undefined (eqnull)
    var channels = Object.keys(_slogChannelDelegates);
    for (var i = 0; i < channels.length; i++) {
      delete _slogChannelDelegates[channels[i]];
    }
  } else {
    delete _slogChannelDelegates[channel];
  }
};

/**
 * Convenience function to configure slog to print only the channels listed.  Clears all other
 * initialized state.
 *
 * Equivalent to setting the default delegate to NOP delegate, setting the given channels
 * to simple console printing delegates, and clearing all other channel delegates
 *
 * @param {string[]} channels - channels to print, null same as setPrintNone
 */
slog.setPrintChannels = function (channels) {
  slog.setDefaultDelegate(null);
  slog.clearChannelDelegate(null);
  if (channels != null) {
    for (var i = 0; i < channels.length; i++) {
      slog.setChannelDelegate(channels[i], _slogConsolePrinterDelegate);
    }
  }
};

/**
 * Convenience function to configure slog to print all channels.  Clears all other
 * initialized state.
 *
 * Equivalent to setting the default delegate to a simple console printing delegate
 * and clearing all channel delegates
 */
slog.setPrintAll = function () {
  slog.setDefaultDelegate(_slogConsolePrinterDelegate);
  slog.clearChannelDelegate(null);
};

/**
 * Convenience function to configure slog to print nothing.  Clears all other
 * initialized state.
 *
 * Equivalent to setting the default delegate to a NOP delegate
 * and clearing all channel delegates
 */
slog.setPrintNone = function () {
  slog.setDefaultDelegate(_slogNOPDelegate);
  slog.clearChannelDelegate(null);
};

module.exports = slog;
//# sourceMappingURL=../map/ifr-core/SLog.js.map
