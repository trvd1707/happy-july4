/**
 * @author jg
 * Copyright 2015 IF Robots LLC
 */

"use strict";

var CyclicMath = function CyclicMath() {};

/**
 * Return the angle whose value is closest to "referenceAngle" and
 * with the same angular position as "angle"
 *
 * @param {number} angle
 * @param {number} referenceAngle
 */
CyclicMath.closestEquivalentRotation = function (angle, referenceAngle) {
  var delta = referenceAngle - angle;
  var addRevolutions = Math.floor((delta + Math.PI) / (Math.PI * 2));
  var converted = angle + addRevolutions * Math.PI * 2;
  return converted;
};

module.exports = CyclicMath;
//# sourceMappingURL=../../map/ifr-motion/base/CyclicMath.js.map
