/**
 * @author mattb
 * Copyright 2014 IF Robots LLC
 */

"use strict";

/**
 * @constructor
 */

var ModelControl = function ModelControl() {
	/** @type {Array.<string>} */
	this._controlNames = [];
	/** @type {Array.<string>} */
	this._dofNames = [];
};

/** @type {string} */
ModelControl.prototype._controlType = null;

/**
 * @param {Object} jsonData
 */
ModelControl.prototype.setFromJson = function (jsonData) {
	if (jsonData.controlName) {
		this._controlNames.push(jsonData.controlName);
	}
};

/**
 * @return {string}
 */
ModelControl.prototype.getControlType = function () {
	return this._controlType;
};

/**
 * @return {Array.<string>}
 */
ModelControl.prototype.getControlNames = function () {
	return this._controlNames;
};

/**
 * @return {Array.<string>}
 */
ModelControl.prototype.getDOFNames = function () {
	return this._dofNames;
};

/**
 * @return {Array.<string>}
 */
ModelControl.prototype.getTransformNames = function () {
	return null;
};

/**
 * @return {string}
 */
ModelControl.prototype.getDescriptiveName = function () {
	if (this._controlNames.length === 0) {
		return null;
	} else if (this._controlNames.length === 1) {
		return this._controlNames[0];
	} else {
		var names = this._controlNames[0];
		for (var i = 1; i < this._controlNames.length; i++) {
			names = names + ", " + this._controlNames[i];
		}
		return "MultiControl<" + names + ">";
	}
};

/**
 * @param {Object.<string, THREE.Object3D>} modelMap
 * @return {!boolean}
 */
ModelControl.prototype.attachToModel = function (modelMap) // eslint-disable-line no-unused-vars
{
	return false;
};

/**
 * Called once when control list is assigned to a group, used by controls
 * which need to make links amongst themselves.
 * @param {ModelControlGroup} controlGroup
 */
ModelControl.prototype.attachToControlGroup = function (controlGroup) {}; // eslint-disable-line no-unused-vars

/**
 * @param {Object.<string, Object>} dofValues
 * @return {!boolean}
 */
ModelControl.prototype.updateFromDOFValues = function (dofValues) // eslint-disable-line no-unused-vars
{
	return false;
};

/**
 * @param {Pose} pose
 * @return {!boolean}
 */
ModelControl.prototype.updateFromPose = function (pose) // eslint-disable-line no-unused-vars
{
	return false;
};

/**
 * Creates a copy of this dof, or fills in this dof's data to the provided
 * argument (to allow type to be defined by subclass's getCopy).
 *
 * @param {ModelControl} copyInto - optional object to copy into
 * @return {ModelControl} copy of this dof, not attached to any model
 */
ModelControl.prototype.getCopy = function (copyInto) {
	if (!copyInto) {
		copyInto = new ModelControl();
	}
	copyInto._controlNames = this._controlNames ? this._controlNames.slice(0) : null;
	copyInto._dofNames = this._dofNames ? this._dofNames.slice(0) : null;
	copyInto._controlType = this._controlType;
};

module.exports = ModelControl;
//# sourceMappingURL=../../map/ifr-motion/dofs/ModelControl.js.map
