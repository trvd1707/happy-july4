/**
 * @author jg
 * Copyright 2015 IF Robots LLC
 */

"use strict";

var Bakery = require("../../ifr-core/Bakery");
var PController = require("./PController");

/**
 *
 * @constructor
 * @extends PController
 */
var PVController = function PVController() {
  PController.call(this);

  /** @type {number} */
  this._commandVelocityPVC = 0;
};

PVController.prototype = Object.create(PController.prototype);
PVController.prototype.constructor = PVController;

/**
 * @param {Time} time
 * @override
 */
PVController.prototype.calculateForTime = function (time) {
  if (this._lastObservationTime !== null && this._targetTime !== null) {
    PController.prototype.calculateForTime.call(this, time);

    if (Bakery.getBoolean("Use Velocity", true, this._window)) {
      this._commandVelocityPVC = this._commandVelocity + this._targetVelocity;
    } else {
      this._commandVelocityPVC = this._commandVelocity;
    }
  }
};

/**
 * @override
 * @returns {number}
 */
PVController.prototype.getCommandVelocity = function () {
  return this._commandVelocityPVC;
};

module.exports = PVController;
//# sourceMappingURL=../../map/ifr-motion/feedback/PVController.js.map
