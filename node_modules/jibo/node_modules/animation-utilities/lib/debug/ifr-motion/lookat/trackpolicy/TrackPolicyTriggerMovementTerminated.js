/**
 * @author jg
 * Copyright 2016 IF Robots LLC
 */

"use strict";

var TrackPolicyTrigger = require("./TrackPolicyTrigger");

/**
 * @param {number} deadZone
 * @param {number} deadTime;
 * @constructor
 * @extends TrackPolicyTrigger
 */
var TrackPolicyTriggerMovementTerminated = function TrackPolicyTriggerMovementTerminated(deadZone, deadTime) {
	TrackPolicyTrigger.call(this);
	/**@type {number}
  * @private */
	this._deadZone = deadZone;

	/**@type {number}
  * @private */
	this._deadTime = deadTime;

	/**@type {number}
  * @private */
	this._deadTimeAccumulated = 0;
};

TrackPolicyTriggerMovementTerminated.prototype = Object.create(TrackPolicyTrigger.prototype);
TrackPolicyTriggerMovementTerminated.prototype.constructor = TrackPolicyTriggerMovementTerminated;

/**
 *
 * @param {LookatNodeDistanceReport} lookatNodeDistanceReport
 * @param {number} timeDelta
 * @return {?boolean}
 */
TrackPolicyTriggerMovementTerminated.prototype.shouldStopTracking = function (lookatNodeDistanceReport, timeDelta) {
	var distance = lookatNodeDistanceReport.highestDistanceOptimalToFiltered;

	if (distance <= this._deadZone) {
		this._deadTimeAccumulated += timeDelta;
	} else {
		this._deadTimeAccumulated = 0;
	}

	return this._deadTimeAccumulated > this._deadTime;
};

/**
 * Called to notify trigger to reset state
 */
TrackPolicyTriggerMovementTerminated.prototype.reset = function () {
	this._deadTimeAccumulated = 0;
};

module.exports = TrackPolicyTriggerMovementTerminated;
//# sourceMappingURL=../../../map/ifr-motion/lookat/trackpolicy/TrackPolicyTriggerMovementTerminated.js.map
