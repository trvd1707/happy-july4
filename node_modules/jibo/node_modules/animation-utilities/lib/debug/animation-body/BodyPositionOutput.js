/**
 * @author jonathan ross
 */

"use strict";

var BodyOutput = require("./BodyOutput");

var BodyPositionOutput = function BodyPositionOutput(clock, robotInfo, bodyServiceURL, startEnabled, updateIntervalMillis, sessionToken) {
    BodyOutput.call(this, clock, robotInfo, bodyServiceURL, startEnabled, updateIntervalMillis, sessionToken);
};

BodyPositionOutput.prototype = Object.create(BodyOutput.prototype);
BodyPositionOutput.prototype.constructor = BodyOutput;

BodyPositionOutput.prototype.update = function () {
    var currentTime = this.clock.currentTime();
    var targets = this.computeTargetsForTime(currentTime.add(this.reactionTime));
    if (targets !== null && this.motionInterface.isConnected()) {
        for (var i = 0; i < this.dofNames.length; i++) {
            var position = targets[i].position;
            this.motionInterface.setCommand(this.dofNames[i], 0, position, null, null, null);
        }
        this.motionInterface.sendCommand();
    }
};

module.exports = BodyPositionOutput;
//# sourceMappingURL=../map/animation-body/BodyPositionOutput.js.map
