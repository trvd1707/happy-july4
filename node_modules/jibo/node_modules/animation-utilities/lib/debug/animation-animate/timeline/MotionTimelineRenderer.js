/**
 * @author jg
 */

"use strict";

/**
 *
 * @param {string[]} layerNames
 * @param {MotionTimelineLayerRenderer[]} layerRenderFunctions
 * @constructor
 */

var MotionTimelineRenderer = function MotionTimelineRenderer(layerNames, layerRenderFunctions) {
  /** @type {string[]}*/
  this._layerNames = layerNames;

  /** @type {MotionTimelineLayerRenderer[]}*/
  this._layerRenderFunctions = layerRenderFunctions;
};

/**
 *
 * @param {Object.<string,MotionTimelineClip[]>} layers
 * @param {Object.<string,Pose>} defaultPoses
 * @param {Time} startTime
 * @param {Time} endTime
 * @return Motion
 */
MotionTimelineRenderer.prototype.render = function (layers, defaultPoses, startTime, endTime) {
  var motionSoFar = null;
  for (var li = 0; li < this._layerNames.length; li++) {
    var layerName = this._layerNames[li];
    if (layers.hasOwnProperty(layerName)) {
      motionSoFar = this._layerRenderFunctions[li].render(layers[layerName], defaultPoses[layerName], startTime, endTime, motionSoFar);
    }
  }
  return motionSoFar;
};

module.exports = MotionTimelineRenderer;
//# sourceMappingURL=../../map/animation-animate/timeline/MotionTimelineRenderer.js.map
