/**
 * @author mattb
 */

"use strict";

/**
 * Interface for auxiliary output delegates.
 *
 * @class
 * @global
 */

var AuxOutputDelegate = {};

/* interface definition:        */
/* eslint-disable no-unused-vars */

/**
 * @global
 */
AuxOutputDelegate.prototype = {

	/**
  * Updates the delegate with the latest DOF values.
  *
  * @param {Time} timestamp - Timestamp of the latest DOF calculation.
  * @param {Object.<string, Object>} dofValues - DOF value map.
  */
	display: function display(timestamp, dofValues) {}

};

/* end interface definition:        */
/* eslint-enable no-unused-vars */

/**
 * Auxiliary timeline output for alternative renderers, additional body services, logging/debugging, etc.
 *
 * @param {RobotInfo} robotInfo
 * @param {AuxOutputDelegate} outputDelegate
 * @constructor
 */
var AuxOutput = function AuxOutput(robotInfo, outputDelegate) {
	/** @type {RobotInfo} */
	this.robotInfo = robotInfo;
	/** @type {AuxOutputDelegate} */
	this.outputDelegate = outputDelegate;
};

/**
 * @param {Time} time
 * @param {Pose} pose
 */
AuxOutput.prototype.handleOutput = function (time, pose) {
	var dofValues = {};
	var dofNames = pose.getDOFNames();
	for (var dofIndex = 0; dofIndex < dofNames.length; dofIndex++) {
		var dofValue = pose.get(dofNames[dofIndex], 0);
		dofValues[dofNames[dofIndex]] = dofValue;
	}

	this.outputDelegate.display(time, dofValues);
};

module.exports = AuxOutput;
//# sourceMappingURL=../../map/animation-animate/timeline/AuxOutput.js.map
