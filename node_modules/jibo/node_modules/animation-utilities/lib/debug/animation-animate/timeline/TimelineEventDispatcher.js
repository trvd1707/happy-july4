/**
 * Queue timeline events until the end of the Timeline operations so callbacks are
 * not encouraged to modify the timeline during timeline modifications
 *
 * @author jg
 */

"use strict";

var slog = require("../../ifr-core/SLog");

var eventQueue = [];

var TimelineEventDispatcher = {

	queueEvent: function queueEvent(theFunction, theArgs) {
		if (theFunction == null) {
			//null or undefined
			slog.error("Error, null/undefined function queued!\n" + new Error().stack);
		}
		eventQueue.push({ f: theFunction, a: theArgs });
	},

	dispatchQueuedEvents: function dispatchQueuedEvents() {
		for (var i = 0; i < eventQueue.length; i++) {
			var e = eventQueue[i];
			e.f.apply(null, e.a);
		}
		eventQueue.length = 0;
	}
};

module.exports = TimelineEventDispatcher;
//# sourceMappingURL=../../map/animation-animate/timeline/TimelineEventDispatcher.js.map
