/**
 * @author mattb
 */

"use strict";

var SampleCombiner = require("./SampleCombiner");

/**
 * @constructor
 * @extends SampleCombiner
 */
var AddSampleCombiner = function AddSampleCombiner() {
  SampleCombiner.call(this);
};

AddSampleCombiner.prototype = Object.create(SampleCombiner.prototype);
AddSampleCombiner.prototype.constructor = AddSampleCombiner;

/**
 * Adds the components of sampleNew to the components of samplePrev
 *
 * @param {string} dofName
 * @param {number[]} samplePrev
 * @param {number[]} sampleNew
 * @param {Object.<string, string|number|boolean>} properties
 * @return {number[]}
 * @override
 */
AddSampleCombiner.prototype.combineSamples = function (dofName, samplePrev, sampleNew, properties) // eslint-disable-line no-unused-vars
{
  var r = [];

  for (var i = 0; i < samplePrev.length; i++) {
    if (i < sampleNew.length) {
      r.push(samplePrev[i] + sampleNew[i]);
    } else {
      r.push(samplePrev[i]);
    }
  }

  return r;
};

module.exports = AddSampleCombiner;
//# sourceMappingURL=../../map/animation-animate/timeline/AddSampleCombiner.js.map
