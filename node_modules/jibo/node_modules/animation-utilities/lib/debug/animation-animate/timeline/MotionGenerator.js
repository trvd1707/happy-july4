/**
 * @author mattb
 */

"use strict";

/**
 * @constructor
 */

var MotionGenerator = function MotionGenerator() {};

/* superclass definition:        */
/* eslint-disable no-unused-vars */

/**
 * @returns {string}
 * @virtual
 */
MotionGenerator.prototype.getName = function () {};

/**
 * @returns {Time}
 * @virtual
 */
MotionGenerator.prototype.getStartTime = function () {};

/**
 * @returns {Time}
 * @virtual
 */
MotionGenerator.prototype.getEndTime = function () {};

/**
 * @returns {number}
 * @virtual
 */
MotionGenerator.prototype.getDuration = function () {};

/**
 * @param {string} dofName
 * @returns {Time} returns end time for DOF or null if DOF fully not included
 * @virtual
 */
MotionGenerator.prototype.getEndTimeForDOF = function (dofName) {};

/**
 * @param {string} dofName
 * @returns {number} returns duration for DOF or null if DOF fully not included
 * @virtual
 */
MotionGenerator.prototype.getDurationForDOF = function (dofName) {};

/**
 * Force this motion to end all its tracks at or before cropTime.  If a track
 * already ends before cropTime it is unchanged.  If a a track starts after
 * cropTime it is completely removed.
 *
 * @param {Time} cropTime - crop to end at this time if necessary
 * @param {string[]} cropMask - only crop dofs present in this mask
 * @virtual
 */
MotionGenerator.prototype.cropEnd = function (cropTime, cropMask) {};

/**
 * get all DOFs that are involved in this motion (except for any that
 * have been removed completely via cropping)
 *
 * @returns {string[]}
 * @virtual
 */
MotionGenerator.prototype.getDOFs = function () {};

/**
 * @returns {boolean}
 */
MotionGenerator.prototype.hasEntered = function () {};

/**
 * @returns {boolean}
 */
MotionGenerator.prototype.hasExited = function () {};

MotionGenerator.prototype.notifyUpdateStarted = function (currentTime) {};

MotionGenerator.prototype.notifyUpdateFinished = function () {};

MotionGenerator.prototype.notifyRemoved = function () {};

/**
 * @param {string} dofName
 * @param {LayerState} partialRender
 * @returns {number[]}
 * @virtual
 */
MotionGenerator.prototype.getDOFState = function (dofName, partialRender) {};

module.exports = MotionGenerator;
//# sourceMappingURL=../../map/animation-animate/timeline/MotionGenerator.js.map
