{"version":3,"sources":["animation-visualize/JiboBody.js"],"names":[],"mappings":"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","file":"animation-visualize/JiboBody.js","sourcesContent":["/**\n * @author mattb\n */\n\n\"use strict\";\n\nvar ArticulatedModelLoader = require(\"../ifr-geometry/loaders/ArticulatedModelLoader\");\nvar KinematicsLoader = require(\"../ifr-motion/loaders/KinematicsLoader\");\nvar TextureControl = require(\"../ifr-motion/dofs/TextureControl\");\nvar THREE = require(\"three\");\n\n/**\n * @param {JiboConfig} jiboConfig\n * @private\n * @constructor\n */\nvar JiboBody = function(jiboConfig)\n{\n\t/** @type {JiboConfig} */\n\tthis._config = jiboConfig;\n\n\t/** @type {CachedImageLoader} */\n\tthis._textureLoader = null;\n\n\t/** @type {THREE.Object3D} */\n\tthis._modelRoot = null;\n\t/** @type {ModelControlGroup} */\n\tthis._modelControlGroup = null;\n\n\t/** @type {!boolean} */\n\tthis.loadSucceeded = false;\n\t/** @type {string} */\n\tthis.loadMessage = \"\";\n};\n\n/**\n * @param {CachedImageLoader} textureLoader\n */\nJiboBody.prototype.setTextureLoader = function(textureLoader)\n{\n\tthis._textureLoader = textureLoader;\n};\n\nJiboBody.prototype.load = function(callback)\n{\n\tvar self = this;\n\n\tvar loader = new ArticulatedModelLoader();\n\tloader.modelLoader.defaultMaterial.side = THREE.DoubleSide;\n\n\tloader.load(\"body model\", self._config.getBodyGeometryURL(), self._config.getBodySkeletonURL(), function()\n\t{\n\t\tvar result = loader.getResult();\n\t\tif (result.success)\n\t\t{\n\t\t\tself._modelRoot = result.modelRoot;\n\n\t\t\tvar kinematicsLoader = new KinematicsLoader();\n\t\t\t/** @type {TextureControl.Factory} */\n\t\t\tvar textureFactory = kinematicsLoader.getModelControlFactory(TextureControl.Factory.prototype._controlType);\n\t\t\tif (self._textureLoader)\n\t\t\t{\n\t\t\t\ttextureFactory.setSharedImageLoader(self._textureLoader);\n\t\t\t}\n\n\t\t\tkinematicsLoader.load(self._config.getBodyKinematicsURL(), function()\n\t\t\t{\n\t\t\t\tvar kinematicsResult = kinematicsLoader.getResult();\n\t\t\t\tif (kinematicsResult.success)\n\t\t\t\t{\n\t\t\t\t\tself._modelControlGroup = kinematicsResult.modelControlGroup;\n\t\t\t\t\tself._modelControlGroup.attachToModel(self._modelRoot);\n\n\t\t\t\t\tself.loadSucceeded = true;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tself.loadSucceeded = false;\n\t\t\t\t\tself.loadMessage = \"kinematics load failed with message: \"+kinematicsResult.message+\", URL = \"+kinematicsResult.url;\n\t\t\t\t}\n\t\t\t\tif (callback)\n\t\t\t\t{\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tself.loadSucceeded = false;\n\t\t\tself.loadMessage = \"\"+result.message+\", model URL = \"+result.modelUrl+\", skeleton URL = \"+result.skeletonUrl;\n\t\t\tif (callback)\n\t\t\t{\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t});\n};\n\n/**\n * @return {THREE.Object3D}\n */\nJiboBody.prototype.getModelRoot = function()\n{\n\treturn this._modelRoot;\n};\n\n/**\n * @return {ModelControlGroup}\n */\nJiboBody.prototype.getModelControlGroup = function()\n{\n\treturn this._modelControlGroup;\n};\n\n/**\n * @param {SceneInfo} sceneInfo\n * @return {THREE.WebGLRenderTarget}\n */\nJiboBody.prototype.constructFaceScreenRenderTarget = function(sceneInfo)\n{\n\tvar renderTexture = new THREE.WebGLRenderTarget(800, 450);\n\trenderTexture.minFilter = THREE.LinearFilter;\n\n\tvar faceScreenMesh = this.getModelRoot().getObjectByName(sceneInfo.faceScreenMeshName, true);\n\tfaceScreenMesh.material.map = renderTexture;\n\n\treturn renderTexture;\n};\n\nmodule.exports = JiboBody;\n"],"sourceRoot":"/source/"}