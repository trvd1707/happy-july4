{"version":3,"sources":["animation-visualize/RenderPlugin.js"],"names":[],"mappings":"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","file":"animation-visualize/RenderPlugin.js","sourcesContent":["/**\n * @author jg\n */\n\n\"use strict\";\n\nvar THREE = require(\"three\");\nvar slog = require(\"../ifr-core/SLog\");\n\nvar channel = \"RENDER_PLUGIN\";\n\n/**\n * Base class for plugins that extend the 3D scene displaying Jibo's eye and/or body.\n * Useful for including additional 3D geometry, dynamic lighting, etc.\n *\n * @param {string} name - The unique name for this plugin.\n * @constructor\n */\nvar RenderPlugin = function(name){\n\t/**\n\t * @type {string}\n\t * @private\n\t */\n\tthis._name = name;\n\n\t/**\n\t * @type {SceneObjectCache[]}\n\t * @private\n\t */\n\tthis._installed_cache = null;\n};\n\n/**\n * @param {THREE.Scene} scene\n * @constructor\n * @private\n */\nvar SceneObjectCache = function(scene){\n\t/** @type {THREE.Scene} */\n\tthis._scene = scene;\n\t/** @type {Object.<string,object>} */\n\tthis._objects = {};\n};\n\n/**\n * Helper to keep track of per-scene objects used by this plugin.\n * Use this function to access per-scene objects registered by _registerObjectForScene\n *\n * @param {THREE.Scene} scene - Scene for which to retrieve the object.\n * @param {string} name - Name of the object to retrieve.\n * @return {object}\n * @protected\n */\nRenderPlugin.prototype._getObjectForScene = function(scene, name){\n\tif(this._installed_cache == null){\n\t\treturn null;\n\t}\n\tvar matchingCache = null;\n\tfor(var i = 0; i < this._installed_cache.length; i++){\n\t\tif(scene === this._installed_cache[i]._scene){\n\t\t\tmatchingCache = this._installed_cache[i];\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(matchingCache === null){\n\t\treturn null;\n\t}\n\tif(matchingCache._objects.hasOwnProperty(name)){\n\t\treturn matchingCache._objects[name];\n\t}else{\n\t\treturn null;\n\t}\n};\n\n/**\n * Helper to keep track of per-scene objects used by this plugin.\n * Use this function to clear all saved object data for a scene\n * (usually at the end of plugin uninstall).\n *\n * @param {THREE.Scene} scene - Scene for which to delete object data.\n * @param {string} [name] - Name of the object to delete.  If omitted, delete all saved data for the scene.\n * @protected\n */\nRenderPlugin.prototype._clearObjectForScene = function(scene, name){\n\tif(this._installed_cache == null){\n\t\treturn;\n\t}\n\tfor(var i = 0; i < this._installed_cache.length; i++){\n\t\tif(scene === this._installed_cache[i]._scene){\n\t\t\tif(name == null){ //null or undefined (eqnull)\n\t\t\t\tthis._installed_cache.splice(i, 1);\n\t\t\t}else{\n\t\t\t\tvar matchingCache = this._installed_cache[i];\n\t\t\t\tdelete matchingCache._objects[name];\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n};\n\n/**\n * Helper to keep track of per-scene objects used by this plugin.\n * Use this function to register a per-scene object to be later updated\n * or uninstalled.\n *\n * @param {THREE.Scene} scene - Scene for which to register the object.\n * @param {string} name - Name of the object, for retrieval (should be unique among objects in this scene).\n * @param {object} object - Object to register.\n * @protected\n */\nRenderPlugin.prototype._registerObjectForScene = function(scene, name, object){\n\tif(this._installed_cache == null){\n\t\tthis._installed_cache = [];\n\t}\n\tvar matchingCache = null;\n\tfor(var i = 0; i < this._installed_cache.length; i++){\n\t\tif(scene === this._installed_cache[i]._scene){\n\t\t\tmatchingCache = this._installed_cache[i];\n\t\t\tbreak;\n\t\t}\n\t}\n\tif(matchingCache === null){\n\t\tmatchingCache = new SceneObjectCache(scene);\n\t\tthis._installed_cache.push(matchingCache);\n\t}\n\tif(matchingCache._objects.hasOwnProperty(name)){\n\t\tslog(channel, \"Error, RenderPlugin registering object \\\"\"+name+\"\\\" but one is already registered\");\n\t}\n\tmatchingCache._objects[name] = object;\n};\n\n/**\n * After adding a light to the scene, materials need to be re-initialized.\n * Call this to set \"needsUpdate\" on all materials in a scene.\n *\n * @param {THREE.Scene} scene - Scene to mark for update.\n * @protected\n */\nRenderPlugin.prototype._markMaterialsForUpdate = function(scene){\n\tscene.traverse(function(sceneElement){\n\t\tif(sceneElement instanceof THREE.Mesh && sceneElement.material != null){\n\t\t\tsceneElement.material.needsUpdate = true;\n\t\t}\n\t});\n};\n\n\n/* interface definition:        */\n/* eslint-disable no-unused-vars */\n\n/**\n * Called initially, once per renderer the plugin is installed into.\n *\n * @param {THREE.Scene} bodyScene - Body scene to install any setup into; may be null if renderer is eye-only.\n * @param {THREE.Scene} eyeScene - Eye scene to install any setup into; may be null if renderer is body-only.\n * @abstract\n */\nRenderPlugin.prototype.install = function(bodyScene, eyeScene){};\n\n/**\n * Called whenever RobotRenderer.display is called, after dofValues have been applied\n * to the modelControlGroups. If this plugin is installed into multiple renderers, will be called seperately\n * for each scene.\n *\n * @param {THREE.Scene} bodyScene - Body scene to modify if desired; may be null if renderer is eye-only.\n * @param {THREE.Scene} eyeScene - Eye scene to modify if desired; may be null if renderer is body-only.\n * @param {Object.<string, Object>} dofValues - Update display according to these values.\n * @abstract\n */\nRenderPlugin.prototype.update = function(bodyScene, eyeScene, dofValues){};\n\n/**\n * Called when this module is removed from a renderer it was previously install'ed into,\n * once for each renderer the module is removed from.\n *\n * @param {THREE.Scene} bodyScene - Body scene to removed any modifications from; may be null if renderer is eye-only.\n * @param {THREE.Scene} eyeScene - Eye scene to removed any modifications from; may be null if renderer is body-only.\n * @abstract\n */\nRenderPlugin.prototype.uninstall = function(bodyScene, eyeScene){};\n\n/**\n * Returns the name of the plugin.\n * @returns {string}\n */\nRenderPlugin.prototype.getName = function(){\n\treturn this._name;\n};\n\n\nmodule.exports = RenderPlugin;\n"],"sourceRoot":"/source/"}