{"version":3,"sources":["animation-visualize/DefaultEyeLighting.js"],"names":[],"mappings":"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","file":"animation-visualize/DefaultEyeLighting.js","sourcesContent":["/**\n * @author jg\n */\n\n\"use strict\";\n\n\nvar THREE = require(\"three\");\nvar RenderPlugin = require(\"./RenderPlugin\");\n\n/**\n *\n * @constructor\n * @extends RenderPlugin\n * @private\n */\nvar DefaultEyeLighting = function(){\n\tRenderPlugin.call(this, \"DefaultEyeLighting\");\n\n\t/**\n\t * @type {THREE.Vector3}\n\t * @private\n\t */\n\tthis._mainLightBasePosition = new THREE.Vector3(0, 0.03, 0.09);\n\n\t/**\n\t * main light moves by eye-translation * _mainLightXScale in the x axis\n\t * @type {number}\n\t * @private\n\t */\n\tthis._mainLightXScale = 2;\n\n\t/**\n\t * main light moves by eye-translation * _mainLightYScale in the y axis\n\t * @type {number}\n\t * @private\n\t */\n\tthis._mainLightYScale = 2.7;\n\n\t/**\n\t * factor for LED color to affect LED light.  ledLight = (LED color * _ledEffectAmount)\n\t * @type {number}\n\t * @private\n\t */\n\tthis._ledEffectAmount = 0.2;\n};\n\nDefaultEyeLighting.prototype = Object.create(RenderPlugin.prototype);\nDefaultEyeLighting.prototype.constructor = DefaultEyeLighting;\n\n/**\n * Called initially, once per renderer the plugin is installed into.\n *\n * @param {THREE.Scene} bodyScene - Body scene to install any setup into (may be null if renderer is eye-only).\n * @param {THREE.Scene} eyeScene - Eye scene to install any setup into (may be null if renderer is body-only).\n * @abstract\n */\nDefaultEyeLighting.prototype.install = function(bodyScene, eyeScene){\n\tif(eyeScene!=null){ //null or undefined (eqnull)\n\t\t/** @type {THREE.AmbientLight} */\n\t\tvar ambientLight = new THREE.AmbientLight(0x303030);\n\t\teyeScene.add(ambientLight);\n\t\tthis._registerObjectForScene(eyeScene, \"ambientLight\", ambientLight);\n\n\t\t/** @type {THREE.DirectionalLight} */\n\t\tvar ledLight = new THREE.DirectionalLight(0x000000, 1);\n\t\tledLight.position.set(0, -2, 0);\n\t\teyeScene.add(ledLight);\n\t\tthis._registerObjectForScene(eyeScene, \"ledLight\", ledLight);\n\n\t\t/** @type {THREE.PointLight} */\n\t\tvar pointLight = new THREE.PointLight(0xa0a0a0, 1.2, 1);\n\t\tpointLight.position.copy(this._mainLightBasePosition);\n\t\tthis._registerObjectForScene(eyeScene, \"mainLight\", pointLight);\n\t\teyeScene.add(pointLight);\n\n\t\tthis._markMaterialsForUpdate(eyeScene);\n\t}\n};\n\n/**\n * Called whenever RobotRenderer.display is called, after dofValues have been applied\n * to the modelControlGroups. If this plugin is installed into multiple renderers, will be called separately\n * for each scene.\n *\n * @param {THREE.Scene} bodyScene - Body scene to modify if desired (may be null if renderer is eye-only).\n * @param {THREE.Scene} eyeScene - Eye scene to modify if desired (may be null if renderer is body-only).\n * @param {Object.<string, Object>} dofValues - Update display according to these values.\n * @abstract\n */\nDefaultEyeLighting.prototype.update = function(bodyScene, eyeScene, dofValues){\n\tif(eyeScene!=null) { //null or undefined (eqnull)\n\t\tvar ledLight = this._getObjectForScene(eyeScene, \"ledLight\");\n\t\tif (ledLight != null) { //null or undefined (eqnull)\n\t\t\t//make ledLight shine the color of the LED ring on the eyeball\n\t\t\tvar red = dofValues[\"lightring_redChannelBn_r\"];\n\t\t\tvar green = dofValues[\"lightring_greenChannelBn_r\"];\n\t\t\tvar blue = dofValues[\"lightring_blueChannelBn_r\"];\n\t\t\tif (red != null && green != null && blue != null) { //null or undefined (eqnull)\n\t\t\t\tledLight.color.setRGB(red * this._ledEffectAmount, green * this._ledEffectAmount, blue * this._ledEffectAmount);\n\t\t\t}\n\t\t}\n\t\tvar mainLight = this._getObjectForScene(eyeScene, \"mainLight\");\n\t\tif (mainLight != null) { //null or undefined (eqnull)\n\t\t\t//move the main light towards where the eye is pointing\n\t\t\tvar eyeX = dofValues[\"eyeSubRootBn_t\"];\n\t\t\tvar eyeY = dofValues[\"eyeSubRootBn_t_2\"];\n\t\t\tif (eyeX != null && eyeY != null) { //null or undefined (eqnull)\n\t\t\t\teyeX = this._mainLightBasePosition.x + eyeX * this._mainLightXScale;\n\t\t\t\teyeY = this._mainLightBasePosition.y + eyeY * this._mainLightYScale;\n\t\t\t\tvar eyeZ = this._mainLightBasePosition.z;\n\t\t\t\tmainLight.position.set(eyeX, eyeY, eyeZ);\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Called when this module is removed from a renderer it was previously installed into,\n * once for each renderer the module is removed from.\n *\n * @param {THREE.Scene} bodyScene - Body scene to removed any modifications from (may be null if renderer is eye-only).\n * @param {THREE.Scene} eyeScene - Eye scene to removed any modifications from (may be null if renderer is body-only).\n * @abstract\n */\nDefaultEyeLighting.prototype.uninstall = function(bodyScene, eyeScene){\n\n\tif(eyeScene!=null){ //null or undefined (eqnull)\n\t\tvar toDeleteNames = [\"ambientLight\", \"ledLight\", \"mainLight\"];\n\t\tfor(var i = 0; i < toDeleteNames.length; i++){\n\t\t\tvar light = this._getObjectForScene(eyeScene, toDeleteNames[i]);\n\t\t\tif(light != null){\n\t\t\t\teyeScene.remove(light);\n\t\t\t}\n\t\t}\n\t\tthis._clearObjectForScene(eyeScene);\n\t}\n};\n\n\nmodule.exports = DefaultEyeLighting;\n"],"sourceRoot":"/source/"}