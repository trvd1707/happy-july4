{"version":3,"sources":["ifr-motion/lookat/LookatNodeDistanceReport.js"],"names":[],"mappings":";;;;;AAKA;;;;;;;;;;AASA,IAAI,2BAA2B,SAA3B,wBAA2B,GAAU;;;AAGxC,MAAK,6BAAL,GAAqC,CAArC;;;AAHwC,KAMxC,CAAK,4BAAL,GAAoC,CAApC;;;AANwC,KASxC,CAAK,gCAAL,GAAwC,CAAxC,CATwC;CAAV;;AAY/B,yBAAyB,SAAzB,CAAmC,OAAnC,GAA6C,UAAS,QAAT,EAAmB,WAAnB,EAAgC,cAAhC,EAA+C;;AAE3F,MAAK,6BAAL,GAAqC,CAArC,CAF2F;;AAI3F,MAAK,4BAAL,GAAoC,CAApC,CAJ2F;;AAM3F,MAAK,gCAAL,GAAwC,CAAxC,CAN2F;;AAQ3F,KAAI,WAAW,SAAS,WAAT,EAAX,CARuF;AAS3F,MAAI,IAAI,IAAI,CAAJ,EAAO,IAAI,SAAS,MAAT,EAAiB,GAApC,EAAwC;AACvC,MAAI,UAAU,SAAS,CAAT,CAAV,CADmC;;AAGvC,MAAI,yBAAyB,KAAK,GAAL,CAAS,SAAS,GAAT,CAAa,OAAb,EAAqB,CAArB,IAA0B,eAAe,GAAf,CAAmB,OAAnB,EAA2B,CAA3B,CAA1B,CAAlC,CAHmC;AAIvC,MAAI,wBAAwB,KAAK,GAAL,CAAS,SAAS,GAAT,CAAa,OAAb,EAAqB,CAArB,IAA0B,YAAY,GAAZ,CAAgB,OAAhB,EAAwB,CAAxB,CAA1B,CAAjC,CAJmC;AAKvC,MAAI,4BAA4B,KAAK,GAAL,CAAS,YAAY,GAAZ,CAAgB,OAAhB,EAAwB,CAAxB,IAA6B,eAAe,GAAf,CAAmB,OAAnB,EAA2B,CAA3B,CAA7B,CAArC,CALmC;;AAOvC,MAAG,yBAAyB,KAAK,6BAAL,EAAmC;AAC9D,QAAK,6BAAL,GAAqC,sBAArC,CAD8D;GAA/D;AAGA,MAAG,wBAAwB,KAAK,4BAAL,EAAkC;AAC5D,QAAK,4BAAL,GAAoC,qBAApC,CAD4D;GAA7D;AAGA,MAAG,4BAA4B,KAAK,gCAAL,EAAsC;AACpE,QAAK,gCAAL,GAAwC,yBAAxC,CADoE;GAArE;EAbD;CAT4C;;AA6B7C,OAAO,OAAP,GAAiB,wBAAjB","file":"ifr-motion/lookat/LookatNodeDistanceReport.js","sourcesContent":["/**\n * @author jg\n * Copyright 2015 IF Robots LLC\n */\n\n\"use strict\";\n\n/**\n *\n * @param {Pose} holdPose\n * @param {Pose} optimalPose\n * @param {Pose} filteredOutput\n * @constructor\n */\nvar LookatNodeDistanceReport = function(){\n\n\t/** @type{number} */\n\tthis.highestDistanceHoldToFiltered = 0;\n\n\t/** @type{number} */\n\tthis.highestDistanceHoldToOptimal = 0;\n\n\t/** @type{number} */\n\tthis.highestDistanceOptimalToFiltered = 0;\n};\n\nLookatNodeDistanceReport.prototype.compute = function(holdPose, optimalPose, filteredOutput){\n\n\tthis.highestDistanceHoldToFiltered = 0;\n\n\tthis.highestDistanceHoldToOptimal = 0;\n\n\tthis.highestDistanceOptimalToFiltered = 0;\n\n\tvar dofNames = holdPose.getDOFNames();\n\tfor(var i = 0; i < dofNames.length; i++){\n\t\tvar dofName = dofNames[i];\n\n\t\tvar distanceHoldToFiltered = Math.abs(holdPose.get(dofName,0) - filteredOutput.get(dofName,0));\n\t\tvar distanceHoldToOptimal = Math.abs(holdPose.get(dofName,0) - optimalPose.get(dofName,0));\n\t\tvar distanceOptimalToFiltered = Math.abs(optimalPose.get(dofName,0) - filteredOutput.get(dofName,0));\n\n\t\tif(distanceHoldToFiltered > this.highestDistanceHoldToFiltered){\n\t\t\tthis.highestDistanceHoldToFiltered = distanceHoldToFiltered;\n\t\t}\n\t\tif(distanceHoldToOptimal > this.highestDistanceHoldToOptimal){\n\t\t\tthis.highestDistanceHoldToOptimal = distanceHoldToOptimal;\n\t\t}\n\t\tif(distanceOptimalToFiltered > this.highestDistanceOptimalToFiltered){\n\t\t\tthis.highestDistanceOptimalToFiltered = distanceOptimalToFiltered;\n\t\t}\n\t}\n};\n\n\nmodule.exports = LookatNodeDistanceReport;"],"sourceRoot":"/source/"}