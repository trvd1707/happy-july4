{"version":3,"sources":["ifr-motion/lookat/PoseOffsetFilter.js"],"names":[],"mappings":"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","file":"ifr-motion/lookat/PoseOffsetFilter.js","sourcesContent":["/**\n * @author jg\n * Copyright 2015 IF Robots LLC\n */\n\n\"use strict\";\n\nvar slog = require(\"../../ifr-core/SLog\");\nvar AccelPlanner = require(\"../base/AccelPlanner\");\nvar Pose = require(\"../base/Pose\");\n\nvar channel = \"LOOKAT\";\n\n/**\n *\n * @param {string[]} dofNames\n * @constructor\n */\nvar PoseOffsetFilter = function(dofNames){\n\n\t/** @type {Pose} */\n\tvar targetPose = new Pose(\"POF Target\", dofNames);\n\t/** @type {Pose} */\n\tvar filteredPose = new Pose(\"POF Filtered\", dofNames);\n\n\t/** @type {AccelPlanner} */\n\tvar accelPlanner = new AccelPlanner();\n\n\t/** @type {number} */\n\tvar accLimit = 0.5;\n\n\t/** @type {number} */\n\tvar rejectionDeltaThreshold = 0;\n\n\tvar epsilon = 0.00001;\n\n\t/**\n\t * @param {number} seconds\n\t */\n\tthis.updateByTime = function(seconds){\n\t\t/** @type {number} */\n\t\tvar i;\n\t\t/** @type {string} */\n\t\tvar dofName;\n\t\t/** @type {number} */\n\t\tvar currentPos, currentVel;\n\t\t/** @type {number} */\n\t\tvar target;\n\t\t/** @type {AccelPlan} */\n\t\tvar myPlan;\n\n\t\tvar dofNames = filteredPose.getDOFNames();\n\t\tvar transitionTime = 0;\n\t\tfor(i = 0; i < dofNames.length; i++){\n\t\t\tdofName = dofNames[i];\n\t\t\tcurrentPos = filteredPose.get(dofName, 0);\n\t\t\tcurrentVel = filteredPose.get(dofName, 1);\n\t\t\ttarget = targetPose.get(dofName, 0);\n\n\t\t\tmyPlan = accelPlanner.computeWithFixedAccel(currentVel, 0, target - currentPos, accLimit);\n\t\t\tvar thisDOFTime;\n\t\t\tif(myPlan && myPlan.isConsistent()){\n\t\t\t\tthisDOFTime = myPlan.getTotalTime();\n\t\t\t}else{\n\t\t\t\tslog(channel, \"PoseOffsetFilter(tt) for \"+dofName+\" got invalid plan, using backup time of 10! (currentVel:\"+currentVel+\", target:\"+target+\", currentPos:\"+currentPos+\", acceLimit:\"+accLimit+\")\");\n\t\t\t\tthisDOFTime = 10; //should never happen, but still need to act...  choose large time.\n\t\t\t}\n\t\t\tif (thisDOFTime > transitionTime) {\n\t\t\t\ttransitionTime = thisDOFTime;\n\t\t\t}\n\t\t}\n\n\t\t//console.log(\"Transition time:\"+transitionTime);\n\t\t//transitionTime = 1;\n\n\t\tfor(i = 0; i < dofNames.length; i++){\n\t\t\tdofName = dofNames[i];\n\t\t\tcurrentPos = filteredPose.get(dofName, 0);\n\t\t\tcurrentVel = filteredPose.get(dofName, 1);\n\t\t\ttarget = targetPose.get(dofName, 0);\n\n\t\t\tif(transitionTime > epsilon) {\n\t\t\t\tmyPlan = accelPlanner.computeWithFixedTime(currentVel, 0, target - currentPos, transitionTime);\n\t\t\t\tif(myPlan && myPlan.isConsistent()){\n\t\t\t\t\tvar displacement = myPlan.displacementAtTime(seconds);\n\t\t\t\t\tvar newVelocity = myPlan.velocityAtTime(seconds);\n\t\t\t\t\tfilteredPose.set(dofName, [currentPos+displacement, newVelocity]);\n\t\t\t\t}else{\n\t\t\t\t\tslog(channel, \"PoseOffsetFilter(dp) for \"+dofName+\" got invalid plan, using backup filter! (currentVel:\"+currentVel+\", target:\"+target+\", currentPos:\"+currentPos+\", transitionTime:\"+transitionTime+\")\");\n\t\t\t\t\t//should never happen, but still need to act...  filter towards target, deccelerate a bit.\n\t\t\t\t\tfilteredPose.set(dofName, [currentPos*0.99+target*0.01, currentVel*0.96]);\n\t\t\t\t}\n\t\t\t}// else if time is less than epsilon, simply don't change anything\n\t\t}\n\n\t};\n\n\tthis.resetToTarget = function(){\n\t\tfilteredPose.setPose(targetPose);\n\t};\n\n\t/**\n\t * @param {Pose} newCurrentPose\n\t */\n\tthis.resetToPose = function(newCurrentPose){\n\t\tfilteredPose.setPose(newCurrentPose);\n\t\ttargetPose.setPose(newCurrentPose);\n\t};\n\n\t/**\n\t * @param {Pose} newTargetPose\n\t */\n\tthis.setTarget = function(newTargetPose){\n\t\ttargetPose.setPose(newTargetPose);\n\t};\n\n\t/**\n\t * @param {Pose} inplacePose\n\t */\n\tthis.getTarget = function(inplacePose){\n\t\tinplacePose.setPose(targetPose);\n\t};\n\n\t/**\n\t * Get the current value of the filtered pose.\n\t * Only positions are set in inplacePose.\n\t *\n\t * @param {Pose} inplacePose\n\t */\n\tthis.getValue = function(inplacePose){\n\t\t//inplacePose.setPose(filteredPose);\n\t\tvar dofNames = filteredPose.getDOFNames();\n\t\tfor(var i = 0; i < dofNames.length; i++){\n\t\t\tvar dofName = dofNames[i];\n\t\t\tinplacePose.set(dofName, filteredPose.get(dofName,0), 0);\n\t\t}\n\t};\n\n\t/**\n\t * Get the velocities of this filter, not accounting for the\n\t * motion due to incoming offsets (e.g., the offsets move the positions,\n\t * but do not affect these separately maintained velocities)\n\t *\n\t * @param {Pose} inplacePose - replace velocities in inplacePose with our pre-offset velocities\n\t */\n\tthis.getPreOffsetVelocities = function(inplacePose){\n\t\tvar dofNames = filteredPose.getDOFNames();\n\t\tfor(var i = 0; i < dofNames.length; i++){\n\t\t\tvar dofName = dofNames[i];\n\t\t\tinplacePose.set(dofName, filteredPose.get(dofName,1), 1);\n\t\t}\n\t};\n\n\n\t/**\n\t * Set the threshold for rejecting deltas passed into applyUnfilteredOffset.\n\t * Deltas larger than this threshold will be clamped.\n\t *\n\t * @param {number} rejectDeltasGreaterThan\n\t */\n\tthis.setRejectDeltaThreshold = function(rejectDeltasGreaterThan){\n\t\trejectionDeltaThreshold = rejectDeltasGreaterThan;\n\t};\n\n\t/**\n\t * Get the threshold for rejecting deltas passed into applyUnfilteredOffset.\n\t * Deltas larger than this threshold will be clamped.\n\t *\n\t * @return {number}\n\t */\n\tthis.getRejectDeltaThreshold = function(){\n\t\treturn rejectionDeltaThreshold;\n\t};\n\n\tthis.setAcceleration = function(accel){\n\t\taccLimit = accel;\n\t};\n\n\t/**\n\t * Apple deltaPose as a direct addition to existing filtered pose (position only).\n\t * Pose is applied directly without passing through any filtering.\n\t *\n\t * @param {Pose} deltaPose\n\t */\n\tthis.applyUnfilteredOffset = function(deltaPose){\n\t\tvar dofNames = deltaPose.getDOFNames();\n\t\tfor(var i = 0; i < dofNames.length; i++){\n\t\t\tvar dofName = dofNames[i];\n\t\t\tvar dVal = deltaPose.get(dofName, 0);\n\t\t\tif(rejectionDeltaThreshold!==0 && Math.abs(dVal) > rejectionDeltaThreshold){\n\t\t\t\tslog(channel, \"Clamping application of unfiltered offset of \"+dVal+\" to \"+dofName+\" as it is greater than \"+rejectionDeltaThreshold);\n\t\t\t\tif(dVal < 0){\n\t\t\t\t\tdVal = -rejectionDeltaThreshold;\n\t\t\t\t}else{\n\t\t\t\t\tdVal = rejectionDeltaThreshold;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar fVal = filteredPose.get(dofName, 0);\n\t\t\tif(fVal!==null){ //it is also in the filtered pose\n\t\t\t\tfVal += dVal;\n\t\t\t}\n\t\t\tfilteredPose.set(dofName, fVal, 0);\n\t\t}\n\t};\n};\n\n\nmodule.exports = PoseOffsetFilter;\n"],"sourceRoot":"/source/"}