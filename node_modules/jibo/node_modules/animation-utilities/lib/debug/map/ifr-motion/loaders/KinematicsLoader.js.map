{"version":3,"sources":["ifr-motion/loaders/KinematicsLoader.js"],"names":[],"mappings":"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","file":"ifr-motion/loaders/KinematicsLoader.js","sourcesContent":["/**\n * @author mattb\n * Copyright 2014 IF Robots LLC\n */\n\n\"use strict\";\n\nvar ModelControlGroup = require(\"../dofs/ModelControlGroup\");\nvar RotationControl = require(\"../dofs/RotationControl\");\nvar TranslationControl = require(\"../dofs/TranslationControl\");\nvar TextureControl = require(\"../dofs/TextureControl\");\nvar ColorControl = require(\"../dofs/ColorControl\");\nvar FileTools = require(\"../../ifr-core/FileTools\");\n\n/**\n * @constructor\n */\nvar KinematicsLoadResult = function()\n{\n\t/** @type {string} */\n\tthis.url = null;\n\t/** @type {!boolean} */\n\tthis.success = false;\n\t/** @type {string} */\n\tthis.message = \"\";\n\n\t/** @type {ModelControlGroup} */\n\tthis.modelControlGroup = null;\n};\n\n/**\n * @constructor\n */\nvar KinematicsLoader = function()\n{\n\t/** @type {KinematicsLoadResult} */\n\tthis._result = null;\n\n\t/** @type {Object.<string, ModelControlFactory>} */\n\tthis._modelControlFactoryMap = {};\n\n\t// add default model controls\n\tthis.addModelControlFactory(new RotationControl.Factory());\n\tthis.addModelControlFactory(new TranslationControl.Factory());\n\tthis.addModelControlFactory(new TextureControl.Factory());\n\tthis.addModelControlFactory(new ColorControl.Factory());\n};\n\n/**\n * @param {ModelControlFactory} modelControlFactory\n */\nKinematicsLoader.prototype.addModelControlFactory = function(modelControlFactory)\n{\n\tthis._modelControlFactoryMap[modelControlFactory.getControlType()] = modelControlFactory;\n};\n\n/**\n * @param {string} controlType\n * @return {ModelControlFactory}\n */\nKinematicsLoader.prototype.getModelControlFactory = function(controlType)\n{\n\treturn this._modelControlFactoryMap[controlType];\n};\n\n/**\n * @return {KinematicsLoadResult}\n */\nKinematicsLoader.prototype.getResult = function()\n{\n\treturn this._result;\n};\n\n/**\n * @param {string} url\n * @param callback\n */\nKinematicsLoader.prototype.load = function(url, callback)\n{\n\tvar self = this;\n\tFileTools.loadJSON(url, function(error, data)\n\t{\n\t\tif (error === null)\n\t\t{\n\t\t\tself.parseData(data, url);\n\t\t\tif (callback)\n\t\t\t{\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar result = new KinematicsLoadResult();\n\t\t\tresult.url = url;\n\t\t\tresult.success = false;\n\t\t\tresult.message = error;\n\t\t\tself._result = result;\n\t\t\tif (callback)\n\t\t\t{\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t});\n};\n\n/**\n * @param {Object} jsonData\n * @param {string} dataUrl\n */\nKinematicsLoader.prototype.parseData = function(jsonData, dataUrl)\n{\n\tthis._result = new KinematicsLoadResult();\n\tthis._result.url = dataUrl;\n\n\tif (jsonData.header.fileType !== \"Kinematics\")\n\t{\n\t\tthis._result.success = false;\n\t\tthis._result.message = \"don't know how to handle file type: \"+jsonData.header.fileType;\n\t\treturn;\n\t}\n\n\t/** @type Array.<ModelControl> */\n\tvar controlList = [];\n\tfor (var controlIndex=0; controlIndex<jsonData.content.controls.length; controlIndex++)\n\t{\n\t\tvar controlData = jsonData.content.controls[controlIndex];\n\n\t\tif (!this._modelControlFactoryMap.hasOwnProperty(controlData.controlType))\n\t\t{\n\t\t\tthis._result.success = false;\n\t\t\tthis._result.message = \"no factory installed for control type: \"+controlData.controlType+\", control name = \"+controlData.controlName;\n\t\t\treturn;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar factory = this._modelControlFactoryMap[controlData.controlType];\n\t\t\tvar control = factory.constructFromJson(controlData);\n\n\t\t\tif (control === null)\n\t\t\t{\n\t\t\t\tthis._result.success = false;\n\t\t\t\tthis._result.message = \"factory construction failed, control type = \"+controlData.controlType+\", control name = \"+controlData.controlName;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tcontrolList.push(control);\n\t\t\t}\n\t\t}\n\t}\n\n\tvar controlTypes = Object.keys(this._modelControlFactoryMap);\n\tfor (var typeIndex=0; typeIndex<controlTypes.length; typeIndex++)\n\t{\n\t\tcontrolList = this._modelControlFactoryMap[controlTypes[typeIndex]].postProcessControlList(controlList);\n\t}\n\n\tthis._result.modelControlGroup = new ModelControlGroup();\n\tthis._result.modelControlGroup.setControlList(controlList);\n\tthis._result.success = true;\n};\n\nmodule.exports = KinematicsLoader;"],"sourceRoot":"/source/"}