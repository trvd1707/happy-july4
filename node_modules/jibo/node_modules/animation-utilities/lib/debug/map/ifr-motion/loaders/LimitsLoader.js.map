{"version":3,"sources":["ifr-motion/loaders/LimitsLoader.js"],"names":[],"mappings":";;;;;AAKA;;AAEA,IAAI,YAAY,QAAQ,0BAAR,CAAZ;AACJ,IAAI,OAAO,QAAQ,qBAAR,CAAP;;AAEJ,IAAI,UAAU,eAAV;;;;;AAKJ,IAAI,mBAAmB,SAAnB,gBAAmB,GACvB;;AAEC,MAAK,GAAL,GAAW,IAAX;;AAFD,KAIC,CAAK,OAAL,GAAe,KAAf;;AAJD,KAMC,CAAK,OAAL,GAAe,EAAf;;;AAND,KASC,CAAK,SAAL,GAAiB,IAAjB,CATD;CADuB;;;;;AAgBvB,IAAI,eAAe,SAAf,YAAe,GACnB;;AAEC,MAAK,OAAL,GAAe,IAAf,CAFD;CADmB;;;;;AASnB,aAAa,SAAb,CAAuB,SAAvB,GAAmC,YACnC;AACC,QAAO,KAAK,OAAL,CADR;CADmC;;;;;;AASnC,aAAa,SAAb,CAAuB,IAAvB,GAA8B,UAAS,GAAT,EAAc,QAAd,EAC9B;AACC,KAAI,OAAO,IAAP,CADL;AAEC,WAAU,QAAV,CAAmB,GAAnB,EAAwB,UAAS,KAAT,EAAgB,IAAhB,EACxB;AACC,MAAI,UAAU,IAAV,EACJ;AACC,QAAK,SAAL,CAAe,IAAf,EAAqB,GAArB,EADD;AAEC,OAAI,QAAJ,EACA;AACC,eADD;IADA;GAHD,MASA;AACC,OAAI,SAAS,IAAI,gBAAJ,EAAT,CADL;AAEC,UAAO,GAAP,GAAa,GAAb,CAFD;AAGC,UAAO,OAAP,GAAiB,KAAjB,CAHD;AAIC,UAAO,OAAP,GAAiB,KAAjB,CAJD;AAKC,QAAK,OAAL,GAAe,MAAf,CALD;AAMC,OAAI,QAAJ,EACA;AACC,eADD;IADA;GAfD;EAFuB,CAAxB,CAFD;CAD8B;;;;;;AAgC9B,aAAa,SAAb,CAAuB,SAAvB,GAAmC,UAAS,QAAT,EAAmB,OAAnB,EACnC;AACC,MAAK,OAAL,GAAe,IAAI,gBAAJ,EAAf,CADD;AAEC,MAAK,OAAL,CAAa,GAAb,GAAmB,OAAnB,CAFD;;AAIC,KAAI,SAAS,MAAT,CAAgB,QAAhB,KAA6B,QAA7B,EACJ;AACC,OAAK,OAAL,CAAa,OAAb,GAAuB,KAAvB,CADD;AAEC,OAAK,OAAL,CAAa,OAAb,GAAuB,yCAAuC,SAAS,MAAT,CAAgB,QAAhB,CAF/D;AAGC,SAHD;EADA;;;AAJD,KAYK,YAAY,EAAZ,CAZL;AAaC,KAAI,aAAa,SAAS,OAAT,CAAiB,SAAjB,CAblB;AAcC,KAAI,UAAJ,EACA;AACC,OAAK,IAAI,IAAE,CAAF,EAAK,IAAE,WAAW,MAAX,EAAmB,GAAnC,EACA;AACC,OAAI,UAAU,WAAW,CAAX,EAAc,OAAd,CADf;AAEC,OAAI,YAAY,WAAW,CAAX,EAAc,MAAd,CAFjB;AAGC,OAAI,YAAY,SAAZ,IAAyB,YAAY,IAAZ,EAC7B;AACC,SAAK,OAAL,EAAc,2EAAd,EADD;IADA,MAIK,IAAI,cAAc,SAAd,IAA2B,cAAc,IAAd,EACpC;AACC,SAAK,OAAL,EAAc,0EAAd,EADD;IADK,MAKL;;AAEC,cAAU,OAAV,IAAqB,SAArB,CAFD;IALK;GARN;EAFD;;AAsBA,MAAK,OAAL,CAAa,SAAb,GAAyB,SAAzB,CApCD;AAqCC,MAAK,OAAL,CAAa,OAAb,GAAuB,IAAvB,CArCD;CADmC;;AA0CnC,OAAO,OAAP,GAAiB,YAAjB","file":"ifr-motion/loaders/LimitsLoader.js","sourcesContent":["/**\n * @author mattb\n * Copyright 2015 IF Robots LLC\n */\n\n\"use strict\";\n\nvar FileTools = require(\"../../ifr-core/FileTools\");\nvar slog = require(\"../../ifr-core/SLog\");\n\nvar channel = \"MODEL_LOADING\";\n\n/**\n * @constructor\n */\nvar LimitsLoadResult = function()\n{\n\t/** @type {string} */\n\tthis.url = null;\n\t/** @type {!boolean} */\n\tthis.success = false;\n\t/** @type {string} */\n\tthis.message = \"\";\n\n\t/** @type {Object.<string, Object>} */\n\tthis.dofLimits = null;\n};\n\n/**\n * @constructor\n */\nvar LimitsLoader = function()\n{\n\t/** @type {LimitsLoadResult} */\n\tthis._result = null;\n};\n\n/**\n * @return {LimitsLoadResult}\n */\nLimitsLoader.prototype.getResult = function()\n{\n\treturn this._result;\n};\n\n/**\n * @param {string} url\n * @param callback\n */\nLimitsLoader.prototype.load = function(url, callback)\n{\n\tvar self = this;\n\tFileTools.loadJSON(url, function(error, data)\n\t{\n\t\tif (error === null)\n\t\t{\n\t\t\tself.parseData(data, url);\n\t\t\tif (callback)\n\t\t\t{\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar result = new LimitsLoadResult();\n\t\t\tresult.url = url;\n\t\t\tresult.success = false;\n\t\t\tresult.message = error;\n\t\t\tself._result = result;\n\t\t\tif (callback)\n\t\t\t{\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t});\n};\n\n/**\n * @param {Object} jsonData\n * @param {string} dataUrl\n */\nLimitsLoader.prototype.parseData = function(jsonData, dataUrl)\n{\n\tthis._result = new LimitsLoadResult();\n\tthis._result.url = dataUrl;\n\n\tif (jsonData.header.fileType !== \"Limits\")\n\t{\n\t\tthis._result.success = false;\n\t\tthis._result.message = \"don't know how to handle file type: \"+jsonData.header.fileType;\n\t\treturn;\n\t}\n\n\t/** @type {Object.<string, Object>} */\n\tvar dofLimits = {};\n\tvar limitsList = jsonData.content.dofLimits;\n\tif (limitsList)\n\t{\n\t\tfor (var i=0; i<limitsList.length; i++)\n\t\t{\n\t\t\tvar dofName = limitsList[i].dofName;\n\t\t\tvar limitData = limitsList[i].limits;\n\t\t\tif (dofName === undefined || dofName === null)\n\t\t\t{\n\t\t\t\tslog(channel, \"LimitsLoader: skipping limit data with null or undefined dofName property\");\n\t\t\t}\n\t\t\telse if (limitData === undefined || limitData === null)\n\t\t\t{\n\t\t\t\tslog(channel, \"LimitsLoader: skipping limit data with null or undefined limits property\");\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// limit data ok!\n\t\t\t\tdofLimits[dofName] = limitData;\n\t\t\t}\n\t\t}\n\t}\n\n\tthis._result.dofLimits = dofLimits;\n\tthis._result.success = true;\n};\n\n\nmodule.exports = LimitsLoader;"],"sourceRoot":"/source/"}