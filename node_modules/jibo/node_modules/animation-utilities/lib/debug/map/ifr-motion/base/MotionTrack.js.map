{"version":3,"sources":["ifr-motion/base/MotionTrack.js"],"names":[],"mappings":";;;;;AAKA;;;;;;;;;AAQA,IAAI,cAAc,SAAd,WAAc,CAAS,IAAT,EAAe,UAAf,EAA2B,MAA3B,EAClB;;AAEC,MAAK,IAAL,GAAY,IAAZ;;AAFD,KAIC,CAAK,UAAL,GAAkB,UAAlB;;AAJD,KAMC,CAAK,MAAL,GAAc,MAAd,CAND;CADkB;;AAUlB,YAAY,SAAZ,CAAsB,KAAtB,GAA8B,YAAU;AACvC,QAAO,IAAI,WAAJ,CAAgB,KAAK,IAAL,EAAW,KAAK,UAAL,CAAgB,KAAhB,EAA3B,EAAoD,KAAK,MAAL,CAA3D,CADuC;CAAV;;;;;AAO9B,YAAY,SAAZ,CAAsB,OAAtB,GAAgC,YAChC;AACC,QAAO,KAAK,IAAL,CADR;CADgC;;;;;AAQhC,YAAY,SAAZ,CAAsB,SAAtB,GAAkC,YAClC;AACC,QAAO,KAAK,MAAL,CADR;CADkC;;;;;AAQlC,YAAY,SAAZ,CAAsB,aAAtB,GAAsC,YACtC;AACC,QAAO,KAAK,UAAL,CADR;CADsC;;;;;;;AAUtC,YAAY,SAAZ,CAAsB,aAAtB,GAAsC,UAAS,IAAT,EAAe,YAAf,EACtC;AACC,KAAI,KAAK,UAAL,CAAgB,IAAhB,OAA2B,CAA3B,EACJ;AACC,SAAO,IAAP,CADD;EADA;;AAKA,KAAI,YAAY,KAAK,UAAL,CAAgB,mBAAhB,CAAoC,IAApC,CAAZ,CANL;AAOC,KAAI,aAAa,YAAU,CAAV,CAPlB;AAQC,aAAY,KAAK,GAAL,CAAS,SAAT,EAAoB,CAApB,CAAZ,CARD;AASC,cAAa,KAAK,GAAL,CAAS,UAAT,EAAqB,KAAK,UAAL,CAAgB,IAAhB,KAAuB,CAAvB,CAAlC,CATD;;AAWC,KAAI,YAAY,KAAK,UAAL,CAAgB,YAAhB,CAA6B,SAA7B,CAAZ,CAXL;AAYC,KAAI,aAAa,KAAK,UAAL,CAAgB,YAAhB,CAA6B,UAA7B,CAAb,CAZL;AAaC,KAAI,KAAJ,CAbD;AAcC,KAAI,cAAc,UAAd,EACJ;AACC,UAAQ,CAAR,CADD;EADA,MAKA;AACC,UAAQ,CAAC,OAAO,SAAP,CAAD,IAAsB,aAAa,SAAb,CAAtB,CADT;EALA;;AASA,KAAI,WAAW,KAAK,UAAL,CAAgB,OAAhB,CAAwB,SAAxB,CAAX,CAvBL;AAwBC,KAAI,YAAY,KAAK,UAAL,CAAgB,OAAhB,CAAwB,UAAxB,CAAZ,CAxBL;;AA0BC,QAAO,aAAa,WAAb,CAAyB,QAAzB,EAAmC,SAAnC,EAA8C,KAA9C,CAAP,CA1BD;CADsC;;AA8BtC,OAAO,OAAP,GAAiB,WAAjB","file":"ifr-motion/base/MotionTrack.js","sourcesContent":["/**\n * @author mattb\n * Copyright 2015 IF Robots LLC\n */\n\n\"use strict\";\n\n/**\n * @param {string} name the name of the track (usually the name of the associated DOF/control)\n * @param {TimestampedBuffer} motionData motion data\n * @param {number} length length of motion in seconds\n * @constructor\n */\nvar MotionTrack = function(name, motionData, length)\n{\n\t/** @type {string} */\n\tthis.name = name;\n\t/** @type {TimestampedBuffer} */\n\tthis.motionData = motionData;\n\t/** @type {number} */\n\tthis.length = length;\n};\n\nMotionTrack.prototype.clone = function(){\n\treturn new MotionTrack(this.name, this.motionData.clone(), this.length);\n};\n\n/**\n * @return {string}\n */\nMotionTrack.prototype.getName = function()\n{\n\treturn this.name;\n};\n\n/**\n * @return {number}\n */\nMotionTrack.prototype.getLength = function()\n{\n\treturn this.length;\n};\n\n/**\n * @return {TimestampedBuffer}\n */\nMotionTrack.prototype.getMotionData = function()\n{\n\treturn this.motionData;\n};\n\n/**\n * @param {number} time\n * @param {Interpolators.BaseInterpolator} interpolator\n * @return {*}\n */\nMotionTrack.prototype.getDataAtTime = function(time, interpolator)\n{\n\tif (this.motionData.size() === 0)\n\t{\n\t\treturn null;\n\t}\n\n\tvar leftIndex = this.motionData.getLeftIndexForTime(time);\n\tvar rightIndex = leftIndex+1;\n\tleftIndex = Math.max(leftIndex, 0);\n\trightIndex = Math.min(rightIndex, this.motionData.size()-1);\n\n\tvar leftStamp = this.motionData.getTimestamp(leftIndex);\n\tvar rightStamp = this.motionData.getTimestamp(rightIndex);\n\tvar alpha;\n\tif (leftStamp === rightStamp)\n\t{\n\t\talpha = 0;\n\t}\n\telse\n\t{\n\t\talpha = (time - leftStamp) / (rightStamp - leftStamp);\n\t}\n\n\tvar leftData = this.motionData.getData(leftIndex);\n\tvar rightData = this.motionData.getData(rightIndex);\n\n\treturn interpolator.interpolate(leftData, rightData, alpha);\n};\n\nmodule.exports = MotionTrack;"],"sourceRoot":"/source/"}