{"version":3,"sources":["ifr-motion/base/SeriesAlignedAxesTargetSelector.js"],"names":[],"mappings":";;;;;AAKA;;AAEA,IAAI,0BAA0B,QAAQ,2BAAR,CAA1B;AACJ,IAAI,aAAa,QAAQ,cAAR,CAAb;;;;;;;;;;;;;AAaJ,IAAI,kCAAkC,SAAlC,+BAAkC,CAAS,OAAT,EAAkB,cAAlB,EAAkC,gBAAlC,EAAmD;AACxF,0BAAwB,IAAxB,CAA6B,IAA7B,EAAmC,OAAnC,EADwF;AAExF,OAAK,eAAL,GAAuB,cAAvB,CAFwF;AAGxF,OAAK,iBAAL,GAAyB,gBAAzB,CAHwF;CAAnD;;AAMtC,gCAAgC,SAAhC,GAA4C,OAAO,MAAP,CAAc,wBAAwB,SAAxB,CAA1D;AACA,gCAAgC,SAAhC,CAA0C,WAA1C,GAAwD,+BAAxD;;;;;;;;;;;;;;;;;;AAkBA,gCAAgC,SAAhC,CAA0C,yBAA1C,GAAsE,UAAS,WAAT,EAAsB,UAAtB,EAAiC;;AAEtG,MAAI,eAAe,CAAf,CAFkG;AAGtG,OAAI,IAAI,IAAI,CAAJ,EAAO,IAAI,KAAK,eAAL,CAAqB,MAArB,EAA6B,GAAhD,EAAoD;AACnD,QAAI,iBAAiB,YAAY,GAAZ,CAAgB,KAAK,eAAL,CAAqB,CAArB,CAAhB,EAAyC,CAAzC,CAAjB,CAD+C;AAEnD,QAAI,gBAAgB,WAAW,GAAX,CAAe,KAAK,eAAL,CAAqB,CAArB,CAAf,EAAwC,CAAxC,CAAhB,CAF+C;AAGnD,QAAI,gBAAgB,gBAAgB,cAAhB,CAH+B;AAInD,oBAAgB,KAAK,iBAAL,CAAuB,CAAvB,IAA4B,aAA5B,CAJmC;GAApD;;AAOA,MAAI,mBAAmB,WAAW,GAAX,CAAe,KAAK,UAAL,EAAf,EAAkC,CAAlC,CAAnB,CAVkG;AAWtG,MAAI,qBAAqB,YAAY,GAAZ,CAAgB,KAAK,UAAL,EAAhB,EAAmC,CAAnC,CAArB,CAXkG;AAYtG,MAAI,oBAAoB,qBAAqB,YAArB,CAZ8E;;AActG,SAAO,WAAW,yBAAX,CAAqC,gBAArC,EAAuD,iBAAvD,CAAP,CAdsG;CAAjC;;AAkBtE,OAAO,OAAP,GAAiB,+BAAjB","file":"ifr-motion/base/SeriesAlignedAxesTargetSelector.js","sourcesContent":["/**\n * @author jg\n * Copyright 2015 IF Robots LLC\n */\n\n\"use strict\";\n\nvar CyclicDOFTargetSelector = require(\"./CyclicDOFTargetSelector\");\nvar CyclicMath = require(\"./CyclicMath\");\n\n/**\n * CyclicDOFTargetSelector for the case where the parent motion we are compensating\n * for is on-axis with our own motion, and therefore the solution can be a computed\n * as a scalar without 3d math.\n *\n * @param {string} dofName\n * @param {string[]} alignedParents - all parents that contribute to motion of this joint (all must be axis aligned)\n * @param {number[]} parentDirections - sign of the direction for these parents, relative to us (-1 or 1)\n * @constructor\n * @extends CyclicDOFTargetSelector\n */\nvar SeriesAlignedAxesTargetSelector = function(dofName, alignedParents, parentDirections){\n\tCyclicDOFTargetSelector.call(this, dofName);\n\tthis._alignedParents = alignedParents;\n\tthis._parentDirections = parentDirections;\n};\n\nSeriesAlignedAxesTargetSelector.prototype = Object.create(CyclicDOFTargetSelector.prototype);\nSeriesAlignedAxesTargetSelector.prototype.constructor = SeriesAlignedAxesTargetSelector;\n\n/**\n *\n * Compute value for our DOF, rotationally equivalent to the value it has\n * in targetPose, but that causes it to go the short (or the otherwise\n * preferable) way around from currentPose\n *\n * This may rely on the currentPose and targetPose values being the correct\n * sign, i.e., the ancestor values are going to be used as-is, not same-sided\n * after this point. (Except for the sign of our dof in targetPose pose, of\n * course, which is what we're computing)\n *\n * @param {Pose} currentPose - current pose (should include current position of theDOF)\n * @param {Pose} targetPose - target pose (should include target position of theDOF)\n * @override\n * @return {number} target for this DOF (from targetPose), made into the \"close-path\" equivalent value for theDOF\n */\nSeriesAlignedAxesTargetSelector.prototype.closestEquivalentRotation = function(currentPose, targetPose){\n\t//find our motion from current to target due to our parents\n\tvar parentMotion = 0;\n\tfor(var i = 0; i < this._alignedParents.length; i++){\n\t\tvar aParentCurrent = currentPose.get(this._alignedParents[i], 0);\n\t\tvar aParentTarget = targetPose.get(this._alignedParents[i], 0);\n\t\tvar aParentMotion = aParentTarget - aParentCurrent;\n\t\tparentMotion += this._parentDirections[i] * aParentMotion;\n\t}\n\n\tvar finalOrientation = targetPose.get(this.getDOFName(), 0);\n\tvar initialOrientation = currentPose.get(this.getDOFName(), 0);\n\tvar referenceRotation = initialOrientation - parentMotion;\n\n\treturn CyclicMath.closestEquivalentRotation(finalOrientation, referenceRotation);\n};\n\n\nmodule.exports = SeriesAlignedAxesTargetSelector;\n\n"],"sourceRoot":"/source/"}