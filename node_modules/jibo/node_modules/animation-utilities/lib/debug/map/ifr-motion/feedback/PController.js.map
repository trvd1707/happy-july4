{"version":3,"sources":["ifr-motion/feedback/PController.js"],"names":[],"mappings":"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","file":"ifr-motion/feedback/PController.js","sourcesContent":["/**\n * @author jg\n * Copyright 2015 IF Robots LLC\n */\n\n\"use strict\";\n\nvar Bakery = require(\"../../ifr-core/Bakery\");\nvar CyclicMath = require(\"../base/CyclicMath\");\n\nvar PController = function(){\n\t/** @type {Time} */\n\tthis._targetTime = null;\n\t/** @type {number} */\n\tthis._targetPosition = null;\n\t/** @type {number} */\n\tthis._targetVelocity = null;\n\n\t/** @type {Time} */\n\tthis._lastObservationTime = null;\n\t/** @type {number} */\n\tthis._lastObservedPosition = null;\n\t/** @type {number} */\n\tthis._lastObservedVelocity = null;\n\t/** @type {number} */\n\tthis._lastReportedTargetVelocity = null;\n\n\t/** @type {number} */\n\tthis._commandVelocity = 0;\n\t/** @type {number} */\n\tthis._commandAcceleration = 1;\n\n\t/** @type {number} */\n\tthis._lastError = 0;\n\n\tthis._window = \"FeedbackController\";\n};\n\nPController.prototype.setTarget = function(time, position, velocity){\n\tthis._targetTime = time;\n\tthis._targetPosition = position;\n\tthis._targetVelocity = velocity;\n};\n\nPController.prototype.acceptFeedback = function(receivedTime, measuredPosition, measuredVelocity, targetVelocity){\n\tthis._lastObservationTime = receivedTime;\n\tthis._lastObservedPosition = measuredPosition;\n\tthis._lastObservedVelocity = measuredVelocity;\n\tthis._lastReportedTargetVelocity = targetVelocity;\n};\n\n/**\n *\n * @param {Time} time\n */\nPController.prototype.calculateForTime = function(time){\n\tif(this._lastObservationTime !== null && this._targetTime !== null){\n\t\tvar targetElapsed = time.subtract(this._targetTime);\n\t\tvar currentTarget = this._targetPosition + this._targetVelocity * targetElapsed;\n\n\t\tvar pGain = Bakery.getFloat(\"P Gain\", 0, 10, 2, this._window);\n\t\tvar dGain = Bakery.getFloat(\"D Gain\", 0, 10, 0, this._window);\n\n\t\tvar useActual = this.predictedPosition(time);\n\t\tuseActual = CyclicMath.closestEquivalentRotation(useActual, currentTarget);\n\n\t\tvar error = currentTarget - useActual;\n\t\tvar dError = error - this._lastError;\n\n\t\tvar commandVelocity = pGain * error + dGain * dError;\n\n\t\tthis._lastError = error;\n\n\t\tvar maxVel = Bakery.getFloat(\"P Gain Vel Cap\", 0, 100, 100, this._window);\n\n\t\tcommandVelocity = Math.max(-maxVel, Math.min(maxVel, commandVelocity));\n\n\t\tthis._commandVelocity = commandVelocity;\n\t\tthis._commandAcceleration = Bakery.getFloat(\"Advertise Accel Limit\", 0, 50, 30, this._window);\n\n\t}\n};\n\n/**\n *\n * @param {Time} time\n */\nPController.prototype.predictedPosition = function(time){ // eslint-disable-line no-unused-vars\n\treturn this._lastObservedPosition; //TODO\n};\n\n\nPController.prototype.getCommandVelocity = function(){\n\treturn this._commandVelocity;\n};\n\nPController.prototype.getCommandAcceleration = function(){\n\treturn this._commandAcceleration;\n};\n\n/**\n *\n * @param {Time} timeSent\n * @param {number} commandVelocity\n * @param {number} velocityLimit\n */\nPController.prototype.noteCommandSent = function(timeSent, commandVelocity, velocityLimit){ // eslint-disable-line no-unused-vars\n\t//TODO\n};\n\n\nmodule.exports = PController;"],"sourceRoot":"/source/"}