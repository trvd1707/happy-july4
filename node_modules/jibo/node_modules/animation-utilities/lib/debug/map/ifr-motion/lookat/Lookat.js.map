{"version":3,"sources":["ifr-motion/lookat/Lookat.js"],"names":[],"mappings":";;;;;AAKA;;AAEA,IAAI,OAAO,QAAQ,cAAR,CAAP;;;;;;;;AAQJ,IAAI,SAAS,SAAT,MAAS,CAAS,WAAT,EAAsB,uBAAtB,EAA8C;AAC1D,KAAI,kBAAkB,EAAlB;;;AADsD,KAI1D,CAAK,YAAL,GAAoB,WAApB,CAJ0D;AAK1D,MAAI,IAAI,IAAI,CAAJ,EAAO,IAAI,KAAK,YAAL,CAAkB,MAAlB,EAA0B,GAA7C,EAAiD;AAChD,MAAI,aAAa,wBAAwB,OAAxB,CAAgC,wBAAwB,oBAAxB,GAA+C,gCAA/C,CAAgF,KAAK,YAAL,CAAkB,CAAlB,EAAqB,OAArB,EAAhF,CAAhC,EAAiJ,IAAjJ,CAAb,CAD4C;AAEhD,OAAK,YAAL,CAAkB,CAAlB,EAAqB,cAArB,CAAoC,UAApC;;;AAFgD,MAK5C,kBAAkB,WAAW,WAAX,EAAlB,CAL4C;AAMhD,OAAI,IAAI,IAAI,CAAJ,EAAO,IAAI,gBAAgB,MAAhB,EAAwB,GAA3C,EAA+C;AAC9C,OAAG,gBAAgB,OAAhB,CAAwB,gBAAgB,CAAhB,CAAxB,IAA8C,CAA9C,EAAgD;AAClD,oBAAgB,IAAhB,CAAqB,gBAAgB,CAAhB,CAArB,EADkD;IAAnD;GADD;EAND;;;AAL0D,KAmB1D,CAAK,aAAL,GAAqB,IAAI,IAAJ,CAAS,UAAT,EAAqB,eAArB,CAArB,CAnB0D;CAA9C;;;;;;;;AA4Bb,OAAO,SAAP,CAAiB,YAAjB,GAAgC,UAAS,eAAT,EAA0B,cAA1B,EAA0C,MAA1C,EAAiD;AAChF,KAAG,oBAAkB,cAAlB,EAAkC;AACpC,iBAAe,OAAf,CAAuB,eAAvB,EADoC;EAArC;;AAIA,MAAK,aAAL,CAAmB,OAAnB,CAA2B,eAA3B,EALgF;;AAOhF,MAAI,IAAI,IAAI,CAAJ,EAAO,IAAI,KAAK,YAAL,CAAkB,MAAlB,EAA0B,GAA7C,EAAiD;AAChD,OAAK,YAAL,CAAkB,CAAlB,EAAqB,OAArB,CAA6B,KAAK,aAAL,EAAoB,KAAK,aAAL,EAAoB,MAArE,EADgD;EAAjD;AAGA,gBAAe,OAAf,CAAuB,KAAK,aAAL,CAAvB,CAVgF;CAAjD;;;;;AAgBhC,OAAO,SAAP,CAAiB,OAAjB,GAA2B,YAAU;AACpC,KAAI,WAAW,EAAX,CADgC;AAEpC,MAAI,IAAI,IAAI,CAAJ,EAAO,IAAI,KAAK,YAAL,CAAkB,MAAlB,EAA0B,GAA7C,EAAkD;AACjD,aAAW,SAAS,MAAT,CAAgB,KAAK,YAAL,CAAkB,CAAlB,EAAqB,OAArB,EAAhB,CAAX,CADiD;EAAlD;AAGA,QAAO,QAAP,CALoC;CAAV;;;;;AAW3B,OAAO,SAAP,CAAiB,YAAjB,GAAgC,YAAU;AACzC,QAAO,KAAK,aAAL,CAAmB,WAAnB,EAAP,CADyC;CAAV;;AAIhC,OAAO,OAAP,GAAiB,MAAjB","file":"ifr-motion/lookat/Lookat.js","sourcesContent":["/**\n * @author jg\n * Copyright 2015 IF Robots LLC\n */\n\n\"use strict\";\n\nvar Pose = require(\"../base/Pose\");\n\n/**\n *\n * @param {LookatNode[]} lookatNodes - assumed to be in order root to leaf\n * @param {KinematicGroup} kinematicGroupPrototype\n * @constructor\n */\nvar Lookat = function(lookatNodes, kinematicGroupPrototype){\n\tvar allRequiredDOFs = [];\n\n\t/** @type {LookatNode[]} */\n\tthis._lookatNodes = lookatNodes;\n\tfor(var i = 0; i < this._lookatNodes.length; i++){\n\t\tvar localGroup = kinematicGroupPrototype.getCopy(kinematicGroupPrototype.getModelControlGroup().getRequiredTransformNamesForDOFs(this._lookatNodes[i].getDOFs()), true);\n\t\tthis._lookatNodes[i].connectToGroup(localGroup);\n\n\t\t//local group will include all required ancestor dofs\n\t\tvar dofsForThisLook = localGroup.getDOFNames();\n\t\tfor(var j = 0; j < dofsForThisLook.length; j++){\n\t\t\tif(allRequiredDOFs.indexOf(dofsForThisLook[j]) < 0){\n\t\t\t\tallRequiredDOFs.push(dofsForThisLook[j]);\n\t\t\t}\n\t\t}\n\t}\n\n\t/** @type {Pose} */\n\tthis._internalPose = new Pose(\"LookPose\", allRequiredDOFs);\n};\n\n/**\n *\n * @param {Pose} poseCurrentPose - should contain at least nodes of relevance to the computation, e.g. ancestor nodes\n * @param {Pose} poseInplaceOut - output values will be stored here\n * @param {THREE.Vector3} target - target in world space\n */\nLookat.prototype.generatePose = function(poseCurrentPose, poseInplaceOut, target){\n\tif(poseCurrentPose!==poseInplaceOut) {\n\t\tposeInplaceOut.setPose(poseCurrentPose);\n\t}\n\n\tthis._internalPose.setPose(poseCurrentPose);\n\n\tfor(var i = 0; i < this._lookatNodes.length; i++){\n\t\tthis._lookatNodes[i].getPose(this._internalPose, this._internalPose, target);\n\t}\n\tposeInplaceOut.setPose(this._internalPose);\n};\n\n/**\n * @return {string[]} dof names that can be affected by this lookat\n */\nLookat.prototype.getDOFs = function(){\n\tvar dofNames = [];\n\tfor(var i = 0; i < this._lookatNodes.length; i++) {\n\t\tdofNames = dofNames.concat(this._lookatNodes[i].getDOFs());\n\t}\n\treturn dofNames;\n};\n\n/**\n * @returns {Array.<string>} all dof names that this lookat affects, or that can affect this lookat (ancestors)\n */\nLookat.prototype.getStateDOFs = function(){\n\treturn this._internalPose.getDOFNames();\n};\n\nmodule.exports = Lookat;"],"sourceRoot":"/source/"}