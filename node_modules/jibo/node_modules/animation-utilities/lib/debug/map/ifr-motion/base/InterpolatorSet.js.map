{"version":3,"sources":["ifr-motion/base/InterpolatorSet.js"],"names":[],"mappings":";;;;;AAKA;;AAEA,IAAI,gBAAgB,QAAQ,iBAAR,CAAhB;AACJ,IAAI,iBAAiB,QAAQ,wBAAR,CAAjB;;;;AAIJ,IAAI,kBAAkB,SAAlB,eAAkB,GACtB;;AAEC,MAAK,eAAL,GAAuB,EAAvB,CAFD;CADsB;;;;;;;AAWtB,gBAAgB,SAAhB,CAA0B,eAA1B,GAA4C,UAAS,OAAT,EAAkB,YAAlB,EAC5C;AACC,MAAK,eAAL,CAAqB,OAArB,IAAgC,YAAhC,CADD;CAD4C;;;;;;;AAU5C,gBAAgB,SAAhB,CAA0B,eAA1B,GAA4C,UAAS,OAAT,EAC5C;AACC,KAAI,eAAe,KAAK,eAAL,CAAqB,OAArB,CAAf,CADL;AAEC,QAAO,YAAC,KAAiB,SAAjB,GAA8B,YAA/B,GAA8C,IAA9C,CAFR;CAD4C;;;;;;AAU5C,gBAAgB,SAAhB,CAA0B,oBAA1B,GAAiD,UAAS,iBAAT,EACjD;AACC,KAAI,cAAc,kBAAkB,cAAlB,EAAd,CADL;AAEC,MAAK,IAAI,eAAa,CAAb,EAAgB,eAAa,YAAY,MAAZ,EAAoB,cAA1D,EACA;AACC,MAAI,eAAe,YAAY,YAAZ,CAAf,CADL;AAEC,MAAI,WAAW,aAAa,WAAb,EAAX,CAFL;;AAIC,OAAK,IAAI,WAAS,CAAT,EAAY,WAAS,SAAS,MAAT,EAAiB,UAA/C,EACA;AACC,OAAI,wBAAwB,cAAxB,EACJ;AACC,SAAK,eAAL,CAAqB,SAAS,QAAT,CAArB,EAAyC,IAAI,cAAc,qBAAd,CAAoC,IAAI,cAAc,gBAAd,EAA5C,CAAzC,EADD;IADA,MAKA;AACC,SAAK,eAAL,CAAqB,SAAS,QAAT,CAArB,EAAyC,IAAI,cAAc,qBAAd,CAAoC,IAAI,cAAc,kBAAd,EAA5C,CAAzC,EADD;IALA;GAFD;EALD;CAHgD;;AAsBjD,OAAO,OAAP,GAAiB,eAAjB","file":"ifr-motion/base/InterpolatorSet.js","sourcesContent":["/**\n * @author mattb\n * Copyright 2015 IF Robots LLC\n */\n\n\"use strict\";\n\nvar Interpolators = require(\"./Interpolators\");\nvar TextureControl = require(\"../dofs/TextureControl\");\n/**\n * @constructor\n */\nvar InterpolatorSet = function()\n{\n\t/** @type {Object.<string, Interpolators.BaseInterpolator>} */\n\tthis.interpolatorSet = {};\n};\n\n/**\n * associate an interpolator with a specified DOF\n * @param {string} dofName\n * @param {Interpolators.BaseInterpolator} interpolator\n */\nInterpolatorSet.prototype.addInterpolator = function(dofName, interpolator)\n{\n\tthis.interpolatorSet[dofName] = interpolator;\n};\n\n/**\n * get the interpolator associated with the specified DOF, or null if none is set\n * @param {string} dofName\n * @return {Interpolators.BaseInterpolator}\n */\nInterpolatorSet.prototype.getInterpolator = function(dofName)\n{\n\tvar interpolator = this.interpolatorSet[dofName];\n\treturn (interpolator !== undefined) ? interpolator : null;\n};\n\n/**\n * add interpolators for all of the DOFs in the specified ModelControlGroup\n * @param {ModelControlGroup} modelControlGroup\n */\nInterpolatorSet.prototype.addModelControlGroup = function(modelControlGroup)\n{\n\tvar controlList = modelControlGroup.getControlList();\n\tfor (var controlIndex=0; controlIndex<controlList.length; controlIndex++)\n\t{\n\t\tvar modelControl = controlList[controlIndex];\n\t\tvar dofNames = modelControl.getDOFNames();\n\n\t\tfor (var dofIndex=0; dofIndex<dofNames.length; dofIndex++)\n\t\t{\n\t\t\tif (modelControl instanceof TextureControl)\n\t\t\t{\n\t\t\t\tthis.addInterpolator(dofNames[dofIndex], new Interpolators.DOFSampleInterpolator(new Interpolators.StepInterpolator()));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.addInterpolator(dofNames[dofIndex], new Interpolators.DOFSampleInterpolator(new Interpolators.LinearInterpolator()));\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = InterpolatorSet;"],"sourceRoot":"/source/"}