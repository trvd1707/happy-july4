{"version":3,"sources":["ifr-motion/feedback/PosVelControllerSim.js"],"names":[],"mappings":";;;;;AAKA;;AAEA,IAAI,0BAA0B,QAAQ,2BAAR,CAA1B;;;;;;;;;;;;;;AAcJ,IAAI,sBAAsB,SAAtB,mBAAsB,CAAS,eAAT,EAA0B,eAA1B,EAA2C,WAA3C,EAAuD;;AAEhF,0BAAwB,IAAxB,CAA6B,IAA7B,EAAmC,eAAnC,EAAoD,eAApD,EAAqE,WAArE,EAFgF;CAAvD;;AAM1B,oBAAoB,SAApB,GAAgC,OAAO,MAAP,CAAc,wBAAwB,SAAxB,CAA9C;AACA,oBAAoB,SAApB,CAA8B,WAA9B,GAA4C,mBAA5C;;;;;;;;;;;AAWA,oBAAoB,SAApB,CAA8B,aAA9B,GAA8C,UAAS,cAAT,EAAyB,cAAzB,EAAyC,eAAzC,EAA0D,WAA1D,EAAuE,WAAvE,EAAmF;;AAEhI,MAAI,qBAAqB,GAArB,CAF4H;AAGhI,0BAAwB,SAAxB,CAAkC,aAAlC,CAAgD,IAAhD,CAAqD,IAArD,EAA2D,cAA3D,EAA2E,cAA3E,EAA2F,kBAA3F,EAA+G,eAA/G,EAAgI,WAAhI,EAA6I,WAA7I,EAHgI;CAAnF;;AAQ9C,OAAO,OAAP,GAAiB,mBAAjB","file":"ifr-motion/feedback/PosVelControllerSim.js","sourcesContent":["/**\n * @author jg\n * Copyright 2015 IF Robots LLC\n */\n\n\"use strict\";\n\nvar TrajectoryControllerSim = require(\"./TrajectoryControllerSim\");\n\n/**\n *\n * All arguments optional. Initial position/velocity can be provided here.\n * If this plan is sampled before any updateCommand's are issued, it will\n * be traveling at initialVelocity from initialPosition with zero acceleration.\n *\n * @param {number} [initialPosition] - defaults to 0\n * @param {number} [initialVelocity] - defaults to 0\n * @param {Time} [initialTime] - defaults to current time\n * @constructor\n * @extends TrajectoryControllerSim\n */\nvar PosVelControllerSim = function(initialPosition, initialVelocity, initialTime){\n\n\tTrajectoryControllerSim.call(this, initialPosition, initialVelocity, initialTime);\n\n};\n\nPosVelControllerSim.prototype = Object.create(TrajectoryControllerSim.prototype);\nPosVelControllerSim.prototype.constructor = PosVelControllerSim;\n\n/**\n *\n * @param {number} targetPosition\n * @param {number} targetVelocity\n * @param {number} maxAcceleration\n * @param {number} maxVelocity\n * @param {Time} [currentTime] - time to activate command (current time used if omitted)\n * @override\n */\nPosVelControllerSim.prototype.updateCommand = function(targetPosition, targetVelocity, maxAcceleration, maxVelocity, currentTime){\n\n\tvar interceptInSeconds = 0.1;\n\tTrajectoryControllerSim.prototype.updateCommand.call(this, targetPosition, targetVelocity, interceptInSeconds, maxAcceleration, maxVelocity, currentTime);\n\n};\n\n\nmodule.exports = PosVelControllerSim;"],"sourceRoot":"/source/"}