{"version":3,"sources":["ifr-motion/lookat/LookatDOF.js"],"names":[],"mappings":";;;;;AAKA;;;;;;;;;AAQA,IAAI,YAAY,SAAZ,SAAY,CAAS,IAAT,EAAe,iBAAf,EAAiC;;AAEhD,OAAK,KAAL,GAAa,IAAb;;;AAFgD,MAKhD,CAAK,kBAAL,GAA0B,iBAA1B;;;AALgD,MAQhD,CAAK,eAAL,GAAuB,IAAvB,CARgD;CAAjC;;;;;AAchB,UAAU,SAAV,CAAoB,cAApB,GAAqC,UAAS,cAAT,EAAwB;AAC5D,OAAK,eAAL,GAAuB,cAAvB,CAD4D;CAAxB;;;;;;;;;;AAYrC,UAAU,SAAV,CAAoB,kBAApB,GAAyC,UAAS,MAAT,EAAiB,WAAjB,EAA6B,EAA7B;;AAEzC,UAAU,SAAV,CAAoB,OAApB,GAA8B,YAAU;AACvC,SAAO,KAAK,KAAL,CADgC;CAAV;;AAI9B,UAAU,SAAV,CAAoB,oBAApB,GAA2C,YAAU;AACpD,SAAO,KAAK,kBAAL,CAD6C;CAAV;;;;;;;AAS3C,UAAU,SAAV,CAAoB,UAApB,GAAiC,UAAS,aAAT,EAAuB,EAAvB;;;;;;;;AAQjC,UAAU,SAAV,CAAoB,oBAApB,GAA2C,UAAS,UAAT,EAAoB,EAApB;;AAG3C,OAAO,OAAP,GAAiB,SAAjB","file":"ifr-motion/lookat/LookatDOF.js","sourcesContent":["/**\n * @author jg\n * Copyright 2015 IF Robots LLC\n */\n\n\"use strict\";\n\n/**\n *\n * @param {string} name\n * @param {string} controlledDOFName\n * @constructor\n */\nvar LookatDOF = function(name, controlledDOFName){\n\t/** @type {string} */\n\tthis._name = name;\n\n\t/** @type {string} */\n\tthis._controlledDOFName = controlledDOFName;\n\n\t/** @type {KinematicGroup} */\n\tthis._kinematicGroup = null;\n};\n\n/**\n * @param {KinematicGroup} kinematicGroup group to use for kinematic math (assumed to be configured as desired before valToPointAtTarget calls)\n */\nLookatDOF.prototype.connectToGroup = function(kinematicGroup){\n\tthis._kinematicGroup = kinematicGroup;\n};\n\n/**\n * Compute value is relative to current setup of the hierarchy that transform is part of.\n *\n * @param {THREE.Vector3} target - world space target\n * @param {PointReport} [pointReport] - optional report for holding meta info produced by computation\n * @abstract\n * @return {number} Value to cause this._control to point local this._forwardDir at the target\n */\nLookatDOF.prototype.valToPointAtTarget = function(target, pointReport){}; // eslint-disable-line no-unused-vars\n\nLookatDOF.prototype.getName = function(){\n\treturn this._name;\n};\n\nLookatDOF.prototype.getControlledDOFName = function(){\n\treturn this._controlledDOFName;\n};\n\n/**\n * Provide the ratio that this error represents for the range of motion of this LookatDOF\n * @param errorAbsolute absolute error\n * @return {number} ratio that absoluteError represents of the total range of this LookatDOF\n */\nLookatDOF.prototype.errorRatio = function(errorAbsolute){}; // eslint-disable-line no-unused-vars\n\n/**\n * provide a suggestion for a target that is forward for this lookat (node is already looking at this point)\n * @param {THREE.Vector3} inplaceVec\n * @return {THREE.Vector3}\n * @abstract\n */\nLookatDOF.prototype.suggestForwardTarget = function(inplaceVec){}; // eslint-disable-line no-unused-vars\n\n\nmodule.exports = LookatDOF;"],"sourceRoot":"/source/"}