{"version":3,"sources":["ifr-motion/dofs/ModelControlGroup.js"],"names":[],"mappings":"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","file":"ifr-motion/dofs/ModelControlGroup.js","sourcesContent":["/**\n * @author mattb\n * Copyright 2014 IF Robots LLC\n */\n\n\"use strict\";\n\nvar KinematicGroup = require(\"./KinematicGroup\");\nvar DOFInfo = require(\"./DOFInfo\");\n\n/**\n * @constructor\n */\nvar ModelControlGroup = function()\n{\n\t/** @type {Array.<ModelControl>} */\n\tthis._controlList = [];\n\t/** @type {string[]} */\n\tthis._dofNames = [];\n\t/** @type {Object.<string, ModelControl>} */\n\tthis._dofNameToControlMap = {};\n\t/** @type {Object.<string, DOFInfo>} */\n\tthis._dofInfos = {};\n};\n\n/**\n * @param {Array.<ModelControl>} controlList\n */\nModelControlGroup.prototype.setControlList = function(controlList)\n{\n\tvar controlIndex;\n\n\tthis._controlList = controlList;\n\tthis._dofNames = [];\n\tthis._dofNameToControlMap = {};\n\tthis._dofInfos = {};\n\n\tfor (controlIndex=0; controlIndex<this._controlList.length; controlIndex++)\n\t{\n\t\tvar modelControl = this._controlList[controlIndex];\n\t\tvar dofNames = modelControl.getDOFNames();\n\n\t\tfor (var dofIndex=0; dofIndex<dofNames.length; dofIndex++)\n\t\t{\n\t\t\tthis._dofNames.push(dofNames[dofIndex]);\n\t\t\tthis._dofNameToControlMap[dofNames[dofIndex]] = modelControl;\n\t\t\tthis._dofInfos[dofNames[dofIndex]] = new DOFInfo(dofNames[dofIndex], modelControl);\n\t\t}\n\t}\n\n\tfor (controlIndex=0; controlIndex<this._controlList.length; controlIndex++){\n\t\tthis._controlList[controlIndex].attachToControlGroup(this);\n\t}\n};\n\n/**\n * @return {Array.<ModelControl>}\n */\nModelControlGroup.prototype.getControlList = function()\n{\n\treturn this._controlList;\n};\n\n/**\n * @return {string[]}\n */\nModelControlGroup.prototype.getDOFNames = function()\n{\n\treturn this._dofNames;\n};\n\n/**\n * @param {string} dofName\n * @return {ModelControl}\n */\nModelControlGroup.prototype.getControlForDOF = function(dofName)\n{\n\treturn this._dofNameToControlMap[dofName];\n};\n\n/**\n * @param {string} dofName\n * @return {DOFInfo}\n */\nModelControlGroup.prototype.getDOFInfo = function(dofName)\n{\n\treturn this._dofInfos[dofName];\n};\n\n\n/**\n * @param {THREE.Object3D} modelRoot\n * @return {!boolean}\n */\nModelControlGroup.prototype.attachToModel = function(modelRoot)\n{\n\t/** @type {Object.<string, THREE.Object3D>} */\n\tvar modelMap = KinematicGroup.generateTransformMap(modelRoot);\n\n\t// flatten model tree\n\t///** @type {Array.<THREE.Object3D>} */\n\t//var nodesToVisit = [modelRoot];\n\t//while (nodesToVisit.length > 0)\n\t//{\n\t//\tvar node = nodesToVisit.shift();\n\t//\tif (node.name)\n\t//\t{\n\t//\t\tmodelMap[node.name] = node;\n\t//\t}\n\t//\tif (node.children)\n\t//\t{\n\t//\t\tfor (var c=0; c<node.children.length; c++)\n\t//\t\t{\n\t//\t\t\tnodesToVisit.push(node.children[c]);\n\t//\t\t}\n\t//\t}\n\t//}\n\n\tvar attachedAll = true;\n\tfor (var controlIndex=0; controlIndex<this._controlList.length; controlIndex++)\n\t{\n\t\tvar attached = this._controlList[controlIndex].attachToModel(modelMap);\n\t\tif (!attached)\n\t\t{\n\t\t\tattachedAll = false;\n\t\t\tconsole.warn(\"failed to attach model control: \"+this._controlList[controlIndex].getDescriptiveName());\n\t\t}\n\t}\n\n\treturn attachedAll;\n};\n\n/**\n * @param {THREE.Object3D} modelRoot\n */\nModelControlGroup.prototype.attachToModelAndPrune = function(modelRoot)\n{\n\t/** @type {Object.<string, THREE.Object3D>} */\n\tvar modelMap = KinematicGroup.generateTransformMap(modelRoot);\n\n\tthis.setControlList(this._controlList.filter(function(control)\n\t\t{\n\t\t\treturn control.attachToModel(modelMap);\n\t\t}\n\t));\n};\n\n\n/**\n * @param {Object.<string, Object>} dofValues\n * @return {!boolean}\n */\nModelControlGroup.prototype.updateFromDOFValues = function(dofValues)\n{\n\tvar updatedAll = true;\n\tfor (var controlIndex=0; controlIndex<this._controlList.length; controlIndex++)\n\t{\n\t\tvar updated = this._controlList[controlIndex].updateFromDOFValues(dofValues);\n\t\tif (!updated)\n\t\t{\n\t\t\tupdatedAll = false;\n\t\t}\n\t}\n\n\treturn updatedAll;\n};\n\n/**\n * @param {Pose} pose\n * @return {!boolean}\n */\nModelControlGroup.prototype.updateFromPose = function(pose)\n{\n\tvar updatedAll = true;\n\tfor (var controlIndex=0; controlIndex<this._controlList.length; controlIndex++)\n\t{\n\t\tvar updated = this._controlList[controlIndex].updateFromPose(pose);\n\t\tif (!updated)\n\t\t{\n\t\t\tupdatedAll = false;\n\t\t}\n\t}\n\treturn updatedAll;\n};\n\n\n/**\n * @param {string[]} dofNames\n * @return {string[]}\n */\nModelControlGroup.prototype.getRequiredTransformNamesForDOFs = function(dofNames){\n\tif(dofNames === null){\n\t\treturn null;\n\t}\n\tvar r = [];\n\tfor(var i = 0; i < dofNames.length; i++){\n\t\tvar control = this.getControlForDOF(dofNames[i]);\n\t\tvar transformNames = control.getTransformNames();\n\t\tif(transformNames!=null){\n\t\t\tfor(var j = 0; j < transformNames.length; j++){\n\t\t\t\tr.push(transformNames[j]);\n\t\t\t}\n\t\t}\n\t}\n\treturn r;\n};\n\n/**\n * @param {Pose} inplacePose\n * @return {!boolean}\n */\nModelControlGroup.prototype.getPose = function(inplacePose) // eslint-disable-line no-unused-vars\n{\n\t//TODO\n};\n\n\n\n/**\n * Get a copy of this group, differing only in that it will by unbound to any model.\n * @returns {ModelControlGroup}\n */\nModelControlGroup.prototype.getCopy = function(){\n\tif(this._controlList == null){\n\t\treturn new ModelControlGroup();\n\t}else{\n\t\tvar controlsCopy = [this._controlList.length];\n\t\tfor (var i = 0; i < this._controlList.length; i++) {\n\t\t\tcontrolsCopy[i] = this._controlList[i].getCopy(null);\n\t\t}\n\t\tvar groupCopy = new ModelControlGroup();\n\t\tgroupCopy.setControlList(controlsCopy);\n\t\treturn groupCopy;\n\t}\n};\n\nmodule.exports = ModelControlGroup;"],"sourceRoot":"/source/"}