{"version":3,"sources":["ifr-motion/dofs/ColorControl.js"],"names":[],"mappings":"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","file":"ifr-motion/dofs/ColorControl.js","sourcesContent":["/**\n * @author mattb\n * Copyright 2014 IF Robots LLC\n */\n\n\n\n\"use strict\";\n\nvar ModelControl = require(\"./ModelControl\");\nvar ModelControlFactory = require(\"./ModelControlFactory\");\nvar THREE = require(\"three\");\n\n/**\n * @constructor\n * @extends ModelControl\n */\nvar ColorControl = function()\n{\n\tModelControl.call(this);\n\n\t/** @type {Array.<string>} */\n\tthis._meshNames = null;\n\t/** @type {Array.<string>} */\n\tthis._ledNames = null;\n\n\t/** @type {Array.<THREE.Mesh>} */\n\tthis._meshes = [];\n\n\t/**\n\t * @type {boolean}\n\t * @private\n\t */\n\tthis._billboardMode = true;\n};\n\nColorControl.prototype = Object.create(ModelControl.prototype);\nColorControl.prototype.constructor = ColorControl;\nColorControl.prototype._controlType = \"COLOR\";\n\n/**\n * @param {Object} jsonData\n * @override\n */\nColorControl.prototype.setFromJson = function(jsonData)\n{\n\tModelControl.prototype.setFromJson.call(this, jsonData);\n\n\tthis._dofNames.push(jsonData.redDOFName);\n\tthis._dofNames.push(jsonData.greenDOFName);\n\tthis._dofNames.push(jsonData.blueDOFName);\n\tthis._meshNames = jsonData.meshNames;\n\tif (jsonData.ledNames)\n\t{\n\t\tthis._ledNames = jsonData.ledNames;\n\t}\n};\n\n/**\n * @param {Object.<string, THREE.Object3D>} modelMap\n * @return {!boolean}\n * @override\n */\nColorControl.prototype.attachToModel = function(modelMap)\n{\n\tthis._meshes.length = 0; //clear all meshes\n\tif(modelMap == null){\n\t\treturn false;\n\t}\n\n\tfor (var meshIndex=0; meshIndex<this._meshNames.length; meshIndex++)\n\t{\n\t\tif (modelMap.hasOwnProperty(this._meshNames[meshIndex]))\n\t\t{\n\t\t\tthis._meshes.push(modelMap[this._meshNames[meshIndex]]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n};\n\n/**\n *\n * @param {boolean} billboard - true for billboard (emissive) mode, false for normal (diffuse) mode\n */\nColorControl.prototype.setBillboardMode = function(billboard){\n\tif(billboard!==this._billboardMode){\n\t\tif (this._meshes.length > 0) {\n\t\t\tvar setDiffuse = new THREE.Color(0, 0, 0);\n\t\t\tvar setEmissive = new THREE.Color(0, 0, 0);\n\t\t\tif (billboard) {\n\t\t\t\t//move existing color from diffuse to emissive, other to 0\n\t\t\t\tsetEmissive.copy(this._meshes[0].material.color);\n\t\t\t} else {\n\t\t\t\t//move existing color from emissive to diffuse, other to 0\n\t\t\t\tsetDiffuse.copy(this._meshes[0].material.emissive);\n\t\t\t}\n\t\t\tfor (var meshIndex = 0; meshIndex < this._meshes.length; meshIndex++) {\n\t\t\t\tthis._meshes[meshIndex].material.emissive.copy(setEmissive);\n\t\t\t\tthis._meshes[meshIndex].material.color.copy(setDiffuse);\n\t\t\t}\n\t\t}\n\t\tthis._billboardMode = billboard;\n\t}\n};\n\n/***\n *\n * @param {number} r\n * @param {number} g\n * @param {number} b\n */\nfunction updateFromRGB(r,g,b){\n\tfor (var meshIndex=0; meshIndex<this._meshes.length; meshIndex++)\n\t{\n\t\tif(this._billboardMode){\n\t\t\tthis._meshes[meshIndex].material.emissive.setRGB(r,g,b);\n\t\t}else{\n\t\t\tthis._meshes[meshIndex].material.color.setRGB(r,g,b);\n\t\t}\n\t}\n}\n\n/**\n * @param {Object.<string, Object>} dofValues\n * @return {!boolean}\n * @override\n */\nColorControl.prototype.updateFromDOFValues = function(dofValues)\n{\n\tvar dofValueList = [];\n\tvar dofIndex;\n\tfor (dofIndex=0; dofIndex<this._dofNames.length; dofIndex++)\n\t{\n\t\tif (dofValues.hasOwnProperty(this._dofNames[dofIndex]))\n\t\t{\n\t\t\tdofValueList.push(dofValues[this._dofNames[dofIndex]]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tif (this._meshes.length > 0)\n\t{\n\t\tupdateFromRGB.call(this, dofValueList[0], dofValueList[1], dofValueList[2]);\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n};\n\n/**\n * @param {Pose} pose\n * @return {!boolean}\n * @override\n */\nColorControl.prototype.updateFromPose = function(pose)\n{\n\tvar dofValueList = [];\n\tvar dofIndex;\n\tfor (dofIndex=0; dofIndex<this._dofNames.length; dofIndex++)\n\t{\n\t\tvar c = pose.get(this._dofNames[dofIndex], 0);\n\t\tif (c != null) //null or undefined (eqnull)\n\t\t{\n\t\t\tdofValueList.push(c);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tif (this._meshes.length > 0)\n\t{\n\t\tupdateFromRGB.call(this, dofValueList[0], dofValueList[1], dofValueList[2]);\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n};\n\n\n/**\n * Creates a copy of this dof, or fills in this dof's data to the provided\n * argument (to allow type to be defined by subclass's getCopy).\n *\n * @param {ColorControl} copyInto - optional object to copy into\n * @return {ColorControl} copy of this dof, not attached to any model\n * @override\n */\nColorControl.prototype.getCopy = function(copyInto)\n{\n\tif(!copyInto){\n\t\tcopyInto = new ColorControl();\n\t}\n\tModelControl.prototype.getCopy.call(this, copyInto);\n\tcopyInto._meshNames = this._meshNames?this._meshNames.slice(0):null;\n\tcopyInto._ledNames = this._ledNames?this._ledNames.slice(0):null;\n\n\treturn copyInto;\n};\n\n\n/**\n * @constructor\n */\nColorControl.Factory = function()\n{\n};\n\nColorControl.Factory.prototype = Object.create(ModelControlFactory.prototype);\nColorControl.Factory.prototype.constructor = ColorControl.Factory;\nColorControl.Factory.prototype._controlType = ColorControl.prototype._controlType;\nColorControl.Factory.prototype._controlConstructor = ColorControl;\n\nmodule.exports = ColorControl;"],"sourceRoot":"/source/"}