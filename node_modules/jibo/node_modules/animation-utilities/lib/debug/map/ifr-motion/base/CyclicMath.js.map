{"version":3,"sources":["ifr-motion/base/CyclicMath.js"],"names":[],"mappings":";;;;;AAKA;;AAEA,IAAI,aAAa,SAAb,UAAa,GAAU,EAAV;;;;;;;;;AAWjB,WAAW,yBAAX,GAAuC,UAAS,KAAT,EAAgB,cAAhB,EAA+B;AACrE,MAAI,QAAQ,iBAAiB,KAAjB,CADyD;AAErE,MAAI,iBAAiB,KAAK,KAAL,CAAW,CAAC,QAAQ,KAAK,EAAL,CAAT,IAAqB,KAAK,EAAL,GAAQ,CAAR,CAArB,CAA5B,CAFiE;AAGrE,MAAI,YAAY,QAAQ,iBAAe,KAAK,EAAL,GAAQ,CAAvB,CAH6C;AAIrE,SAAO,SAAP,CAJqE;CAA/B;;AAOvC,OAAO,OAAP,GAAiB,UAAjB","file":"ifr-motion/base/CyclicMath.js","sourcesContent":["/**\n * @author jg\n * Copyright 2015 IF Robots LLC\n */\n\n\"use strict\";\n\nvar CyclicMath = function(){\n\n};\n\n/**\n * Return the angle whose value is closest to \"referenceAngle\" and\n * with the same angular position as \"angle\"\n *\n * @param {number} angle\n * @param {number} referenceAngle\n */\nCyclicMath.closestEquivalentRotation = function(angle, referenceAngle){\n\tvar delta = referenceAngle - angle;\n\tvar addRevolutions = Math.floor((delta + Math.PI) / (Math.PI*2));\n\tvar converted = angle + addRevolutions*Math.PI*2;\n\treturn converted;\n};\n\nmodule.exports = CyclicMath;"],"sourceRoot":"/source/"}