{"version":3,"sources":["ifr-motion/dofs/TextureControl.js"],"names":[],"mappings":";;;;;AAKA;;;;AAEA,IAAI,eAAe,QAAQ,gBAAR,CAAf;AACJ,IAAI,sBAAsB,QAAQ,uBAAR,CAAtB;AACJ,IAAI,oBAAoB,QAAQ,8CAAR,CAApB;AACJ,IAAI,QAAQ,QAAQ,OAAR,CAAR;AACJ,IAAI,OAAO,QAAQ,qBAAR,CAAP;;;;;;AAMJ,IAAI,iBAAiB,SAAjB,cAAiB,GACrB;AACC,cAAa,IAAb,CAAkB,IAAlB;;;AADD,KAIC,CAAK,SAAL,GAAiB,IAAjB;;;AAJD,KAOC,CAAK,KAAL,GAAa,IAAb;;;AAPD,KAUC,CAAK,QAAL,GAAgB,IAAI,MAAM,OAAN,EAApB,CAVD;AAWC,MAAK,QAAL,CAAc,SAAd,GAA0B,MAAM,YAAN;;;AAX3B,KAcC,CAAK,OAAL,GAAe,IAAI,MAAM,OAAN,EAAnB;;;AAdD,KAiBC,CAAK,aAAL,GAAqB,IAAI,MAAM,WAAN,CAAkB,IAAI,UAAJ,CAAe,IAAE,CAAF,GAAI,CAAJ,CAArC,EAA6C,CAA7C,EAAgD,CAAhD,CAArB,CAjBD;AAkBC,MAAK,aAAL,CAAmB,SAAnB,GAA+B,MAAM,YAAN;;;AAlBhC,KAqBC,CAAK,YAAL,GAAoB,IAApB;;;AArBD,KAwBC,CAAK,iBAAL,GAAyB,IAAzB;;;AAxBD,KA2BC,CAAK,aAAL,GAAqB,IAArB;;;AA3BD,KA8BC,CAAK,cAAL,GAAsB,IAAtB,CA9BD;CADqB;;AAkCrB,eAAe,SAAf,GAA2B,OAAO,MAAP,CAAc,aAAa,SAAb,CAAzC;AACA,eAAe,SAAf,CAAyB,WAAzB,GAAuC,cAAvC;AACA,eAAe,SAAf,CAAyB,YAAzB,GAAwC,SAAxC;;;;;AAKA,eAAe,SAAf,CAAyB,WAAzB,GAAuC,UAAS,QAAT,EACvC;AACC,cAAa,SAAb,CAAuB,WAAvB,CAAmC,IAAnC,CAAwC,IAAxC,EAA8C,QAA9C,EADD;;AAGC,MAAK,SAAL,CAAe,IAAf,CAAoB,SAAS,OAAT,CAApB,CAHD;AAIC,MAAK,SAAL,GAAiB,SAAS,QAAT,CAJlB;CADuC;;;;;AAWvC,eAAe,SAAf,CAAyB,cAAzB,GAA0C,UAAS,WAAT,EAC1C;AACC,MAAK,YAAL,GAAoB,WAApB,CADD;CAD0C;;;;;AAQ1C,eAAe,SAAf,CAAyB,mBAAzB,GAA+C,UAAS,SAAT,EAC/C;AACC,MAAK,iBAAL,GAAyB,SAAzB,CADD;CAD+C;;;;;;AAU/C,SAAS,QAAT,GAAmB;;;AAGlB,KAAG,KAAK,KAAL,CAAW,QAAX,CAAoB,kBAApB,IAA0C,IAA1C,EAA+C;;AACjD,OAAK,KAAL,CAAW,QAAX,CAAoB,kBAApB,GAAyC,IAAI,MAAM,KAAN,CAAY,KAAK,KAAL,CAAW,QAAX,CAAoB,QAApB,CAAzD,CADiD;EAAlD;AAGA,KAAG,KAAK,cAAL,EAAoB;AACtB,OAAK,KAAL,CAAW,QAAX,CAAoB,OAApB,CAA4B,MAA5B,CAAmC,CAAnC,EAAqC,CAArC,EAAuC,CAAvC,EADsB;AAEtB,OAAK,KAAL,CAAW,QAAX,CAAoB,QAApB,CAA6B,MAA7B,CAAoC,CAApC,EAAsC,CAAtC,EAAwC,CAAxC,EAFsB;EAAvB,MAGO;AACN,OAAK,KAAL,CAAW,QAAX,CAAoB,OAApB,CAA4B,MAA5B,CAAmC,CAAnC,EAAsC,CAAtC,EAAyC,CAAzC;;AADM,MAGN,CAAK,KAAL,CAAW,QAAX,CAAoB,QAApB,CAA6B,GAA7B,CAAiC,KAAK,KAAL,CAAW,QAAX,CAAoB,kBAApB,CAAjC,CAHM;EAHP;CAND;;;;;;AAoBA,eAAe,SAAf,CAAyB,aAAzB,GAAyC,UAAS,QAAT,EACzC;AACC,MAAK,KAAL,GAAa,IAAb,CADD;;AAGC,KAAI,YAAU,IAAV,IAAkB,SAAS,cAAT,CAAwB,KAAK,SAAL,CAA1C,EACJ;AACC,OAAK,KAAL,GAAa,SAAS,KAAK,SAAL,CAAtB,CADD;AAEC,WAAS,IAAT,CAAc,IAAd,EAFD;AAGC,SAAO,IAAP,CAHD;EADA,MAOA;AACC,SAAO,KAAP,CADD;EAPA;CAJwC;;;;;;;AAqBzC,aAAa,SAAb,CAAuB,oBAAvB,GAA8C,UAAS,YAAT,EAAuB;;AAEpE,KAAI,cAAc,aAAa,cAAb,EAAd,CAFgE;AAGpE,MAAK,aAAL,GAAqB,IAArB;;AAHoE,MAKhE,IAAI,IAAI,CAAJ,EAAO,IAAI,YAAY,MAAZ,EAAoB,GAAvC,EAA2C;AAC1C,MAAG,YAAY,CAAZ,EAAe,cAAf,OAAoC,OAApC,EAA4C;AAC9C,OAAI,iBAAiB,YAAY,CAAZ,EAAe,UAAf,CADyB;AAE9C,QAAI,IAAI,IAAI,CAAJ,EAAO,IAAI,eAAe,MAAf,EAAuB,GAA1C,EAA8C;AAC7C,QAAG,eAAe,CAAf,MAAsB,KAAK,SAAL,EAAe;AACvC,UAAK,aAAL,GAAqB,YAAY,CAAZ,CAArB,CADuC;AAEvC,WAFuC;KAAxC;IADD;GAFD;AASA,MAAG,KAAK,aAAL,KAAuB,IAAvB,EAA4B;AAC9B,SAD8B;GAA/B;EAVD;CAL6C;;;;;;AAyB9C,SAAS,gBAAT,CAA0B,aAA1B,EAAwC;AACvC,KAAG,KAAK,aAAL,KAAuB,IAAvB,EAA4B;AAC9B,OAAK,aAAL,CAAmB,gBAAnB,CAAoC,aAApC,EAD8B;EAA/B;AAGA,KAAG,kBAAgB,KAAK,cAAL,EAAoB;AACtC,MAAI,KAAK,OAAL,KAAe,IAAf,EAAoB;;;AAGvB,OAAI,aAAJ,EAAmB;AAClB,SAAK,KAAL,CAAW,QAAX,CAAoB,OAApB,CAA4B,MAA5B,CAAmC,CAAnC,EAAqC,CAArC,EAAuC,CAAvC,EADkB;AAElB,SAAK,KAAL,CAAW,QAAX,CAAoB,QAApB,CAA6B,MAA7B,CAAoC,CAApC,EAAsC,CAAtC,EAAwC,CAAxC,EAFkB;IAAnB,MAGO;AACN,SAAK,KAAL,CAAW,QAAX,CAAoB,OAApB,CAA4B,MAA5B,CAAmC,CAAnC,EAAqC,CAArC,EAAuC,CAAvC,EADM;AAEN,SAAK,KAAL,CAAW,QAAX,CAAoB,QAApB,CAA6B,GAA7B,CAAiC,KAAK,KAAL,CAAW,QAAX,CAAoB,kBAApB,CAAjC;AAFM,IAHP;GAHD;AAWA,OAAK,cAAL,GAAsB,aAAtB,CAZsC;EAAvC;CAJD;;;;;;AAwBA,SAAS,gBAAT,CAA0B,QAA1B,EAAoC;AACnC,KAAI,OAAO,QAAP,KAAqB,QAArB,EACJ;AACC,mBAAiB,IAAjB,CAAsB,IAAtB,EAA4B,IAA5B;AADD,MAEC,CAAK,iBAAL,CAAuB,QAAvB,EAFD;AAGC,SAAO,IAAP,CAHD;EADA,MAMK,IAAI,QAAO,2DAAP,KAAqB,QAArB,EACT;AACC,MAAI,MAAM,SAAS,UAAT,CADX;AAEC,MAAI,aAAa,SAAS,UAAT,CAFlB;AAGC,MAAI,YAAY,SAAS,SAAT,CAHjB;AAIC,MAAG,cAAc,IAAd,EAAmB;;AACrB,OAAG,aAAa,IAAb,EAAkB;;AACpB,iBAAa,KAAb,CADoB;IAArB,MAEK;;AACJ,iBAAa,IAAb,CADI;IAFL;GADD;;AAQA,MAAG,eAAe,IAAf,IAAuB,aAAa,IAAb,EAAkB;AAC3C,eAAY,KAAK,iBAAL,CAD+B;GAA5C;;AAIA,MAAG,eAAe,IAAf,EAAoB;AACtB,QAAK,gBAAL,CAAsB,SAAtB,EADsB;GAAvB;;AAIA,mBAAiB,IAAjB,CAAsB,IAAtB,EAA4B,CAAC,UAAD,CAA5B,CApBD;;AAsBC,MAAG,OAAO,IAAP,EAAY;;AACd,QAAK,KAAL,CAAW,mBAAiB,KAAK,SAAL,CAAe,CAAf,CAAjB,GAAmC,sDAAnC,CAAX,CADc;GAAf,MAEM;AACL,QAAK,iBAAL,CAAuB,GAAvB,EADK;GAFN;EAvBI,MA6BA,IAAI,OAAO,QAAP,KAAqB,QAArB,EACT;AACC,OAAK,KAAL,CAAW,4BAA0B,KAAK,SAAL,CAAe,CAAf,CAA1B,GAA4C,wFAA5C,CAAX,CADD;AAEC,SAAO,KAAP,CAFD;EADK,MAML;AACC,SAAO,KAAP,CADD;EANK;CApCN;;;;;;AAoDA,eAAe,SAAf,CAAyB,mBAAzB,GAA+C,UAAS,SAAT,EAC/C;AACC,KAAI,KAAK,KAAL,IAAc,UAAU,cAAV,CAAyB,KAAK,SAAL,CAAe,CAAf,CAAzB,CAAd,EACJ;AACC,MAAI,WAAW,UAAU,KAAK,SAAL,CAAe,CAAf,CAAV,CAAX,CADL;AAEC,SAAO,iBAAiB,IAAjB,CAAsB,IAAtB,EAA4B,QAA5B,CAAP,CAFD;EADA,MAMA;AACC,SAAO,KAAP,CADD;EANA;CAF8C;;;;;;AAkB/C,eAAe,SAAf,CAAyB,cAAzB,GAA0C,UAAS,IAAT,EAC1C;AACC,KAAI,WAAW,KAAK,GAAL,CAAS,KAAK,SAAL,CAAe,CAAf,CAAT,EAA4B,CAA5B,CAAX,CADL;AAEC,KAAI,KAAK,KAAL,IAAe,YAAY,IAAZ;AACnB;AACC,UAAO,iBAAiB,IAAjB,CAAsB,IAAtB,EAA4B,QAA5B,CAAP,CADD;GADA,MAKA;AACC,SAAO,KAAP,CADD;EALA;CAHyC;;;;;;AAiB1C,eAAe,SAAf,CAAyB,iBAAzB,GAA6C,UAAS,QAAT,EAC7C;AACC,KAAI,KAAK,KAAL,IAAc,KAAK,QAAL,CAAc,UAAd,KAA6B,QAA7B,EAClB;AACC,OAAK,QAAL,CAAc,UAAd,GAA2B,QAA3B,CADD;;AAGC,OAAK,aAAL,CAAmB,WAAnB,GAAiC,IAAjC,CAHD;AAIC,OAAK,KAAL,CAAW,QAAX,CAAoB,GAApB,GAA0B,KAAK,aAAL,CAJ3B;;AAMC,MAAI,OAAO,IAAP,CANL;AAOC,OAAK,YAAL,CAAkB,SAAlB,CAA4B,QAA5B,EAAsC,YACtC;AACC,OAAI,SAAS,KAAK,YAAL,CAAkB,SAAlB,EAAT,CADL;AAEC,OAAI,OAAO,OAAP,IAAkB,OAAO,GAAP,KAAe,KAAK,QAAL,CAAc,UAAd,EACrC;AACC,SAAK,QAAL,CAAc,KAAd,GAAsB,OAAO,KAAP,CADvB;AAEC,SAAK,QAAL,CAAc,WAAd,GAA4B,IAA5B,CAFD;AAGC,SAAK,KAAL,CAAW,QAAX,CAAoB,GAApB,GAA0B,KAAK,QAAL,CAH3B;IADA,MAMK,IAAI,CAAC,OAAO,OAAP,EACV;AACC,SAAK,KAAL,CAAW,4BAA0B,KAAK,SAAL,CAAe,CAAf,CAA1B,GAA4C,6BAA5C,GAA0E,OAAO,GAAP,CAArF,CADD;IADK;GATgC,CAAtC,CAPD;EADA;CAF4C;;;;;;AA+B7C,eAAe,SAAf,CAAyB,gBAAzB,GAA4C,UAAS,SAAT,EAC5C;AACC,KAAI,KAAK,KAAL,IAAc,KAAK,OAAL,CAAa,UAAb,KAA4B,SAA5B,EAClB;AACC,OAAK,OAAL,CAAa,UAAb,GAA0B,SAA1B;;;;;AADD,MAMK,OAAO,IAAP,CANL;AAOC,OAAK,YAAL,CAAkB,SAAlB,CAA4B,SAA5B,EAAuC,YACvC;AACC,OAAI,SAAS,KAAK,YAAL,CAAkB,SAAlB,EAAT,CADL;AAEC,OAAI,OAAO,OAAP,IAAkB,OAAO,GAAP,KAAe,KAAK,OAAL,CAAa,UAAb,EACrC;AACC,SAAK,OAAL,CAAa,KAAb,GAAqB,OAAO,KAAP,CADtB;AAEC,SAAK,OAAL,CAAa,WAAb,GAA2B,IAA3B,CAFD;AAGC,QAAG,KAAK,KAAL,CAAW,QAAX,CAAoB,SAApB,IAAiC,IAAjC,EAAsC;AACxC,UAAK,KAAL,CAAW,QAAX,CAAoB,WAApB,GAAkC,IAAlC,CADwC;KAAzC;AAGA,SAAK,KAAL,CAAW,QAAX,CAAoB,SAApB,GAAgC,KAAK,OAAL,CANjC;IADA,MASK,IAAI,CAAC,OAAO,OAAP,EACV;AACC,SAAK,KAAL,CAAW,4BAA0B,KAAK,SAAL,CAAe,CAAf,CAA1B,GAA4C,8BAA5C,GAA2E,OAAO,GAAP,CAAtF,CADD;IADK;GAZiC,CAAvC,CAPD;EADA;CAF2C;;;;;;;;;;AAsC5C,eAAe,SAAf,CAAyB,OAAzB,GAAmC,UAAS,QAAT,EACnC;AACC,KAAG,CAAC,QAAD,EAAU;AACZ,aAAW,IAAI,cAAJ,EAAX,CADY;EAAb;AAGA,cAAa,SAAb,CAAuB,OAAvB,CAA+B,IAA/B,CAAoC,IAApC,EAA0C,QAA1C,EAJD;;AAMC,UAAS,SAAT,GAAqB,KAAK,SAAL,CANtB;;AAQC,UAAS,QAAT,GAAoB,KAAK,QAAL,GAAc,KAAK,QAAL,CAAc,KAAd,EAAd,GAAoC,IAApC,CARrB;;AAUC,UAAS,YAAT,GAAwB,KAAK,YAAL,CAVzB;;AAYC,UAAS,iBAAT,GAA6B,KAAK,iBAAL,CAZ9B;;AAcC,QAAO,QAAP,CAdD;CADmC;;;;;AAsBnC,eAAe,OAAf,GAAyB,YACzB;;AAEC,MAAK,kBAAL,GAA0B,IAAI,iBAAJ,EAA1B,CAFD;CADyB;;AAMzB,eAAe,OAAf,CAAuB,SAAvB,GAAmC,OAAO,MAAP,CAAc,oBAAoB,SAApB,CAAjD;AACA,eAAe,OAAf,CAAuB,SAAvB,CAAiC,WAAjC,GAA+C,eAAe,OAAf;AAC/C,eAAe,OAAf,CAAuB,SAAvB,CAAiC,YAAjC,GAAgD,eAAe,SAAf,CAAyB,YAAzB;AAChD,eAAe,OAAf,CAAuB,SAAvB,CAAiC,mBAAjC,GAAuD,cAAvD;;;;;AAKA,eAAe,OAAf,CAAuB,SAAvB,CAAiC,oBAAjC,GAAwD,UAAS,iBAAT,EACxD;AACC,MAAK,kBAAL,GAA0B,iBAA1B,CADD;CADwD;;;;;;AASxD,eAAe,OAAf,CAAuB,SAAvB,CAAiC,iBAAjC,GAAqD,UAAS,QAAT,EACrD;;AAEC,KAAI,iBAAiB,oBAAoB,SAApB,CAA8B,iBAA9B,CAAgD,IAAhD,CAAqD,IAArD,EAA2D,QAA3D,CAAjB,CAFL;AAGC,KAAI,cAAJ,EACA;AACC,iBAAe,cAAf,CAA8B,KAAK,kBAAL,CAA9B,CADD;EADA;AAIA,QAAO,cAAP,CAPD;CADqD;;AAWrD,OAAO,OAAP,GAAiB,cAAjB","file":"ifr-motion/dofs/TextureControl.js","sourcesContent":["/**\n * @author mattb\n * Copyright 2014 IF Robots LLC\n */\n\n\"use strict\";\n\nvar ModelControl = require(\"./ModelControl\");\nvar ModelControlFactory = require(\"./ModelControlFactory\");\nvar CachedImageLoader = require(\"../../ifr-geometry/loaders/CachedImageLoader\");\nvar THREE = require(\"three\");\nvar slog = require(\"../../ifr-core/SLog\");\n\n/**\n * @constructor\n * @extends ModelControl\n */\nvar TextureControl = function()\n{\n\tModelControl.call(this);\n\n\t/** @type {string} */\n\tthis._meshName = null;\n\n\t/** @type {THREE.Mesh} */\n\tthis._mesh = null;\n\n\t/** @type {THREE.Texture} */\n\tthis._texture = new THREE.Texture();\n\tthis._texture.minFilter = THREE.LinearFilter;\n\n\t/** @type {THREE.Texture} */\n\tthis._normal = new THREE.Texture();\n\n\t/** @type {THREE.DataTexture} */\n\tthis._blankTexture = new THREE.DataTexture(new Uint8Array(2*2*4), 2, 2);\n\tthis._blankTexture.minFilter = THREE.LinearFilter;\n\n\t/** @type {CachedImageLoader} */\n\tthis._imageLoader = null;\n\n\t/** @type {string} */\n\tthis._defaultNormalURL = null;\n\n\t/** @type {ColorControl} */\n\tthis._colorControl = null;\n\n\t/** @type {boolean} */\n\tthis._billboardMode = true;\n};\n\nTextureControl.prototype = Object.create(ModelControl.prototype);\nTextureControl.prototype.constructor = TextureControl;\nTextureControl.prototype._controlType = \"TEXTURE\";\n\n/**\n * @param {Object} jsonData\n */\nTextureControl.prototype.setFromJson = function(jsonData)\n{\n\tModelControl.prototype.setFromJson.call(this, jsonData);\n\n\tthis._dofNames.push(jsonData.dofName);\n\tthis._meshName = jsonData.meshName;\n};\n\n/**\n * @param {CachedImageLoader} imageLoader\n */\nTextureControl.prototype.setImageLoader = function(imageLoader)\n{\n\tthis._imageLoader = imageLoader;\n};\n\n/**\n * @param {string} normalURL\n */\nTextureControl.prototype.setDefaultNormalURL = function(normalURL)\n{\n\tthis._defaultNormalURL = normalURL;\n};\n\n\n/**\n * call once after a new mesh is attached to set colors for current render mode,\n * and cache original colors to be restored\n */\nfunction initMesh(){\n\t//save the specular value in the mesh itself.  this way it will be preserved\n\t//to be re-enabled even if a new TextureControl is attached.\n\tif(this._mesh.material._specular_disabled == null){ //null or undefined (eqnull)\n\t\tthis._mesh.material._specular_disabled = new THREE.Color(this._mesh.material.specular);\n\t}\n\tif(this._billboardMode){\n\t\tthis._mesh.material.ambient.setRGB(0,0,0);\n\t\tthis._mesh.material.specular.setRGB(0,0,0);\n\t} else {\n\t\tthis._mesh.material.ambient.setRGB(1, 1, 1);\n\t\t//restore original specular\n\t\tthis._mesh.material.specular.set(this._mesh.material._specular_disabled);\n\t}\n}\n\n/**\n * @param {Object.<string, THREE.Object3D>} modelMap\n * @return {!boolean}\n */\nTextureControl.prototype.attachToModel = function(modelMap)\n{\n\tthis._mesh = null;\n\n\tif (modelMap!=null && modelMap.hasOwnProperty(this._meshName))\n\t{\n\t\tthis._mesh = modelMap[this._meshName];\n\t\tinitMesh.call(this);\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n};\n\n/**\n * Called once when control list is assigned to a group, used by controls\n * which need to make links amongst themselves.\n * @param {ModelControlGroup} controlGroup\n */\nModelControl.prototype.attachToControlGroup = function(controlGroup) {\n\t/** @type {ModelControl[]} */\n\tvar controlList = controlGroup.getControlList();\n\tthis._colorControl = null;\n\t//connect to a ColorControl that contains our mesh.\n\tfor(var i = 0; i < controlList.length; i++){\n\t\tif(controlList[i].getControlType() === \"COLOR\"){\n\t\t\tvar colorMeshNames = controlList[i]._meshNames;\n\t\t\tfor(var j = 0; j < colorMeshNames.length; j++){\n\t\t\t\tif(colorMeshNames[j] === this._meshName){\n\t\t\t\t\tthis._colorControl = controlList[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(this._colorControl !== null){\n\t\t\tbreak;\n\t\t}\n\t}\n};\n\n/**\n *\n * @param {boolean} billboardMode\n */\nfunction setBillboardMode(billboardMode){\n\tif(this._colorControl !== null){\n\t\tthis._colorControl.setBillboardMode(billboardMode);\n\t}\n\tif(billboardMode!==this._billboardMode){\n\t\tif (this._meshes!==null){\n\t\t\t//color control will handle emissive/diffuse\n\t\t\t//we must handle ambient\n\t\t\tif (billboardMode) {\n\t\t\t\tthis._mesh.material.ambient.setRGB(0,0,0);\n\t\t\t\tthis._mesh.material.specular.setRGB(0,0,0);\n\t\t\t} else {\n\t\t\t\tthis._mesh.material.ambient.setRGB(1,1,1);\n\t\t\t\tthis._mesh.material.specular.set(this._mesh.material._specular_disabled); //stored here by initMesh\n\t\t\t}\n\t\t}\n\t\tthis._billboardMode = billboardMode;\n\t}\n}\n\n/**\n * @param {number|string} dofValue\n * @return {!boolean}\n */\nfunction updateFromDOFVal(dofValue) {\n\tif (typeof(dofValue) === \"string\")\n\t{\n\t\tsetBillboardMode.call(this, true); //fallback mode, string only, choose billboard\n\t\tthis.setTextureFromURL(dofValue);\n\t\treturn true;\n\t}\n\telse if (typeof(dofValue) === \"object\")\n\t{\n\t\tvar url = dofValue.textureURL;\n\t\tvar useNormals = dofValue.useNormals;\n\t\tvar normalURL = dofValue.normalURL;\n\t\tif(useNormals == null){ //null or undefined (eqnull)\n\t\t\tif(normalURL == null){ //neither key set, no normals\n\t\t\t\tuseNormals = false;\n\t\t\t}else{ //useNormals missing, but normalURL present, use normals\n\t\t\t\tuseNormals = true;\n\t\t\t}\n\t\t}\n\n\t\tif(useNormals === true && normalURL == null){\n\t\t\tnormalURL = this._defaultNormalURL;\n\t\t}\n\n\t\tif(useNormals === true){\n\t\t\tthis.setNormalFromURL(normalURL);\n\t\t}\n\n\t\tsetBillboardMode.call(this, !useNormals);\n\n\t\tif(url == null){ //null or undefined (eqnull)\n\t\t\tslog.error(\"Value for DOF \"+this._dofNames[0]+\" is object, but did not contain field \\\"textureURL\\\"\");\n\t\t}else {\n\t\t\tthis.setTextureFromURL(url);\n\t\t}\n\t}\n\telse if (typeof(dofValue) === \"number\")\n\t{\n\t\tslog.error(\"TextureControl for DOF \"+this._dofNames[0]+\": numerical values (image indices) are no longer supported, use full image URL instead\");\n\t\treturn false;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\n\n\n/**\n * @param {Object.<string, Object>} dofValues\n * @return {!boolean}\n */\nTextureControl.prototype.updateFromDOFValues = function(dofValues)\n{\n\tif (this._mesh && dofValues.hasOwnProperty(this._dofNames[0]))\n\t{\n\t\tvar dofValue = dofValues[this._dofNames[0]];\n\t\treturn updateFromDOFVal.call(this, dofValue);\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n};\n\n\n/**\n * @param {Pose} pose\n * @return {!boolean}\n */\nTextureControl.prototype.updateFromPose = function(pose)\n{\n\tvar dofValue = pose.get(this._dofNames[0], 0);\n\tif (this._mesh && (dofValue != null)) //null or undefined (eqnull)\n\t{\n\t\treturn updateFromDOFVal.call(this, dofValue);\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n};\n\n/**\n * @param {string} imageURL\n * @private\n */\nTextureControl.prototype.setTextureFromURL = function(imageURL)\n{\n\tif (this._mesh && this._texture.sourceFile !== imageURL)\n\t{\n\t\tthis._texture.sourceFile = imageURL;\n\n\t\tthis._blankTexture.needsUpdate = true;\n\t\tthis._mesh.material.map = this._blankTexture;\n\n\t\tvar self = this;\n\t\tthis._imageLoader.loadImage(imageURL, function()\n\t\t{\n\t\t\tvar result = self._imageLoader.getResult();\n\t\t\tif (result.success && result.url === self._texture.sourceFile)\n\t\t\t{\n\t\t\t\tself._texture.image = result.image;\n\t\t\t\tself._texture.needsUpdate = true;\n\t\t\t\tself._mesh.material.map = self._texture;\n\t\t\t}\n\t\t\telse if (!result.success)\n\t\t\t{\n\t\t\t\tslog.error(\"TextureControl for DOF \"+self._dofNames[0]+\": image load failed, URL = \"+result.url);\n\t\t\t}\n\t\t});\n\t}\n};\n\n/**\n * @param {string} normalURL\n * @private\n */\nTextureControl.prototype.setNormalFromURL = function(normalURL)\n{\n\tif (this._mesh && this._normal.sourceFile !== normalURL)\n\t{\n\t\tthis._normal.sourceFile = normalURL;\n\n\t\t//this._blankTexture.needsUpdate = true;\n\t\t//this._mesh.material.map = this._blankTexture;\n\n\t\tvar self = this;\n\t\tthis._imageLoader.loadImage(normalURL, function()\n\t\t{\n\t\t\tvar result = self._imageLoader.getResult();\n\t\t\tif (result.success && result.url === self._normal.sourceFile)\n\t\t\t{\n\t\t\t\tself._normal.image = result.image;\n\t\t\t\tself._normal.needsUpdate = true;\n\t\t\t\tif(self._mesh.material.normalMap == null){\n\t\t\t\t\tself._mesh.material.needsUpdate = true;\n\t\t\t\t}\n\t\t\t\tself._mesh.material.normalMap = self._normal;\n\t\t\t}\n\t\t\telse if (!result.success)\n\t\t\t{\n\t\t\t\tslog.error(\"TextureControl for DOF \"+self._dofNames[0]+\": normal load failed, URL = \"+result.url);\n\t\t\t}\n\t\t});\n\t}\n};\n\n/**\n * Creates a copy of this dof, or fills in this dof's data to the provided\n * argument (to allow type to be defined by subclass's getCopy).\n *\n * @param {TextureControl} copyInto - optional object to copy into\n * @return {TextureControl} copy of this dof, not attached to any model\n * @override\n */\nTextureControl.prototype.getCopy = function(copyInto)\n{\n\tif(!copyInto){\n\t\tcopyInto = new TextureControl();\n\t}\n\tModelControl.prototype.getCopy.call(this, copyInto);\n\n\tcopyInto._meshName = this._meshName;\n\n\tcopyInto._texture = this._texture?this._texture.clone():null;\n\n\tcopyInto._imageLoader = this._imageLoader;\n\n\tcopyInto._defaultNormalURL = this._defaultNormalURL;\n\n\treturn copyInto;\n};\n\n\n/**\n * @constructor\n */\nTextureControl.Factory = function()\n{\n\t/** @type {CachedImageLoader} */\n\tthis._sharedImageLoader = new CachedImageLoader();\n};\n\nTextureControl.Factory.prototype = Object.create(ModelControlFactory.prototype);\nTextureControl.Factory.prototype.constructor = TextureControl.Factory;\nTextureControl.Factory.prototype._controlType = TextureControl.prototype._controlType;\nTextureControl.Factory.prototype._controlConstructor = TextureControl;\n\n/**\n * @param {CachedImageLoader} sharedImageLoader\n */\nTextureControl.Factory.prototype.setSharedImageLoader = function(sharedImageLoader)\n{\n\tthis._sharedImageLoader = sharedImageLoader;\n};\n\n/**\n * @param {Object} jsonData\n * @return {ModelControl}\n */\nTextureControl.Factory.prototype.constructFromJson = function(jsonData)\n{\n\t/** @type {TextureControl} */\n\tvar textureControl = ModelControlFactory.prototype.constructFromJson.call(this, jsonData);\n\tif (textureControl)\n\t{\n\t\ttextureControl.setImageLoader(this._sharedImageLoader);\n\t}\n\treturn textureControl;\n};\n\nmodule.exports = TextureControl;"],"sourceRoot":"/source/"}