{"version":3,"sources":["ifr-motion/lookat/trackpolicy/TrackPolicyTriggerMovementTerminated.js"],"names":[],"mappings":";;;;;AAKA;;AAEA,IAAI,qBAAqB,QAAQ,sBAAR,CAArB;;;;;;;;AAQJ,IAAI,uCAAuC,SAAvC,oCAAuC,CAAS,QAAT,EAAmB,QAAnB,EAA4B;AACtE,oBAAmB,IAAnB,CAAwB,IAAxB;;;AADsE,KAItE,CAAK,SAAL,GAAiB,QAAjB;;;;AAJsE,KAQtE,CAAK,SAAL,GAAiB,QAAjB;;;;AARsE,KAYtE,CAAK,oBAAL,GAA4B,CAA5B,CAZsE;CAA5B;;AAe3C,qCAAqC,SAArC,GAAiD,OAAO,MAAP,CAAc,mBAAmB,SAAnB,CAA/D;AACA,qCAAqC,SAArC,CAA+C,WAA/C,GAA6D,oCAA7D;;;;;;;;AASA,qCAAqC,SAArC,CAA+C,kBAA/C,GAAoE,UAAS,wBAAT,EAAmC,SAAnC,EAA6C;AAChH,KAAI,WAAW,yBAAyB,gCAAzB,CADiG;;AAGhH,KAAG,YAAY,KAAK,SAAL,EAAe;AAC7B,OAAK,oBAAL,IAA6B,SAA7B,CAD6B;EAA9B,MAEK;AACJ,OAAK,oBAAL,GAA4B,CAA5B,CADI;EAFL;;AAMA,QAAO,KAAK,oBAAL,GAA4B,KAAK,SAAL,CAT6E;CAA7C;;;;;AAepE,qCAAqC,SAArC,CAA+C,KAA/C,GAAuD,YAAU;AAChE,MAAK,oBAAL,GAA4B,CAA5B,CADgE;CAAV;;AAKvD,OAAO,OAAP,GAAiB,oCAAjB","file":"ifr-motion/lookat/trackpolicy/TrackPolicyTriggerMovementTerminated.js","sourcesContent":["/**\n * @author jg\n * Copyright 2016 IF Robots LLC\n */\n\n\"use strict\";\n\nvar TrackPolicyTrigger = require(\"./TrackPolicyTrigger\");\n\n/**\n * @param {number} deadZone\n * @param {number} deadTime;\n * @constructor\n * @extends TrackPolicyTrigger\n */\nvar TrackPolicyTriggerMovementTerminated = function(deadZone, deadTime){\n\tTrackPolicyTrigger.call(this);\n\t/**@type {number}\n\t * @private */\n\tthis._deadZone = deadZone;\n\n\t/**@type {number}\n\t * @private */\n\tthis._deadTime = deadTime;\n\n\t/**@type {number}\n\t * @private */\n\tthis._deadTimeAccumulated = 0;\n};\n\nTrackPolicyTriggerMovementTerminated.prototype = Object.create(TrackPolicyTrigger.prototype);\nTrackPolicyTriggerMovementTerminated.prototype.constructor = TrackPolicyTriggerMovementTerminated;\n\n\n/**\n *\n * @param {LookatNodeDistanceReport} lookatNodeDistanceReport\n * @param {number} timeDelta\n * @return {?boolean}\n */\nTrackPolicyTriggerMovementTerminated.prototype.shouldStopTracking = function(lookatNodeDistanceReport, timeDelta){\n\tvar distance = lookatNodeDistanceReport.highestDistanceOptimalToFiltered;\n\n\tif(distance <= this._deadZone){\n\t\tthis._deadTimeAccumulated += timeDelta;\n\t}else{\n\t\tthis._deadTimeAccumulated = 0;\n\t}\n\n\treturn this._deadTimeAccumulated > this._deadTime;\n};\n\n/**\n * Called to notify trigger to reset state\n */\nTrackPolicyTriggerMovementTerminated.prototype.reset = function(){\n\tthis._deadTimeAccumulated = 0;\n};\n\n\nmodule.exports = TrackPolicyTriggerMovementTerminated;\n\n\n"],"sourceRoot":"/source/"}