{"version":3,"sources":["ifr-motion/dofs/TranslationControl.js"],"names":[],"mappings":"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","file":"ifr-motion/dofs/TranslationControl.js","sourcesContent":["/**\n * @author mattb\n * Copyright 2014 IF Robots LLC\n */\n\n\"use strict\";\n\nvar ModelControl = require(\"./ModelControl\");\nvar ModelControlFactory = require(\"./ModelControlFactory\");\nvar BasicFrame = require(\"../../ifr-geometry/BasicFrame\");\nvar THREE = require(\"three\");\n/**\n * @constructor\n * @extends ModelControl\n */\nvar TranslationControl = function()\n{\n\tModelControl.call(this);\n\n\t/** @type {string} */\n\tthis._skeletonFrameName = null;\n\n\t/** @type {THREE.Vector3} */\n\tthis._initialPosition = new THREE.Vector3();\n\t/** @type {Array.<THREE.Vector3>} */\n\tthis._translationalDirectionList = [];\n\n\t/** @type {Array.<number>} */\n\tthis._minList = [];\n\t/** @type {Array.<number>} */\n\tthis._maxList = [];\n\n\t/** @type {THREE.Object3D} */\n\tthis._skeletonFrame = null;\n};\n\nTranslationControl.prototype = Object.create(ModelControl.prototype);\nTranslationControl.prototype.constructor = TranslationControl;\nTranslationControl.prototype._controlType = \"TRANSLATION\";\n\n/**\n * @param {Object} jsonData\n * @override\n */\nTranslationControl.prototype.setFromJson = function(jsonData)\n{\n\tModelControl.prototype.setFromJson.call(this, jsonData);\n\n\tthis._dofNames.push(jsonData.dofName);\n\tthis._skeletonFrameName = jsonData.skeletonFrameName;\n\tthis._initialPosition.copy(BasicFrame.vector3FromJson(jsonData.xyzInitialPosition));\n\tthis._translationalDirectionList.push(BasicFrame.vector3FromJson(jsonData.xyzTranslationDirection));\n\tthis._minList.push(jsonData.min);\n\tthis._maxList.push(jsonData.max);\n};\n\n/**\n * @param {TranslationControl} translationControlB\n */\nTranslationControl.prototype.appendControl = function(translationControlB)\n{\n\tthis._controlNames = this._controlNames.concat(translationControlB._controlNames);\n\tthis._dofNames = this._dofNames.concat(translationControlB._dofNames);\n\tthis._translationalDirectionList = this._translationalDirectionList.concat(translationControlB._translationalDirectionList);\n\tthis._minList = this._minList.concat(translationControlB._minList);\n\tthis._maxList = this._maxList.concat(translationControlB._maxList);\n};\n\n/**\n * @param {Object.<string, THREE.Object3D>} modelMap\n * @return {!boolean}\n * @override\n */\nTranslationControl.prototype.attachToModel = function(modelMap)\n{\n\tthis._skeletonFrame = null;\n\n\tif (modelMap!=null && modelMap.hasOwnProperty(this._skeletonFrameName))\n\t{\n\t\tthis._skeletonFrame = modelMap[this._skeletonFrameName];\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n};\n\n/**\n * @param {number[]} dofValueList - values in order of our dofs\n * @return {THREE.Vector3}\n */\nfunction computeForDOFValueList(dofValueList) {\n\tvar newPosition = new THREE.Vector3().copy(this._initialPosition);\n\tvar deltaPosition = new THREE.Vector3();\n\tfor (var dofIndex = 0; dofIndex < dofValueList.length; dofIndex++) {\n\t\tvar dofValue = THREE.Math.clamp(dofValueList[dofIndex], this._minList[dofIndex], this._maxList[dofIndex]);\n\t\tdeltaPosition.copy(this._translationalDirectionList[dofIndex]).multiplyScalar(dofValue);\n\t\tnewPosition.add(deltaPosition);\n\t}\n\treturn newPosition;\n}\n\n/**\n * @param {Object.<string, Object>} dofValues\n * @return {THREE.Vector3} computed value (null if cannot compute)\n */\nTranslationControl.prototype.computeFromDOFValues = function(dofValues)\n{\n\tvar dofValueList = [];\n\tfor (var dofIndex=0; dofIndex<this._dofNames.length; dofIndex++)\n\t{\n\t\tif (dofValues.hasOwnProperty(this._dofNames[dofIndex]))\n\t\t{\n\t\t\tdofValueList.push(dofValues[this._dofNames[dofIndex]]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn null;\n\t\t}\n\t}\n\n\treturn computeForDOFValueList.call(this, dofValueList);\n};\n\n/**\n * @param {Object.<string, Object>} dofValues\n * @return {!boolean}\n * @override\n */\nTranslationControl.prototype.updateFromDOFValues = function(dofValues)\n{\n\tvar newPosition = this.computeFromDOFValues(dofValues);\n\tif(newPosition != null && this._skeletonFrame != null) //checks for null or undefined (eqnull)\n\t{\n\t\tthis._skeletonFrame.position.copy(newPosition);\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n};\n\n/**\n * @param {Pose} pose\n * @return {THREE.Vector3} computed value (null if cannot compute)\n */\nTranslationControl.prototype.computeFromPose = function(pose)\n{\n\tvar dofValueList = [];\n\tfor (var dofIndex=0; dofIndex<this._dofNames.length; dofIndex++)\n\t{\n\t\tvar val = pose.get(this._dofNames[dofIndex], 0);\n\t\tif (val != null)\n\t\t{\n\t\t\tdofValueList.push(val);\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn null;\n\t\t}\n\t}\n\n\treturn computeForDOFValueList.call(this, dofValueList);\n\n};\n\n/**\n * @param {Pose} pose\n * @return {!boolean}\n * @override\n */\nTranslationControl.prototype.updateFromPose = function(pose)\n{\n\tvar newPosition = this.computeFromPose(pose);\n\tif(newPosition != null && this._skeletonFrame != null) //checks for null or undefined (eqnull)\n\t{\n\t\tthis._skeletonFrame.position.copy(newPosition);\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n};\n\n\n/**\n * Creates a copy of this dof, or fills in this dof's data to the provided\n * argument (to allow type to be defined by subclass's getCopy).\n *\n * @param {TranslationControl} copyInto - optional object to copy into\n * @return {TranslationControl} copy of this dof, not attached to any model\n * @override\n */\nTranslationControl.prototype.getCopy = function(copyInto)\n{\n\tif(!copyInto){\n\t\tcopyInto = new TranslationControl();\n\t}\n\n\tModelControl.prototype.getCopy.call(this, copyInto);\n\n\tcopyInto._skeletonFrameName = this._skeletonFrameName;\n\n\tcopyInto._initialPosition = this._initialPosition?this._initialPosition.clone():null;\n\n\tcopyInto._translationalDirectionList = this._translationalDirectionList?this._translationalDirectionList.slice(0):null;\n\tif(copyInto._translationalDirectionList){ //copy the vecs\n\t\tfor(var i = 0; i < copyInto._translationalDirectionList.length; i++){\n\t\t\tcopyInto[i] = copyInto[i]?copyInto[i].clone():null;\n\t\t}\n\t}\n\n\tcopyInto._minList = this._minList?this._minList.slice(0):this._minList;\n\n\tcopyInto._maxList = this._maxList?this._maxList.slice(0):this._maxList;\n\n\treturn copyInto;\n};\n\n/**\n ** @returns {string}\n */\nTranslationControl.prototype.getTransformName = function(){\n\treturn this._skeletonFrameName;\n};\n\n/**\n * @return {Array.<string>}\n * @override\n */\nTranslationControl.prototype.getTransformNames = function(){\n\treturn [this.getTransformName()];\n};\n\n/**\n * @constructor\n */\nTranslationControl.Factory = function()\n{\n};\n\nTranslationControl.Factory.prototype = Object.create(ModelControlFactory.prototype);\nTranslationControl.Factory.prototype.constructor = TranslationControl.Factory;\nTranslationControl.Factory.prototype._controlType = TranslationControl.prototype._controlType;\nTranslationControl.Factory.prototype._controlConstructor = TranslationControl;\n\n/**\n * @param {Array.<ModelControl>} controlList\n * @return {Array.<ModelControl>}\n */\nTranslationControl.Factory.prototype.postProcessControlList = function(controlList)\n{\n\t/** @type {Object.<string, TranslationControl>} */\n\tvar translationControlMap = {};\n\n\t/** @type {Array.<ModelControl>} */\n\tvar trimmedControlList = [];\n\tfor (var c=0; c<controlList.length; c++)\n\t{\n\t\tvar control = controlList[c];\n\t\tif (control instanceof TranslationControl)\n\t\t{\n\t\t\tif (translationControlMap.hasOwnProperty(control._skeletonFrameName))\n\t\t\t{\n\t\t\t\tvar masterTranslationControl = translationControlMap[control._skeletonFrameName];\n\t\t\t\tmasterTranslationControl.appendControl(control);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ttranslationControlMap[control._skeletonFrameName] = control;\n\t\t\t\ttrimmedControlList.push(control);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttrimmedControlList.push(control);\n\t\t}\n\t}\n\n\treturn trimmedControlList;\n};\n\nmodule.exports = TranslationControl;"],"sourceRoot":"/source/"}