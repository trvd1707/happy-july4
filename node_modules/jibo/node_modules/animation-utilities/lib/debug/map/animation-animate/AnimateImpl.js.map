{"version":3,"sources":["animation-animate/AnimateImpl.js"],"names":[],"mappings":"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","file":"animation-animate/AnimateImpl.js","sourcesContent":["/**\n * @author mattb\n */\n\n\"use strict\";\n\nvar AnimationLoader = require(\"../ifr-motion/loaders/AnimationLoader\");\nvar Motion = require(\"../ifr-motion/base/Motion\");\nvar AnnotatedMotion = require(\"../ifr-motion/base/AnnotatedMotion\");\nvar Pose = require(\"../ifr-motion/base/Pose\");\nvar LinearTransitionBuilder = require(\"./LinearTransitionBuilderImpl\");\nvar AccelerationTransitionBuilder = require(\"./AccelerationTransitionBuilder\");\nvar SingleLookatBuilder = require(\"./SingleLookatBuilder\");\nvar SimpleMotionGenerator = require(\"./timeline/SimpleMotionGenerator\");\nvar LoopedMotionGenerator = require(\"./timeline/LoopedMotionGenerator\");\nvar slog = require(\"../ifr-core/SLog\");\nvar RendererOutput = require(\"../animation-visualize/RendererOutput\");\nvar DOFSet = require(\"../geometry-info/DOFSet\");\nvar THREE = require(\"three\");\n\n/**\n * @type {Object.<string, AnimationLoadResult>}\n * @private\n */\n\nvar animationCache = {};\nvar animationLoader = new AnimationLoader();\n\n\n/**\n *\n * @param {AnimationUtilities} animationUtilities - The associated animation utilities.\n * @param {string} uri - Location of animation file to load.\n * @param {AnimationBuilderCreatedCallback} cb - Callback; receives newly-created AnimationBuilder instance or null if creation/load failed.\n * @param {boolean} forceReload - If true, reloads from disk, even if cached (new value will be cached). Defaults to false.\n * @param {string} [layer] - Optional; layer to play to.\n * @private\n */\nvar createAnimationBuilder = function(animationUtilities, uri, cb, forceReload, layer) {\n\n\tvar self = animationUtilities;\n\n\tanimate.trajectory.getAnimation(uri, function(motion){\n\t\tvar builder = null;\n\t\tif(motion){\n\t\t\tbuilder = new AnimationBuilder(self.timeline, motion, (self.defaultTransition === null)?null:self.defaultTransition.clone(), self.robotInfo, layer);\n\t\t}\n\t\tif(cb){\n\t\t\tcb(builder);\n\t\t}\n\t}, forceReload);\n\n};\n\n\n/**\n * @description\n * Animation APIs\n *\n * All units of measure in SI (meters).\n *\n * ```\n * var animate = require(\"jibo\").animate;\n * ```\n *\n * Loading and playback of scripted animations:\n * ```\n * var animPath = \"some/path/dance.keys\";  // path to animation file\n * var basePath = \"some/path\";             // base path for texture resolution\n *\n * animate.createAnimationBuilderFromKeysPath(animPath, basePath, (builder) => {\n *     // add listener\n *     builder.on(animate.AnimationEventType.STOPPED, (eventType, instance, payload) => {\n *         console.log(\"Animation stopped; was interrupted = \" + payload.interrupted);\n *     });\n *\n *     // trigger an instance of the animation\n *     builder.play();\n * });\n *\n * ```\n *\n * Procedural lookat/orient behaviors:\n * ```\n * var target = new animate.THREE.Vector3(1.0, 0.0, 1.0);  // target position to look at\n *\n * var builder = animate.createLookatBuilder();\n * builder.startLookat(target);\n *\n * ```\n *\n * Utility methods, for example:\n * ```\n * animate.blink();  // blink the eye!\n * animate.setLEDColor([0.0, 0.0, 1.0]);  // set the LED color to blue\n * ```\n *\n * @exports jibo/animate\n */\nvar AnimationUtilities = function()\n{\n};\n\n/**\n * @private\n * @param {MotionTimeline} timeline\n * @param {RobotInfo} robotInfo\n */\nAnimationUtilities.prototype.init = function(timeline, robotInfo)\n{\n\tvar self = this;\n\n\t/** @type {MotionTimeline} */\n\t/** @private */\n\tthis.timeline = timeline;\n\n\t/** @type {RobotInfo} */\n\t/** @private */\n\tthis.robotInfo = robotInfo;\n\n\t/** @type {TransitionBuilder} */\n\t/** @private */\n\tthis.defaultTransition = this.createAccelerationTransitionBuilder(3, 5);\n\n\t//setup default defaultTransition to be fast on eye dofs, medium on body dofs, fast on LED\n\tthis.defaultTransition.setLimits(robotInfo.getBodyDOFNames(), 3, 5);\n\tthis.defaultTransition.setLimits(robotInfo.getEyeDOFNames(), 20, 40);\n\tthis.defaultTransition.setLimits(robotInfo.getDOFSet(\"LED\").getDOFs(), 10, 20);\n\n\tthis.blinkBuilder = null;\n\tthis.blinkInProgress = false;\n\tcreateAnimationBuilder(this, robotInfo.getConfig().getRobotURL()+\"jibo_blink.anim\", function(bb){\n\t\tbb.setTransitionIn(null);\n\t\tbb.on(animate.AnimationEventType.STOPPED, function(){\n\t\t\tself.blinkInProgress = false;\n\t\t});\n\t\tbb.on(animate.AnimationEventType.CANCELLED, function(){\n\t\t\tself.blinkInProgress = false;\n\t\t});\n\t\tself.blinkBuilder = bb;\n\t}, false, \"blink\");\n\n\t/**\n\t * Commonly-used DOF groups for use with [AnimationBuilder.setDOFs]{@link AnimationBuilder#setDOFs}\n\t * or [LookatBuilder.setDOFs]{@link LookatBuilder#setDOFs}.\n\t * @enum {DOFSet}\n\t * @memberof module:jibo/animate\n\t */\n\tvar dofs = {\n\t\t/**\n\t\t * Complete set of robot DOFs.\n\t\t */\n\t\tALL: robotInfo.getDOFSet(\"ALL\"),\n\t\t/**\n\t\t * Base motor only.\n\t\t */\n\t\tBASE: robotInfo.getDOFSet(\"BASE\"),\n\t\t/**\n\t\t * All body motors.\n\t\t */\n\t\tBODY: robotInfo.getDOFSet(\"BODY\"),\n\t\t/**\n\t\t * All eye DOFs (transform, color, texture).\n\t\t */\n\t\tEYE: robotInfo.getDOFSet(\"EYE\"),\n\t\t/**\n\t\t * Light ring LED color.\n\t\t */\n\t\tLED: robotInfo.getDOFSet(\"LED\"),\n\t\t/**\n\t\t * All overlay DOFs (transform, color, texture).\n\t\t */\n\t\tOVERLAY: robotInfo.getDOFSet(\"OVERLAY\"),\n\t\t/**\n\t\t * All screen DOFs (eye, overlay, background).\n\t\t */\n\t\tSCREEN: robotInfo.getDOFSet(\"SCREEN\"),\n\t\t/**\n\t\t * Eye translation + rotation.\n\t\t */\n\t\tEYE_ROOT: robotInfo.getDOFSet(\"EYE_ROOT\"),\n\t\t/**\n\t\t * Eye scale/deformation.\n\t\t */\n\t\tEYE_DEFORM: robotInfo.getDOFSet(\"EYE_DEFORM\"),\n\t\t/**\n\t\t * Eye color + texture.\n\t\t */\n\t\tEYE_RENDER: robotInfo.getDOFSet(\"EYE_RENDER\"),\n\t\t/**\n\t\t * Eye translation only.\n\t\t */\n\t\tEYE_TRANSLATE: robotInfo.getDOFSet(\"EYE_TRANSLATE\"),\n\t\t/**\n\t\t * Eye rotation only.\n\t\t */\n\t\tEYE_ROTATE: robotInfo.getDOFSet(\"EYE_ROTATE\"),\n\t\t/**\n\t\t * Eye color only.\n\t\t */\n\t\tEYE_COLOR: robotInfo.getDOFSet(\"EYE_COLOR\"),\n\t\t/**\n\t\t * Eye texture only.\n\t\t */\n\t\tEYE_TEXTURE: robotInfo.getDOFSet(\"EYE_TEXTURE\"),\n\t\t/**\n\t\t * Overlay translation + rotation.\n\t\t */\n\t\tOVERLAY_ROOT: robotInfo.getDOFSet(\"OVERLAY_ROOT\"),\n\t\t/**\n\t\t * Overlay scale/deformation.\n\t\t */\n\t\tOVERLAY_DEFORM: robotInfo.getDOFSet(\"OVERLAY_DEFORM\"),\n\t\t/**\n\t\t * Overlay color + texture.\n\t\t */\n\t\tOVERLAY_RENDER: robotInfo.getDOFSet(\"OVERLAY_RENDER\"),\n\t\t/**\n\t\t * Overlay translation only.\n\t\t */\n\t\tOVERLAY_TRANSLATE: robotInfo.getDOFSet(\"OVERLAY_TRANSLATE\"),\n\t\t/**\n\t\t * Overlay rotation only.\n\t\t */\n\t\tOVERLAY_ROTATE: robotInfo.getDOFSet(\"OVERLAY_ROTATE\"),\n\t\t/**\n\t\t * Overlay color only.\n\t\t */\n\t\tOVERLAY_COLOR: robotInfo.getDOFSet(\"OVERLAY_COLOR\"),\n\t\t/**\n\t\t * Overlay texture only.\n\t\t */\n\t\tOVERLAY_TEXTURE: robotInfo.getDOFSet(\"OVERLAY_TEXTURE\"),\n\t\t/**\n\t\t * Screen background color + texture.\n\t\t */\n\t\tSCREEN_BG_RENDER: robotInfo.getDOFSet(\"SCREEN_BG_RENDER\"),\n\t\t/**\n\t\t * Screen background color only.\n\t\t */\n\t\tSCREEN_BG_COLOR: robotInfo.getDOFSet(\"SCREEN_BG_COLOR\"),\n\t\t/**\n\t\t * Screen background texture only.\n\t\t */\n\t\tSCREEN_BG_TEXTURE: robotInfo.getDOFSet(\"SCREEN_BG_TEXTURE\")\n\t};\n\tthis.dofs = dofs;\n\n};\n\n/**\n * Gets the robot configuration info used by the animate module,\n * including DOF names, default values, and other geometric info.\n *\n * @return {RobotInfo}\n */\nAnimationUtilities.prototype.getRobotInfo = function() {\n\treturn this.robotInfo;\n};\n\n/**\n * Gets the high-precision clock used by the animate module.\n *\n * @return {Clock}\n */\nAnimationUtilities.prototype.getClock = function() {\n\treturn this.timeline.getClock();\n};\n\n/**\n * @callback module:jibo/animate~AnimationBuilderCreatedCallback\n * @param {AnimationBuilder} animationBuilder - The AnimationBuilder or null on failure\n */\n\n\n /**\n  * Creates an animation builder from a .anim file at the specified uri. The animation will be loaded first if\n  * necessary. This builder can be used for configuring animation parameters and inserting\n  * an instance into the timeline.\n  *\n  * @param {string} uri - Path to the .anim file.\n  * @param {module:jibo/animate~AnimationBuilderCreatedCallback} cb - Callback; receives newly-created {@link AnimationBuilder}, or null if creation/load failed.\n  * @param {boolean} forceReload - If true, reloads from disk even if cached (new value will be cached). Defaults to false.\n  */\nAnimationUtilities.prototype.createAnimationBuilder = function(uri, cb, forceReload) {\n\n\tcreateAnimationBuilder(this, uri, cb, forceReload);\n\n};\n\n\n/**\n * Creates an animation builder from a pre-loaded (or pre-assembled) animation data structure.\n * This builder can be used for configuring animation parameters and inserting\n * an instance into the timeline.\n * The animation data object must match the structure specified for on-disk (.anim) animation files.\n *\n * @param {Object} animationData - The animation data object.\n * @param {string} [parentDirectoryURI] - Optional; if present, texture paths will be resolved relative to the specified directory.\n * @param {string} [cacheKey] - Optional; if present, results will be cached using the specified key.\n * @return {AnimationBuilder} - The newly-created AnimationBuilder instance, or null if creation failed.\n */\n\nAnimationUtilities.prototype.createAnimationBuilderFromData = function(animationData, parentDirectoryURI, cacheKey) {\n\n\tvar motion = animate.trajectory.parseAnimation(animationData, parentDirectoryURI, cacheKey);\n\tif(motion){\n\t\treturn new AnimationBuilder(this.timeline, motion, (this.defaultTransition === null)?null:this.defaultTransition.clone(), this.robotInfo);\n\t}else{\n\t\treturn null;\n\t}\n\n};\n\n\n/**\n * Creates a builder for initiating lookat actions. This builder can be used for configuring a lookat\n * behaviors and inserting an instance of that lookat into the timeline.\n * @return {LookatBuilder}\n */\nAnimationUtilities.prototype.createLookatBuilder = function()\n{\n\treturn new SingleLookatBuilder(this.timeline, this.robotInfo, (this.defaultTransition === null)?null:this.defaultTransition.clone());\n};\n\n/**\n * Animates Jibo's eye to blink once.\n * @param [interrupt] {boolean} Set to true to interrupt an ongoing blink. Set to false (default) to ignore blink calls during an ongoing blink.\n */\nAnimationUtilities.prototype.blink = function(interrupt)\n{\n\tif(this.blinkBuilder!=null){\n\t\tif(this.blinkInProgress === false || interrupt === true) {\n\t\t\tthis.blinkBuilder.play();\n\t\t\tthis.blinkInProgress = true;\n\t\t}\n\t}else{\n\t\tslog.warn(\"Blink requested but blink builder not yet loaded\");\n\t}\n};\n\n/**\n * Stop all degrees of freedom motion on time-line\n * @private\n */\nAnimationUtilities.prototype.stopAll = function()\n{\n\t//TODO\n};\n\n/**\n * Convenience call that sets opacity of eye and overlay to 0% or 100%.\n * @param {boolean} visible Set to true to make the eye visible (default). Set to false to make the eye invisible.\n */\nAnimationUtilities.prototype.setEyeVisible = function(visible)\n{\n\tvar eyeTextureDOF = this.robotInfo.getDOFSet(\"EYE_TEXTURE\").getDOFs()[0];\n\tvar overlayTextureDOF = this.robotInfo.getDOFSet(\"OVERLAY_TEXTURE\").getDOFs()[0];\n\tvar defaultValues = this.robotInfo.getDefaultDOFValues();\n\tvar opaqueTexture = defaultValues[eyeTextureDOF];\n\tvar clearTexture = defaultValues[overlayTextureDOF];\n\n\tvar eyePose = new Pose(\"eye visibility pose\", [eyeTextureDOF, overlayTextureDOF]);\n\tif (visible)\n\t{\n\t\teyePose.set(eyeTextureDOF, opaqueTexture, 0);\n\t\teyePose.set(overlayTextureDOF, clearTexture, 0);\n\t}\n\telse\n\t{\n\t\teyePose.set(eyeTextureDOF, clearTexture, 0);\n\t\teyePose.set(overlayTextureDOF, clearTexture, 0);\n\t}\n\n\tvar eyeMotion = Motion.createFromPose(\"eye visibility motion\", eyePose, 0.5);\n\tvar startTime = this.timeline.getClock().currentTime();\n\tthis.timeline.add(new SimpleMotionGenerator(eyeMotion, startTime, this.robotInfo), \"default\");\n};\n\n/**\n * Convenience call that scales Jibo's eye to provided value, preserving proportions.\n * @param {number} scale Number to scale Jibo's eye size by.\n */\nAnimationUtilities.prototype.setEyeScale = function(scale)\n{\n\tvar eyeDeformers = this.robotInfo.getDOFSet(\"EYE_DEFORM\").plus(\"OVERLAY_DEFORM\").getDOFs();\n\tvar defaultPose = this.robotInfo.getKinematicInfo().getDefaultPose();\n\tvar eyePose = new Pose(\"eye pose\", eyeDeformers);\n\tfor (var i=0; i<eyeDeformers.length; i++)\n\t{\n\t\teyePose.set(eyeDeformers[i], defaultPose.get(eyeDeformers[i], 0) * scale, 0);\n\t}\n\tvar eyeMotion = Motion.createFromPose(\"eye scale motion\", eyePose, 0.5);\n\tvar startTime = this.timeline.getClock().currentTime();\n\tthis.timeline.add(new SimpleMotionGenerator(eyeMotion, startTime, this.robotInfo), \"default\");\n};\n\n/**\n * Convenience call that scales Jibo's eye by the specified x and y scale components.\n * @param {number} xScale - Desired x-axis scale.\n * @param {number} yScale - Desired y-axis scale.\n */\nAnimationUtilities.prototype.setEyeScaleXY = function(xScale, yScale)\n{\n\tvar eyeDeformers = this.robotInfo.getDOFSet(\"EYE_DEFORM\").plus(\"OVERLAY_DEFORM\").getDOFs();\n\tvar defaultPose = this.robotInfo.getKinematicInfo().getDefaultPose();\n\tvar eyePose = new Pose(\"eye pose\", eyeDeformers);\n\tfor (var i=0; i<eyeDeformers.length; i++)\n\t{\n\t\tif (eyeDeformers[i].indexOf(\"_t_2\") > -1)\n\t\t{\n\t\t\teyePose.set(eyeDeformers[i], defaultPose.get(eyeDeformers[i], 0) * yScale, 0);\n\t\t}\n\t\telse\n\t\t{\n\t\t\teyePose.set(eyeDeformers[i], defaultPose.get(eyeDeformers[i], 0) * xScale, 0);\n\t\t}\n\t}\n\tvar eyeMotion = Motion.createFromPose(\"eye scale motion\", eyePose, 0.5);\n\tvar startTime = this.timeline.getClock().currentTime();\n\tthis.timeline.add(new SimpleMotionGenerator(eyeMotion, startTime, this.robotInfo), \"default\");\n};\n\n/**\n * Convenience call that sets eye position to given x, y.\n * @param {number} x Desired x position of the eye in pixels.\n * @param {number} y Desired y position of the eye in pixels.\n */\nAnimationUtilities.prototype.setEyePosition = function(x, y)\n{\n\tvar eyeXYDOFs = this.robotInfo.getDOFSet(\"EYE_TRANSLATE\").getDOFs();\n\tvar overlayXYDOFs = this.robotInfo.getDOFSet(\"OVERLAY_TRANSLATE\").getDOFs();\n\tvar eyePose = new Pose(\"eye pose\", eyeXYDOFs.concat(overlayXYDOFs));\n\teyePose.set(eyeXYDOFs[0], x, 0);\n\teyePose.set(eyeXYDOFs[1], y, 0);\n\teyePose.set(overlayXYDOFs[0], x, 0);\n\teyePose.set(overlayXYDOFs[1], y, 0);\n\tvar eyeMotion = Motion.createFromPose(\"eye position motion\", eyePose, 0.5);\n\tvar startTime = this.timeline.getClock().currentTime();\n\tthis.timeline.add(new SimpleMotionGenerator(eyeMotion, startTime, this.robotInfo), \"default\");\n};\n\n/**\n * Convenience call that sets the LED light ring color.  Pass in either\n * a THREE.Color, or an array of three numbers (r,g,b) from 0 to 1.\n *\n * @param {THREE.Color|number[]} color Color to set the LED light ring to.\n */\nAnimationUtilities.prototype.setLEDColor = function(color)\n{\n\t/** @type {number[]} */\n\tvar rgbValues = null;\n\tif(Array.isArray(color)){\n\t\trgbValues = color;\n\t}else{\n\t\trgbValues = color.toArray();\n\t}\n\tvar dofNames = this.robotInfo.getDOFSet(\"LED\").getDOFs();\n\tvar colorPose = new Pose(\"LED pose\", dofNames);\n\tfor (var i=0; i<3; i++)\n\t{\n\t\tcolorPose.set(dofNames[i], rgbValues[i], 0);\n\t}\n\tvar colorMotion = Motion.createFromPose(\"LED motion\", colorPose, 0.5);\n\t//TODO: reactionTime\n\t//var delay = this.timeline.getReactionTime(animate.MODALITY_NAME, colorMotion);\n\tvar delay = 0;\n\tvar startTime = this.timeline.getClock().currentTime().add(delay);\n\tthis.timeline.add(new SimpleMotionGenerator(colorMotion, startTime, this.robotInfo), \"default\");\n};\n\n/**\n * Restores the robot to its default pose, respecting current base orientation.\n *\n * Optional arguments allow specification of which DOFs to include in the centering behavior and\n * whether the centering behavior should restore the robot to its global \"home\" orientation. By default, the\n * centering behavior will include all DOFs and will preserve the robot's current local orientation.\n *\n * @param {DOFSet} [whichDOFs] - Optional; set of DOFs to restore to default position. Defaults to all DOFs.\n * @param {boolean} [centerGlobally] - Optional; if true, also restores the robot to its global \"home\" orientation. Defaults to false.\n * @param {Function} [completionCallback] - Optional completion callback, called when centering behavior completes or is interrupted.\n */\nAnimationUtilities.prototype.centerRobot = function(whichDOFs, centerGlobally, completionCallback)\n{\n\tif (whichDOFs === undefined || whichDOFs === null) whichDOFs = this.dofs.ALL;\n\tif (centerGlobally === undefined || centerGlobally === null) centerGlobally = false;\n\n\tvar centerMotion = Motion.createFromPose(\"center motion\", this.robotInfo.getKinematicInfo().getDefaultPose(), 1/30, whichDOFs.getDOFs());\n\tvar animBuilder = new AnimationBuilder(this.timeline, new AnnotatedMotion(centerMotion), this.defaultTransition.clone(), this.robotInfo);\n\tvar builderCount = 1;\n\n\tvar resetBase = centerGlobally && whichDOFs.hasDOF(this.dofs.BASE.getDOFs()[0]);\n\tvar lookatBuilder = null;\n\tif (resetBase)\n\t{\n\t\tlookatBuilder = this.createLookatBuilder();\n\t\tlookatBuilder.setDOFs(this.dofs.BASE);\n\t\tbuilderCount++;\n\t}\n\n\tif (completionCallback)\n\t{\n\t\tvar builderFinished = function()\n\t\t{\n\t\t\tbuilderCount--;\n\t\t\tif (builderCount === 0)\n\t\t\t{\n\t\t\t\tcompletionCallback();\n\t\t\t}\n\t\t};\n\t\tanimBuilder.on(animate.AnimationEventType.CANCELLED, builderFinished);\n\t\tanimBuilder.on(animate.AnimationEventType.STOPPED, builderFinished);\n\t\tif (lookatBuilder)\n\t\t{\n\t\t\tlookatBuilder.on(animate.LookatEventType.CANCELLED, builderFinished);\n\t\t\tlookatBuilder.on(animate.LookatEventType.STOPPED, builderFinished);\n\t\t}\n\t}\n\n\tanimBuilder.play();\n\tif (lookatBuilder)\n\t{\n\t\tlookatBuilder.startLookat(new THREE.Vector3(1.0, 0.0, 0.0));\n\t}\n};\n\n/**\n * Sets the TransitionBuilder that the animate module will use by default to generate procedural transitions\n * between animations or static poses that require intermediate motion.\n *\n * @param {TransitionBuilder} transition - The TransitionBuilder to use as the new default.\n */\nAnimationUtilities.prototype.setDefaultTransition = function(transition) {\n\tthis.defaultTransition = transition;\n};\n\n/**\n * Gets the default TransitionBuilder used by the animate module for procedural transitions.\n *\n * @return {TransitionBuilder}\n */\nAnimationUtilities.prototype.getDefaultTransition = function() {\n\treturn this.defaultTransition;\n};\n\n/**\n * Creates a new transition builder that uses simple linear blending to generate transition motions.\n *\n * @return {LinearTransitionBuilder} - A new, configurable linear transition builder./\n */\nAnimationUtilities.prototype.createLinearTransitionBuilder = function() {\n\treturn animate.trajectory.createLinearTransitionBuilder(this.robotInfo);\n};\n\n/**\n * Creates a new transition builder that can generate transition motions using\n * configurable acceleration and velocity limits.\n *\n * @param {number} defaultMaxVelocity - Max velocity to use by default.\n * @param {number} defaultMaxAcceleration - Max acceleration to use by default.\n * @return {AccelerationTransitionBuilder} - A new, configurable acceleration transition builder.\n */\nAnimationUtilities.prototype.createAccelerationTransitionBuilder = function(defaultMaxVelocity, defaultMaxAcceleration) {\n\treturn animate.trajectory.createAccelerationTransitionBuilder(this.robotInfo, defaultMaxVelocity, defaultMaxAcceleration);\n};\n\n/**\n * Gets all RobotRenderers associated with the provided timeline.\n * @param {MotionTimeline} timeline\n * @return {RobotRenderer[]} renderers\n * @private\n */\nfunction getRenderers(timeline){\n\t/** @type {RobotRenderer[]} */\n\tvar renderers = [];\n\n\tvar outputs = timeline.getOutputs();\n\tfor (var i=0; i<outputs.length; i++){\n\t\tif (outputs[i] instanceof RendererOutput){\n\t\t\trenderers = renderers.concat(outputs[i].getRenderers());\n\t\t}\n\t}\n\treturn renderers;\n}\n\n\n/**\n * Installs this render plugin. If a plugin with the same name is already installed, that\n * plugin will be uninstalled first.\n * @param {RenderPlugin} renderPlugin - Plugin to install.\n */\nAnimationUtilities.prototype.installRenderPlugin = function(renderPlugin){\n\t/** @type {RobotRenderer[]} */\n\tvar renderers = getRenderers(this.timeline);\n\tfor(var i = 0; i < renderers.length; i++){\n\t\trenderers[i].installRenderPlugin(renderPlugin);\n\t}\n};\n\n/**\n * Removes named RenderPlugin. [uninstall()]{@link RenderPlugin#uninstall} will be called on the plugin.\n *\n * @param {string} renderPluginName RenderPlugin to remove.\n */\nAnimationUtilities.prototype.removeRenderPlugin = function(renderPluginName){\n\t/** @type {RobotRenderer[]} */\n\tvar renderers = getRenderers(this.timeline);\n\tfor(var i = 0; i < renderers.length; i++){\n\t\trenderers[i].removeRenderPlugin(renderPluginName);\n\t}\n};\n\n/**\n * Gets the names of all installed RenderPlugins.\n *\n * @returns {string[]}\n */\nAnimationUtilities.prototype.getInstalledRenderPluginNames = function(){\n\t/** @type {string[]} */\n\tvar pluginNames = [];\n\n\t/** @type {RobotRenderer[]} */\n\tvar renderers = getRenderers(this.timeline);\n\tfor(var i = 0; i < renderers.length; i++){\n\t\tvar partialNames = renderers[i].getInstalledRenderPluginNames();\n\t\tfor(var j = 0; j < partialNames.length; j++){\n\t\t\t//don't duplicate names\n\t\t\tif(pluginNames.indexOf(partialNames[j])<0){\n\t\t\t\tpluginNames.push(partialNames[j]);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn pluginNames;\n};\n\n\n\n\n/**\n * Protected constructor for internal use only.\n *\n * An AnimationInstance is a handle for an ongoing instance of a specific, configured animation.\n * AnimationInstances are returned by AnimationBuilder's [play]{@link AnimationBuilder#play} method.\n *\n * @param {AnimationBuilder} builder - Protected constructor parameter.\n * @param {MotionGenerator} transitionClip - Protected constructor parameter.\n * @param {MotionGenerator} animationClip - Protected constructor parameter.\n * @param {string} layer - Protected constructor parameter.\n * @protected\n * @constructor\n * @global\n */\nvar AnimationInstance = function(builder, transitionClip, animationClip, layer)\n{\n\t/** @type {AnimationBuilder} */\n\t/** @private */\n\tthis.builder = builder;\n\t/** @type {MotionGenerator} */\n\t/** @private */\n\tthis.transitionClip = transitionClip;\n\t/** @type {MotionGenerator} */\n\t/** @private */\n\tthis.animationClip = animationClip;\n\t/** @type {string} */\n\t/** @private */\n\tthis.layer = layer;\n};\n\n/**\n * Stops this animation instance.\n * @memberof AnimationInstance\n */\nAnimationInstance.prototype.stop = function()\n{\n\n\tvar timeline = this.builder.timeline;\n\t//find the soonest time we have not yet committed to\n\t//TODO: this is sometimes overly conservative:\n\t// in some edge cases dofs still in the clips may not be using their whole commitment window\n\tvar reactionTime = 0;\n\t//TODO: reactionTime\n\t//if(this.transitionClip!==null && !this.transitionClip.hasExited()){\n\t//\treactionTime = timeline.getReactionTime(animate.MODALITY_NAME, this.transitionClip.getMotion());\n\t//}\n\t//\n\t//if(!this.animationClip.hasExited()){\n\t//\treactionTime = Math.max(reactionTime, timeline.getReactionTime(animate.MODALITY_NAME, this.animationClip.getMotion()));\n\t//}\n\n\t//this is the earliest we could stop for the related dofs (aside from conservative consideration above)\n\t/** @type {Time} */\n\tvar stopTime = timeline.getClock().currentTime().add(reactionTime);\n\n\t//also, if all clips are fully committed, we will not stop\n\tif(stopTime.isGreater(this.animationClip.getEndTime())){\n\t\t//stopTime is after clip is already over; cannot stop.  do nothing.\n\t\t//slog it?\n\t\tif(this.animationClip.hasExited()){\n\t\t\tslog.warn(\"Ignoring stop on \" + this.animationClip.getName() + \" as it is already over\");\n\t\t}else{\n\t\t\tslog.warn(\"Ignoring stop on \" + this.animationClip.getName() + \" as it is already committed\");\n\t\t}\n\t\treturn;\n\t}\n\n\t//however we will not stop before any of the clips start!\n\tif(this.transitionClip === null){\n\t\t//there is no transition, our first stop opportunity is at the start of the main clip\n\t\tif(this.animationClip.getStartTime().isGreater(stopTime)){\n\t\t\tstopTime = this.animationClip.getStartTime();\n\t\t\tslog.info(\"Stopping called on transitionless animation \"+this.animationClip.getName()+\" before anim started, moving stopTime forward\");\n\t\t}\n\t}else{\n\t\tif(this.transitionClip.getStartTime().isGreater(stopTime)){\n\t\t\tstopTime = this.transitionClip.getStartTime();\n\t\t\tslog.info(\"Stopping called on animation \"+this.animationClip.getName()+\" before its transition started, moving stopTime forward\");\n\t\t}\n\t}\n\n\n\t/** @type {MotionGenerator} */\n\tvar useClip = null;\n\n\t//now find out which dofs are being used on stop time\n\tif(this.transitionClip !== null && this.transitionClip.getEndTime().isGreater(stopTime)){\n\t\t//we have a transition clip, and our stop time is before the end of it, so we should\n\t\t//use that clip for the stop pose\n\t\tuseClip = this.transitionClip;\n\t}else{\n\t\t//we don't have a transition clip, or our stop time is after the end of it, so use anim\n\t\tuseClip = this.animationClip;\n\t}\n\n\t/** @type {string[]} */\n\tvar dofsToStop = [];\n\n\t/** @type {string[]} */\n\tvar possibleDOFs = useClip.getDOFs();\n\n\tvar deltaToStopForClip = stopTime.subtract(useClip.getStartTime());\n\n\tfor(var i = 0; i < possibleDOFs.length; i++){\n\t\tvar durationForDOF = useClip.getDurationForDOF(possibleDOFs[i]);\n\t\tif(durationForDOF!==null && durationForDOF > deltaToStopForClip){\n\t\t\tdofsToStop.push(possibleDOFs[i]);\n\t\t}\n\t}\n\n\t//TODO: using zero-duration motion for now, might want to add explicit timeline stop() method\n\n\t/** @type {Pose} */\n\tvar stopPose = new Pose(\"stop pose\", dofsToStop);\n\tfor(var d = 0; d < dofsToStop.length; d++){\n\t\tstopPose.set(dofsToStop[d], [0]);\n\t}\n\n\t/** @type {Motion} */\n\tvar stopMotion = Motion.createFromPose(useClip.getName()+\"_stop\", stopPose, 0);\n\tvar stopClip = new SimpleMotionGenerator(stopMotion, stopTime, this.builder.robotInfo);\n\ttimeline.add(stopClip, this.layer);\n};\n\n/**\n * Get the start time for the animation's 'in' transition, or the start time for\n * the animation itself, if no 'in' transition is specified.\n *\n * @return {Time}\n * @memberof AnimationInstance\n */\nAnimationInstance.prototype.getTransitionStartTime = function()\n{\n\tif (this.transitionClip)\n\t{\n\t\treturn this.transitionClip.getStartTime();\n\t}\n\telse\n\t{\n\t\treturn this.animationClip.getStartTime();\n\t}\n};\n\n/**\n * Gets the estimated start time for the animation, following its\n * 'in' transition, if applicable.\n *\n * @return {Time}\n * @memberof AnimationInstance\n */\nAnimationInstance.prototype.getAnimationStartTime = function()\n{\n\treturn this.animationClip.getStartTime();\n};\n\n/**\n * Gets the estimated end time for the animation.\n *\n * @return {Time}\n * @memberof AnimationInstance\n */\nAnimationInstance.prototype.getAnimationEndTime = function()\n{\n\treturn this.animationClip.getEndTime();\n};\n\n/**\n * Gets the AnimationBuilder that generated this instance through \"play\".\n * @return {AnimationBuilder}\n * @memberof AnimationInstance\n */\nAnimationInstance.prototype.getBuilder = function()\n{\n\treturn this.builder;\n};\n\n\n/**\n * Protected constructor for internal use only.\n *\n * An AnimationBuilder is used to configure parameters and register event\n * listeners for a specific chunk of animation data. Instances of the configured\n * animation can be triggered via the [play]{@link AnimationBuilder#play} method.\n *\n * AnimationBuilders are typically created via the animate module's\n * [createAnimationBuilderFromKeysPath]{@link module:jibo/animate#createAnimationBuilderFromKeysPath} method.\n *\n * ```\n * var animate = require(\"jibo\").animate;\n *\n * var animPath = \"some/path/dance.keys\";  // path to animation file\n * var basePath = \"some/path\";             // base path for texture resolution\n *\n * animate.createAnimationBuilderFromKeysPath(animPath, basePath, (builder) => {\n *     // add listener\n *     builder.on(animate.AnimationEventType.STOPPED, (eventType, instance, payload) => {\n *         console.log(\"Animation stopped; was interrupted = \" + payload.interrupted);\n *     });\n *\n *     // trigger an instance of the animation\n *     builder.play();\n * });\n *\n * ```\n *\n * @param {MotionTimeline} timeline - Protected constructor parameter.\n * @param {AnnotatedMotion} motion - Protected constructor parameter.\n * @param {TransitionBuilder} transition - Protected constructor parameter.\n * @param {RobotInfo} robotInfo - Protected constructor parameter.\n * @param {string} [layer] - Protected constructor parameter.\n * @constructor\n * @protected\n * @global\n */\nvar AnimationBuilder = function(timeline, motion, transition, robotInfo, layer)\n{\n\tif(layer == null){ //null or undefined\n\t\tlayer = \"default\";\n\t}\n\t/** @private */\n\tthis.layer = layer;\n\n\t/** @type {MotionTimeline} */\n\t/** @private */\n\tthis.timeline = timeline;\n\t/** @type {AnnotatedMotion} */\n\t/** @private */\n\tthis.motion = motion;\n\t/** @type {string[]} */\n\t/** @private */\n\tthis.dofNames = Object.keys(motion.getMotion().getTracks());\n\t/** @type {Object<AnimationEventType,AnimationEventCallback[]>} */\n\t/** @private */\n\tthis.eventHandlers = {};\n\t/** @type {number} */\n\t/** @private */\n\tthis.speed = 1;\n\t/** @type {number} */\n\t/** @private */\n\tthis.numLoops = 1;\n\t/** @type {number} */\n\t/** @private */\n\tthis.inPoint = 0;\n\t/** @type {number} */\n\t/** @private */\n\tthis.outPoint = motion.getDuration();\n\t/** @type {TransitionBuilder} */\n\t/** @private */\n\tthis.transition = transition;\n\n\t/** @type {boolean} */\n\t/** @private */\n\tthis.stopOrient = true;\n\n\t/** @type {string[]} */\n\t/** @private */\n\tthis.layerDOFs = timeline.getDOFsForLayer(layer);\n\n\t/** @type {RobotInfo} */\n\t/** @private */\n\tthis.robotInfo = robotInfo;\n\n\t//init to all dofs\n\tthis.setDOFs(null);\n};\n\n//map between timeline events and animation events\nAnimationBuilder.prototype._createStartedHandler = function(animationInstance){\n\tvar h = this.eventHandlers[animate.AnimationEventType.STARTED];\n\tif(h) {\n\t\tvar startHandlers = h.slice(0);\n\t\treturn function () {\n\t\t\tfor (var i = 0; i < startHandlers.length; i++) {\n\t\t\t\tstartHandlers[i](animate.AnimationEventType.STARTED, animationInstance, {});\n\t\t\t}\n\t\t};\n\t}else{\n\t\treturn null;\n\t}\n};\n\n//map between timeline events and animation events\nAnimationBuilder.prototype._createStoppedHandler = function(animationInstance){\n\tvar h = this.eventHandlers[animate.AnimationEventType.STOPPED];\n\tif(h) {\n\t\tvar stopHandlers = h.slice(0);\n\t\treturn function (interrupted) {\n\t\t\tfor (var i = 0; i < stopHandlers.length; i++) {\n\t\t\t\tstopHandlers[i](animate.AnimationEventType.STOPPED, animationInstance, {interrupted: interrupted});\n\t\t\t}\n\t\t};\n\t}else{\n\t\treturn null;\n\t}\n};\n\n//map between timeline events and animation events\nAnimationBuilder.prototype._createRemovedHandler = function(animationInstance){\n\tvar hStopped = this.eventHandlers[animate.AnimationEventType.STOPPED];\n\tvar hCancelled = this.eventHandlers[animate.AnimationEventType.CANCELLED];\n\tif(hStopped || hCancelled) {\n\t\tvar stopHandlers = null;\n\t\tvar cancelHandlers = null;\n\t\tif(hStopped){\n\t\t\tstopHandlers = hStopped.slice(0);\n\t\t}\n\t\tif(hCancelled){\n\t\t\tcancelHandlers = hCancelled.slice(0);\n\t\t}\n\t\treturn function (started, stopped) {\n\t\t\tvar i;\n\t\t\tif(stopHandlers) {\n\t\t\t\tif (started && !stopped) { //if a clip is removed after start and before stop, we'll send a stop (interrupted) to the listeners\n\t\t\t\t\tfor ( i = 0; i < stopHandlers.length; i++) {\n\t\t\t\t\t\tstopHandlers[i](animate.AnimationEventType.STOPPED, animationInstance, {interrupted: true});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(cancelHandlers) {\n\t\t\t\tif (!started) { //if it never started, then we'll send a cancel.\n\t\t\t\t\tfor ( i = 0; i < cancelHandlers.length; i++) {\n\t\t\t\t\t\tcancelHandlers[i](animate.AnimationEventType.CANCELLED, animationInstance, {});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}else{\n\t\treturn null;\n\t}\n};\n\n//map between timeline events and animation events\nAnimationBuilder.prototype._createEventHandler = function(animationInstance){\n\tvar eventHandlers = null;\n\tif(this.eventHandlers[animate.AnimationEventType.EVENT]) {\n\t\teventHandlers = this.eventHandlers[animate.AnimationEventType.EVENT].slice(0);\n\t}\n\n\t/** @type {Object<string,AnimationEventCallback[]>} */\n\tvar customHandlers = {};\n\tvar eventKeys = Object.keys(this.eventHandlers);\n\tfor (var k = 0; k < eventKeys.length; k++) {\n\t\tvar eventKey = eventKeys[k];\n\t\tif (eventKey !== animate.AnimationEventType.STARTED && eventKey !== animate.AnimationEventType.STOPPED &&\n\t\t\t\teventKey !== animate.AnimationEventType.CANCELLED && eventKey !== animate.AnimationEventType.EVENT) {\n\t\t\tif (this.eventHandlers[eventKey]){\n\t\t\t\tcustomHandlers[eventKey] = this.eventHandlers[eventKey].slice(0);\n\t\t\t}\n\t\t}\n\t}\n\n\tif(eventHandlers || Object.keys(customHandlers).length > 0) {\n\t\treturn function (motionEvent) {\n\t\t\tvar i;\n\t\t\tif (eventHandlers){\n\t\t\t\tfor (i = 0; i < eventHandlers.length; i++) {\n\t\t\t\t\teventHandlers[i](animate.AnimationEventType.EVENT, animationInstance, {eventName: motionEvent.getEventName(), payload: motionEvent.getPayload()});\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar eventName = motionEvent.getEventName();\n\t\t\tif (customHandlers[eventName]){\n\t\t\t\tfor (i = 0; i < customHandlers[eventName].length; i++) {\n\t\t\t\t\tcustomHandlers[eventName][i](eventName, animationInstance, motionEvent.getPayload());\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}else{\n\t\treturn null;\n\t}\n};\n\n\n/**\n * Triggers an instance of the animation to start playing, using the configuration represented\n * in this AnimationBuilder.\n *\n * @return {AnimationInstance}\n * @memberof AnimationBuilder\n */\nAnimationBuilder.prototype.play = function()\n{\n\tvar startTime = this.timeline.getClock().currentTime();\n\n\t//limit to proper dofs\n\tvar motion = new Motion(this.motion.getMotion().getName());\n\tfor(var i = 0; i < this.dofNames.length; i++){ //todo: only do this if they don't match\n\t\tvar track = this.motion.getMotion().getTracks()[this.dofNames[i]];\n\t\tif(track) {\n\t\t\tmotion.addTrack(track);\n\t\t}\n\t}\n\tvar motionInstance = new AnnotatedMotion(motion, this.motion.getEvents());\n\n\t//set speed if necessary\n\tif(this.speed !== 1){\n\t\tmotionInstance.setSpeed(this.speed);\n\t}\n\n\n\tvar transitionDelay = 0;\n\tvar transitionClip = null;\n\tif(this.transition) {\n\t\tvar currentPose;\n\t\tvar targetMotion;\n\t\tif (this.layer === \"default\") {\n\t\t\t// on the default layer, transition from: the current \"absolute\" pose (combination of default and lookat layers)\n\t\t\t//currentPose = this.timeline.getCurrentState([\"default\", \"lookat\"]).getPose();\n\n\t\t\t// transition to the target \"absolute\" pose: the first pose of the target motion combined with the current lookat\n\t\t\t//var motionStartPose = motionInstance.getMotion().getPoseAtTime(0, this.robotInfo.getKinematicInfo().getInterpolatorSet());\n\t\t\t//var currentLookatState = this.timeline.getCurrentState([\"lookat\"]);\n\t\t\t//var motionStartState = new LayerState(currentLookatState.getTime(), motionStartPose);\n\t\t\t//var targetState = this.timeline.getLayerCombiner().combineLayers([\"default\", \"lookat\"], [motionStartState, currentLookatState]);\n\t\t\t//targetMotion = Motion.createFromPose(\"target motion\", targetState.getPose(), 0.5);\n\n\t\t\tcurrentPose = this.timeline.getCurrentState([this.layer]).getPose();\n\t\t\ttargetMotion = motionInstance.getMotion();\n\n\t\t\tif (this.stopOrient) {\n\t\t\t\tvar currentLookPose = this.timeline.getCurrentState([\"lookat\"]).getPose();\n\t\t\t\tvar targetLookMotion = Motion.createFromPose(\"stop look\", currentLookPose, 1);\n\t\t\t\tvar lookTransition = this.transition.generateTransition(currentLookPose, targetLookMotion, 0, currentLookPose.getDOFNames());\n\t\t\t\tthis.timeline.add(new SimpleMotionGenerator(lookTransition, startTime, this.robotInfo), \"lookat\");\n\t\t\t}\n\t\t} else {\n\t\t\t// on other layers, just transition from the current state of the layer to the start of the target motion\n\t\t\tcurrentPose = this.timeline.getCurrentState([this.layer]).getPose();\n\t\t\ttargetMotion = motionInstance.getMotion();\n\t\t}\n\n\t\tvar transitionMotion = this.transition.generateTransition(currentPose, targetMotion, 0, this.dofNames);\n\n\t\ttransitionClip = new SimpleMotionGenerator(transitionMotion, startTime, this.robotInfo);\n\t\ttransitionClip = this.timeline.add(transitionClip, this.layer);\n\n\t\tif(transitionClip !==  null){\n\t\t\ttransitionDelay = transitionClip.getDuration();\n\t\t}\n\t}\n\n\tvar animationInstance = new AnimationInstance(this, null, null, this.layer);\n\n\tvar animationClip = null;\n\tif (this.numLoops === 1)\n\t{\n\t\tanimationClip = new SimpleMotionGenerator(motionInstance.getMotion(), startTime.add(transitionDelay), this.robotInfo);\n\t\tanimationClip.setEvents(motionInstance.getEvents());\n\t}\n\telse\n\t{\n\t\tvar motionList = [motionInstance.getMotion()];\n\t\tvar motionEventsList = [motionInstance.getEvents()];\n\t\tif (this.transition)\n\t\t{\n\t\t\tvar finalPose = motionInstance.getMotion().getPoseAtTime(motionInstance.getMotion().getDuration(), this.robotInfo.getKinematicInfo().getInterpolatorSet());\n\t\t\tvar loopTransition = this.transition.generateTransition(finalPose, motionInstance.getMotion(), 0, this.dofNames);\n\t\t\tmotionList.push(loopTransition);\n\t\t\tmotionEventsList.push([]);\n\t\t}\n\t\tanimationClip = new LoopedMotionGenerator(motionList, this.numLoops, startTime.add(transitionDelay), this.robotInfo);\n\t\tanimationClip.setEvents(motionEventsList);\n\t}\n\tanimationClip.setHandlers(this._createStartedHandler(animationInstance), this._createStoppedHandler(animationInstance), this._createRemovedHandler(animationInstance), this._createEventHandler(animationInstance));\n\tanimationClip = this.timeline.add(animationClip, this.layer);\n\n\tanimationInstance.transitionClip = transitionClip;\n\tanimationInstance.animationClip = animationClip;\n\n\treturn animationInstance;\n};\n\n/**\n * Function signature for animation builder event listeners, for use with AnimationBuilder's [on]{@link AnimationBuilder#on} method.\n * @callback AnimationBuilder~AnimationEventCallback\n * @param {module:jibo/animate.AnimationEventType} eventName - The event type.\n * @param {AnimationInstance} animationInstance - Instance that generated this event.\n * @param {Object} payload - Event-specific payload.\n */\n\n/**\n * Registers an event listener.\n * @param {module:jibo/animate.AnimationEventType} eventName - The event type to listen for.\n * @param {AnimationBuilder~AnimationEventCallback} callback - The listener function.\n * @memberof AnimationBuilder\n */\nAnimationBuilder.prototype.on = function(eventName, callback)\n{\n\t/** @type {AnimationEventCallback[]} */\n\tvar handlersForType = this.eventHandlers[eventName];\n\tif(!handlersForType){\n\t\thandlersForType = [];\n\t\tthis.eventHandlers[eventName] = handlersForType;\n\t}\n\tif(handlersForType.indexOf(callback)===-1){\n\t\thandlersForType.push(callback);\n\t}\n};\n\n/**\n * Un-registers an event listener.\n * @param {module:jibo/animate.AnimationEventType} eventName - The event type.\n * @param {AnimationBuilder~AnimationEventCallback} callback - The listener function.\n * @memberof AnimationBuilder\n */\nAnimationBuilder.prototype.off = function(eventName, callback)\n{\n\t/** @type {AnimationEventCallback[]} */\n\tvar handlersForType = this.eventHandlers[eventName];\n\tif(handlersForType){\n\t\tvar index = handlersForType.indexOf(callback);\n\t\tif(index!==-1){\n\t\t\thandlersForType.splice(index, 1);\n\t\t}\n\t}\n};\n\n/**\n * Sets the speed of the animation.\n *\n * @param {number} speed - Animation speed. 1 for normal speed, 2 for twice as fast, 0.5 for half speed, etc.\n * @memberof AnimationBuilder\n */\nAnimationBuilder.prototype.setSpeed = function(speed)\n{\n\tthis.speed = speed;\n};\n\n/**\n * Sets the number of times to loop the animation before stopping.\n * Specify 0 to loop forever.\n * @param {number} numLoops - Number of times to loop the animation; 0 to loop forever.\n * @memberof AnimationBuilder\n */\nAnimationBuilder.prototype.setNumLoops = function(numLoops)\n{\n\tif (numLoops < 0)\n\t{\n\t\tthrow new Error(\"numLoops value is negative: \"+numLoops);\n\t}\n\tthis.numLoops = numLoops;\n};\n\n/**\n * Sets the DOFs to be used by this builder. The DOFs used are the intersection of\n * the DOFs passed as the argument here, the DOFs present in the underlying motion, and\n * the DOFs used by the layer to which this builder is bound.\n *\n * Commonly-used DOF groups are defined in [animate.dofs]{@link module:jibo/animate.dofs}.\n *\n * @param {DOFSet|string[]} dofNames - Names of DOFs to use; null to use all DOFs.\n * @memberof AnimationBuilder\n */\nAnimationBuilder.prototype.setDOFs = function(dofNames)\n{\n\tif(dofNames == null) { //null means max out the dofs\n\t\tdofNames = Object.keys(this.motion.getMotion().getTracks());\n\t}\n\telse if(dofNames instanceof DOFSet) {\n\t\tdofNames = dofNames.getDOFs();\n\t}\n\n\tthis.dofNames = []; //add intersection of dofNames, dofs in this motion, and dofs in our layerDOFs\n\tfor (var i = 0; i < dofNames.length; i++) {\n\t\tif(this.motion.getMotion().getTracks().hasOwnProperty(dofNames[i]) && //it's in the motion\n\t\t\tthis.layerDOFs.indexOf(dofNames[i]) > -1){  //it's also in the layer\n\t\t\tthis.dofNames.push(dofNames[i]);\n\t\t}\n\t}\n};\n\n/**\n * Gets the DOFs that will be used by this builder.\n *\n * @return {string[]}\n * @memberof AnimationBuilder\n */\nAnimationBuilder.prototype.getDOFs = function()\n{\n\treturn this.dofNames;\n};\n\n/**\n * Set sub-clip to play in animation.  Times are in original time scale (rather than altered timescale resulting from setSpeed)\n * @param {number} inPoint - play from this time in seconds instead of start of animation.  will start from beginning if null/undefined\n * @param {number} outPoint - if present, play to this time in seconds instead of end of animation.  will play to end if null/undefined\n * @memberof AnimationBuilder\n * @private\n */\nAnimationBuilder.prototype.setPlayBounds = function(inPoint, outPoint)\n{\n\tif (inPoint !== null && inPoint !== undefined)\n\t{\n\t\tthis.inPoint = inPoint;\n\t}\n\telse\n\t{\n\t\tthis.inPoint = 0;\n\t}\n\n\tif (outPoint !== null && outPoint !== undefined)\n\t{\n\t\tthis.outPoint = outPoint;\n\t}\n\telse\n\t{\n\t\tthis.outPoint = this.getSourceAnimationDuration();\n\t}\n};\n\n/**\n * Gets the duration, in seconds, of the source animation for this builder (unaffected by settings such as speed, etc).\n * @return {number}\n * @memberof AnimationBuilder\n */\nAnimationBuilder.prototype.getSourceAnimationDuration = function()\n{\n\treturn this.motion.getSourceMotionDuration();\n};\n\n/**\n * Gets the duration, in seconds, of the animation that will be produced by this builder given current settings (speed, etc).\n * @return {number}\n * @memberof AnimationBuilder\n */\nAnimationBuilder.prototype.getConfiguredAnimationDuration = function()\n{\n\tvar clipDuration = this.outPoint - this.inPoint;\n\treturn clipDuration / this.speed;\n};\n\n/**\n * Sets the transition builder that will be used to generate a smooth\n * transition into the start of the animation.\n *\n * @param {TransitionBuilder} transition - Transition builder to use for the animation's 'in' transition.\n * @memberof AnimationBuilder\n */\nAnimationBuilder.prototype.setTransitionIn = function(transition) {\n\tthis.transition = transition;\n};\n\n/**\n * Gets the transition builder currently specified for the animation's 'in' transition.\n *\n * @return {TransitionBuilder}\n * @memberof AnimationBuilder\n */\nAnimationBuilder.prototype.getTransitionIn = function() {\n\treturn this.transition;\n};\n\n/**\n * Sets the animation's base-blending policy.\n *\n * This policy has an effect only if the animation is configured to control the robot's base DOF.\n *\n * @param {boolean} stopOrient If true, the animation will seize exclusive control of\n * the robot's base DOF, stopping any in-progress orient behavior on that DOF. If false, the animation\n * will blend additively with any ongoing orient/lookt behavior on the base DOF.\n * @memberof AnimationBuilder\n */\nAnimationBuilder.prototype.setStopOrient = function(stopOrient) {\n\tthis.stopOrient = stopOrient;\n};\n\n/**\n * Sets the blending layer for the animation [warning: advanced usage only!]\n *\n * @param {string} layerName The name of the blending layer.\n * @memberof AnimationBuilder\n */\nAnimationBuilder.prototype.setLayer = function(layerName)\n{\n\tif (this.timeline.getDOFsForLayer(layerName) === null)\n\t{\n\t\tslog.error(\"AnimationBuilder: ignoring setLayer with unknown layer name: \"+layerName);\n\t}\n\telse\n\t{\n\t\tthis.layer = layerName;\n\t\tthis.layerDOFs = this.timeline.getDOFsForLayer(layerName);\n\t\t// trim our dofs to just the ones that are present in the layer\n\t\tthis.setDOFs(this.dofNames.slice(0));\n\t}\n};\n\n/**\n * Protected constructor for internal use only.\n *\n * A LookatInstance is a handle for an ongoing instance of a particular\n * procedural lookat/orient behavior. LookatInstances are returned by\n * LookatBuilder's [startLookat]{@link LookatBuilder#startLookat} method.\n *\n * @class\n * @global\n * @protected\n */\nvar LookatInstance = {};\n\n/**\n * @global\n */\nLookatInstance.prototype = {\n\n\t/* interface definition:        */\n\t/* eslint-disable no-unused-vars */\n\n\t/**\n\t * Stops this lookat behavior.\n\t */\n\tstop: function(){},\n\n\t/**\n\t * Modifies the target of this lookat behavior. The behavior will be\n\t * redirected toward the specified target position, unless the behavior has\n\t * already been stopped or interrupted.\n\t *\n\t * @param {THREE.Vector3|number[]} target - The target position (in world-space) towards which the behavior will be redirected.\n\t */\n\tupdateTarget: function(target){},\n\n\t/**\n\t * Gets the current target of the lookat behavior.\n\t *\n\t * @return {THREE.Vector3} current target\n\t */\n\tgetTarget: function(){},\n\n\n\t/**\n\t * Gets the LookatBuilder that generated this instance through \"startLookat\".\n\t * @return {LookatBuilder}\n\t */\n\tgetBuilder: function(){}\n\n\t/* end interface definition:        */\n\t/* eslint-enable no-unused-vars */\n\n};\n\n/**\n * Protected constructor for internal use only.\n *\n * A LookatBuilder is used to configure parameters and register event\n * listeners for a procedural lookat/orient behavior.  Instances of the configured\n * behavior can be triggered via the [startLookat]{@link LookatBuilder#startLookat} method.\n *\n * LookatBuilders are created via the animate module's\n * [createLookatBuilder]{@link module:jibo/animate#createLookatBuilder} method.\n *\n * ```\n * var animate = require(\"jibo\").animate;\n *\n * var target = new animate.THREE.Vector3(1.0, 0.0, 1.0);  // target position to look at\n *\n * var builder = animate.createLookatBuilder();\n * builder.startLookat(target);\n *\n * ```\n *\n * @class\n * @global\n * @protected\n */\nvar LookatBuilder = {};\n\n/**\n * @public\n * @global\n */\nLookatBuilder.prototype = {\n\n\t/* interface definition:        */\n\t/* eslint-disable no-unused-vars */\n\n\t/**\n\t * Triggers an instance of a lookat/orient behavior, using the configuration represented\n\t * in this LookatBuilder. The behavior will be directed toward the specified initial target position.\n\t *\n\t * @param {THREE.Vector3|number[]} target - The target position (in world-space) towards which the behavior will be directed.\n\t * @return {LookatInstance}\n\t */\n\tstartLookat: function(target){\n\t},\n\n\t/**\n\t * Function signature for lookat builder event listeners, for use with LookatBuilder's [on]{@link LookatBuilder#on} method.\n\t * @callback LookatBuilder~LookatEventCallback\n\t * @param {module:jibo/animate.LookatEventType} eventName - The event type.\n\t * @param {LookatInstance} lookatInstance - Lookat instance that generated this event.\n\t */\n\n\t/**\n\t * Registers an event listener.\n\t * @param {module:jibo/animate.LookatEventType} eventName - The event type to listen for.\n\t * @param {LookatBuilder~LookatEventCallback} callback - The listener function.\n\t * @memberof LookatBuilder#\n\t */\n\ton: function(eventName, callback){\n\t},\n\n\t/**\n\t * Un-registers an event listener.\n\t * @param {module:jibo/animate.LookatEventType} eventName - The event type.\n\t * @param {LookatBuilder~LookatEventCallback} callback - The listener function.\n\t */\n\toff: function(eventName, callback){\n\t},\n\n\t/**\n\t * Sets the DOFs to be used in the lookat/orient behavior.\n\t *\n\t * Commonly-used DOF groups are defined in [animate.dofs]{@link module:jibo/animate.dofs}.\n\t *\n\t * @param {DOFSet|string[]} dofNames - Names of DOFs to use; null to use all DOFs.\n\t */\n\tsetDOFs: function(dofNames){\n\t},\n\n\t/**\n\t * Gets the DOFs currently specified for this builder.\n\t *\n\t * @return {string[]}\n\t */\n\tgetDOFs: function(){\n\t},\n\n\t/**\n\t * Sets the lookat behavior's base-blending policy.\n\t *\n\t * This policy only has an effect if the behavior is configured to control the robot's base DOF.\n\t *\n\t * @param {boolean} orientFully If `true`, the behavior will seize exclusive control of\n\t * the robot's base DOF. If `false`, the behavior will blend additively with any ongoing animation or postural\n\t * offset on the base DOF.\n\t */\n\tsetOrientFully: function(orientFully){\n\t},\n\n\t/**\n\t * Turns continuous mode for the lookat behavior on or off.\n\t *\n\t * @param {boolean} isContinuous If `false`, the lookat behavior will stop when the target\n\t * is reached. If `true`, the lookat behavior will continue indefinitely, allowing the target to be modified\n\t * at any time via [updateTarget]{@link LookatInstance#updateTarget}.\n\t */\n\tsetContinuousMode: function(isContinuous){\n\t}\n\n\t/* end interface definition:        */\n\t/* eslint-enable no-unused-vars */\n\n};\n\nvar animate = {\n\n\tMODALITY_NAME: \"MOTION\",\n\n\t/**\n\t * Create an instance of the Animation Utilities API.\n\t * If both MotionTimeline and RobotInfo are provided, the instance will be fully initialized and ready for use.\n\t * Otherwise, the init() method must be used to complete initialization.\n\t *\n\t * @param {MotionTimeline} [timeline]\n\t * @param {RobotInfo} [robotInfo]\n\t * @return {AnimationUtilities}\n\t */\n\tcreateAnimationUtilities: function(timeline, robotInfo)\n\t{\n\t\tvar animationUtilities = new AnimationUtilities();\n\t\tif (timeline && robotInfo)\n\t\t{\n\t\t\tanimationUtilities.init(timeline, robotInfo);\n\t\t}\n\t\treturn animationUtilities;\n\t}\n\n};\n\nanimate.trajectory = {\n\n\t/**\n\t * @private\n\t * @callback AnimationLoadedCallback\n\t * @param {AnnotatedMotion} motion - motion that was loaded\n\t */\n\n\t/**\n\t * @param {string} uri\n\t * @param {AnimationLoadedCallback} callback\n\t * @param {boolean} forceReload - optional, defaults to not forcing reload\n\t */\n\tgetAnimation: function(uri, callback, forceReload){\n\t\tvar result;\n\t\tif (!forceReload){\n\t\t\tresult = animationCache[uri];\n\t\t}\n\n\t\tif (result){\n\t\t\tif(callback){\n\t\t\t\tcallback(new AnnotatedMotion(result.motion, result.events));\n\t\t\t}\n\t\t}else{\n\t\t\tanimationLoader.load(uri, function(){\n\t\t\t\tvar animResult = animationLoader.getResult();\n\t\t\t\tif (animResult.success){\n\t\t\t\t\tanimationCache[uri] = animResult;\n\t\t\t\t\tif (callback){\n\t\t\t\t\t\tcallback(new AnnotatedMotion(animResult.motion, animResult.events));\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tslog.error(\"animation load failed, \"+animResult.message+\" with URL:\\\"\"+uri+\"\\\"\");\n\t\t\t\t\tif (callback){\n\t\t\t\t\t\tcallback(null);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * Parse a pre-loaded (or pre-assembled) animation data structure.\n\t * The data object must match the structure specified for on-disk animation files.\n\t *\n\t * @param {Object} animationData - the animation data object\n\t * @param {string} [parentDirectoryURI] - optional; if present, texture paths will be resolved relative to the specified directory\n\t * @param {string} [cacheKey] - optional; if present, results will be cached using the specified key\n\t *\n\t * @return {AnnotatedMotion} - the resulting motion instance, or null if parse failed\n\t */\n\tparseAnimation: function(animationData, parentDirectoryURI, cacheKey){\n\t\tvar result = null;\n\t\tif (cacheKey){\n\t\t\tresult = animationCache[cacheKey];\n\t\t}\n\n\t\tif (result){\n\t\t\treturn new AnnotatedMotion(result.motion, result.events);\n\t\t}else{\n\t\t\tvar loader = new AnimationLoader();\n\t\t\tif (parentDirectoryURI){\n\t\t\t\tvar lastChar = parentDirectoryURI.slice(-1);\n\t\t\t\tif (!(lastChar === \"/\" || lastChar === \"\\\\\")){\n\t\t\t\t\tparentDirectoryURI = parentDirectoryURI + \"/\";\n\t\t\t\t}\n\t\t\t\tloader.resolvePaths = true;\n\t\t\t}else{\n\t\t\t\tloader.resolvePaths = false;\n\t\t\t}\n\n\t\t\tloader.parseData(animationData, parentDirectoryURI);\n\t\t\tvar animResult = loader.getResult();\n\t\t\tif (animResult.success){\n\t\t\t\tif (cacheKey){\n\t\t\t\t\tanimationCache[cacheKey] = animResult;\n\t\t\t\t}\n\t\t\t\treturn new AnnotatedMotion(animResult.motion, animResult.events);\n\t\t\t}else{\n\t\t\t\tslog.error(\"animation parse failed: \"+animResult.message);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * @param {RobotInfo} robotInfo\n\t * @return {LinearTransitionBuilder}\n\t */\n\tcreateLinearTransitionBuilder: function(robotInfo){\n\t\treturn new LinearTransitionBuilder(robotInfo);\n\t},\n\n\t/**\n\t * @param {RobotInfo} robotInfo\n\t * @param {number} defaultMaxVelocity\n\t * @param {number} defaultMaxAcceleration\n\t * @return {AccelerationTransitionBuilder}\n\t */\n\tcreateAccelerationTransitionBuilder: function(robotInfo, defaultMaxVelocity, defaultMaxAcceleration){\n\t\treturn new AccelerationTransitionBuilder(robotInfo, defaultMaxVelocity, defaultMaxAcceleration);\n\t}\n};\n\n/**\n * Enum Values for animation builder event types, for use with AnimationBuilder's [on]{@link AnimationBuilder#on} method.\n * @enum {string}\n * @memberof module:jibo/animate\n */\nvar AnimationEventType = {\n\t/**\n\t * Animation started.\n\t */\n\tSTARTED: \"STARTED\",\n\t/**\n\t * Animation stopped or interrupted; check event payload's 'interrupted' property (boolean).\n\t */\n\tSTOPPED: \"STOPPED\",     //check interrupted boolean description property\n\t/**\n\t * Animation cancelled before starting.\n\t */\n\tCANCELLED: \"CANCELLED\", //will not start\n\t/**\n\t * Custom animation event fired.\n\t */\n\tEVENT: \"EVENT\"  //custom event\n};\n\nanimate.AnimationEventType = AnimationEventType;\n\n\n/**\n * Enum Values for lookat builder event types, for use with LookatBuilder's [on]{@link LookatBuilder#on} method.\n * @enum {string}\n * @memberof module:jibo/animate\n */\nvar LookatEventType = {\n\t/**\n\t * Lookat started.\n\t */\n\tSTARTED: \"STARTED\",\n\t/**\n\t * Lookat target reached.\n\t */\n\tTARGET_REACHED: \"TARGET_REACHED\", //reported when look has reached target\n\t/**\n\t * Lookat target superseded.\n\t */\n\tTARGET_SUPERSEDED: \"TARGET_SUPERSEDED\", //reported when look given new target before reaching previous\n\t/**\n\t * Lookat stopped or interrupted; check event payload's 'interrupted' property (boolean).\n\t */\n\tSTOPPED: \"STOPPED\",\n\t/**\n\t * Lookat cancelled before starting.\n\t */\n\tCANCELLED: \"CANCELLED\" //will not start\n};\n\nanimate.LookatEventType = LookatEventType;\n\n\nmodule.exports = animate;\n"],"sourceRoot":"/source/"}