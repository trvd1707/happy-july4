{"version":3,"sources":["animation-animate/timeline/LookatMotionGenerator.js"],"names":[],"mappings":"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","file":"animation-animate/timeline/LookatMotionGenerator.js","sourcesContent":["/**\n * @author jg\n */\n\n\"use strict\";\n\nvar BaseMotionGenerator = require(\"./BaseMotionGenerator\");\nvar Pose = require(\"../../ifr-motion/base/Pose\");\nvar slog = require(\"../../ifr-core/SLog\");\n\nvar channel = \"LOOKAT\";\n\n/**\n * @param {MotionLookat} motionLookat\n * @param {Time} startTime\n * @param {THREE.Vector3} target\n * @param {string[]} [onDOFs=null] - use only these dofs (all dofs of motionLookat used if omitted/null)\n * @param {LookatMultiLayerStatusManager} multiLayerLookatStatus - handle statekeeping here to allow for multiple generators per lookat\n * @constructor\n * @extends BaseMotionGenerator\n */\nvar LookatMotionGenerator = function(motionLookat, startTime, target, onDOFs, multiLayerLookatStatus)\n{\n\tvar useDOFs;\n\tvar fullLookatDOFs = motionLookat.getDOFs();\n\tif(onDOFs!=null){ //null or undefined (eqnull)\n\t\tuseDOFs = [];\n\t\tfor(var i = 0; i < onDOFs.length; i++){\n\t\t\tif(fullLookatDOFs.indexOf(onDOFs[i])>=0){\n\t\t\t\tuseDOFs.push(onDOFs[i]);\n\t\t\t}else{\n\t\t\t\tslog(channel, \"Rejecting dof \"+onDOFs[i]+\" from lookat set as it is covered by no lookat nodes\");\n\t\t\t}\n\t\t}\n\t}else{\n\t\tuseDOFs = fullLookatDOFs;\n\t}\n\n\n\tBaseMotionGenerator.call(this, \"SingleLookGenerator\", startTime, useDOFs, Number.MAX_VALUE);\n\n\t/** @type {MotionLookat} */\n\tthis._motionLookat = motionLookat; //TODO: we assume that motion lookat is reset and primed with current state\n\n\t/** @type {THREE.Vector3} */\n\tthis._target = target.clone();\n\n\t/** @type {Pose} */\n\tthis._generatedPose = new Pose(\"LMG generated pose\", fullLookatDOFs);\n\n\t/**\n\t * pose frozen after particular dofs roll off the end\n\t * @type {Pose} */\n\tthis._frozenPose = new Pose(\"LMG frozen pose\", useDOFs);\n\n\tthis._motionLookat.getPose(this._frozenPose);\n\n\t/** @type {LookatMultiLayerStatusManager} */\n\tthis._multiLayerLookatStatus = multiLayerLookatStatus;\n};\n\nLookatMotionGenerator.prototype = Object.create(BaseMotionGenerator.prototype);\nLookatMotionGenerator.prototype.constructor = LookatMotionGenerator;\n\n/**\n *\n * @param {THREE.Vector3} target\n */\nLookatMotionGenerator.prototype.setTarget = function(target){\n\tthis._target.copy(target);\n};\n\n/**\n *\n * @param {Time} currentTime\n * @override\n */\nLookatMotionGenerator.prototype.notifyUpdateFinished = function(currentTime)\n{\n\tvar shouldEndNow = this._multiLayerLookatStatus.handleUpdateFinishedForGenerator(this, currentTime);\n\n\tif(shouldEndNow) {\n\t\tthis._targetDuration = currentTime.subtract(this._startTime);\n\t\tthis.cropEnd(currentTime);\n\t}\n\n\tBaseMotionGenerator.prototype.notifyUpdateFinished.call(this, currentTime);\n};\n\n/**\n * @param {string} dofName\n * @param {LayerState} partialRender\n * @returns {number[]}\n * @override\n */\nLookatMotionGenerator.prototype.getDOFState = function(dofName, partialRender)\n{\n\t/** @type {number} */\n\tvar relativeCurrentTime = this._currentTime.subtract(this.getStartTime());\n\t/** @type {number} */\n\tvar relativeEndTime = this.getDurationForDOF(dofName);\n\n\tvar val = null;\n\n\tif(relativeEndTime !== null) {\n\n\t\tif(relativeCurrentTime < relativeEndTime){\n\t\t\tthis._motionLookat.generatePoseIncremental(partialRender.getPose(), this._generatedPose, this._target, this._currentTime, dofName);\n\t\t\tval = this._generatedPose.get(dofName);\n\t\t\tif(val!==null) {\n\t\t\t\tthis._frozenPose.set(dofName, val);\n\t\t\t}\n\t\t}else{\n\t\t\tval = this._frozenPose.get(dofName);\n\t\t}\n\n\t}\n\n\treturn val!=null?val.slice(0):null;\n};\n\n\n\nmodule.exports = LookatMotionGenerator;\n"],"sourceRoot":"/source/"}