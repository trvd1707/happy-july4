{"version":3,"sources":["animation-animate/timeline/LookatMultiLayerStatusManager.js"],"names":[],"mappings":"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","file":"animation-animate/timeline/LookatMultiLayerStatusManager.js","sourcesContent":["/**\n * @author jg\n */\n\n\"use strict\";\n\nvar slog = require(\"../../ifr-core/SLog\");\nvar LookatMotionGenerator = require(\"./LookatMotionGenerator\");\n\nvar channel = \"LOOKAT\";\n\n/**\n * @param {LookatMotionGenerator} generator\n * @constructor\n */\nvar LayerStatus = function(generator){\n\tthis.generator = generator;\n\tthis.layerHasStarted = false;\n\tthis.layerHasStopped = false;\n\tthis.layerHasRemoved = false;\n};\n\n/**\n *\n * @param {MotionLookat} lookat\n * @param {Time} startTime\n * @param {THREE.Vector3} target\n * @param {boolean} continuous\n * @constructor\n */\nvar LookatMultiLayerStatusManager = function(lookat, startTime, target, continuous){\n\n\t/** @type {Map<LookatMotionGenerator,LayerStatus>} */\n\tthis._layerStatuses = new Map();\n\n\tthis._clipStartedHandler = null;\n\tthis._clipStoppedHandler = null;\n\tthis._clipRemovedHandler = null;\n\tthis._targetReachedHandler = null;\n\tthis._targetSupersededHandler = null;\n\n\t/** @type {THREE.Vector3} */\n\tthis._waitingToNotifyOnTarget = null;\n\n\t/** @type {MotionLookat} */\n\tthis._lookat = lookat;\n\t/** @type {Time} */\n\tthis._startTime = startTime;\n\t/** @type {THREE.Vector3} */\n\tthis._target = null;\n\t/** @type {boolean} */\n\tthis._continuous = continuous;\n\n\t/** @type {boolean} */\n\tthis._haveSentStart = false;\n\n\n\tthis.setTarget(target);\n};\n\n/**\n * Create generator to render nodes on a particular layer with the provided dofs.\n *\n * @param {string[] }dofNames\n * @return {LookatMotionGenerator}\n */\nLookatMultiLayerStatusManager.prototype.createGenerator = function(dofNames){\n\tvar gen = new LookatMotionGenerator(this._lookat, this._startTime, this._target, dofNames, this);\n\tthis._layerStatuses.set(gen, new LayerStatus(gen));\n\t//set that generator's events to come back to us for filtering/passing on to eventual listeners\n\tgen.setHandlers(\n\t\tthis.handleStarted.bind(this, gen),\n\t\tthis.handleStopped.bind(this, gen),\n\t\tthis.handleRemoved.bind(this, gen),\n\t\tnull);\n\treturn gen;\n};\n\n\nLookatMultiLayerStatusManager.prototype.setHandlers = function(clipStartedHandler, clipStoppedHandler, clipRemovedHandler,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttargetReachedHandler, targetSupersededHandler){\n\tthis._clipStartedHandler = clipStartedHandler;\n\tthis._clipStoppedHandler = clipStoppedHandler;\n\tthis._clipRemovedHandler = clipRemovedHandler;\n\tthis._targetReachedHandler = targetReachedHandler;\n\tthis._targetSupersededHandler = targetSupersededHandler;\n};\n\n/**\n *\n * @param {THREE.Vector3} newTarget\n */\nLookatMultiLayerStatusManager.prototype.setTarget = function(newTarget) {\n\tvar iter = this._layerStatuses.keys(); //removing for of for optimizer\n\tvar nextVal;\n\twhile(!(nextVal = iter.next()).done){\n\t\tnextVal.value.setTarget(newTarget);\n\t\t//this._layerStatuses.get(gen)._targetReached = false;\n\t}\n\tif(this._waitingToNotifyOnTarget != null && this._targetSupersededHandler != null){\n\t\tthis._targetSupersededHandler(this._waitingToNotifyOnTarget);\n\t}\n\tthis._waitingToNotifyOnTarget = newTarget.clone();\n\tthis._target = this._waitingToNotifyOnTarget;\n};\n\n/**\n *\n * @param {LookatMotionGenerator} generator\n * @param {Time} currentTime\n * @return {boolean} true if generator should truncate to current time (end now naturally)\n */\nLookatMultiLayerStatusManager.prototype.handleUpdateFinishedForGenerator = function(generator, currentTime){\n\t/** @type {string[]} */\n\tvar activeDOFs = this.getActiveDOFs(currentTime);\n\t/** @type {boolean} */\n\tvar reachedTarget = (activeDOFs.length>0) && (this._lookat.getDistanceRemaining(activeDOFs) < 0.001);\n\n\tif(reachedTarget && this._waitingToNotifyOnTarget!=null){\n\t\t//reachedTarget is actually a global state, across all layers.\n\t\t//so, we can safely notify now, don't need all layers to report this status\n\t\tif(this._targetReachedHandler != null){\n\t\t\tthis._targetReachedHandler(this._waitingToNotifyOnTarget);\n\t\t}\n\t\tthis._waitingToNotifyOnTarget = null;\n\t}\n\n\tif(reachedTarget && !this._continuous){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\t}\n};\n\n\n\n/**\n * Get the active dofs, across all generators.\n * @param {Time} time\n * @return {string[]} dofs active across all generators\n */\nLookatMultiLayerStatusManager.prototype.getActiveDOFs = function(time){\n\t/** @type{Set<string>} */\n\tvar s = new Set();\n\tvar iter = this._layerStatuses.keys(); //removing for of for optimizer\n\tvar nextVal;\n\twhile(!(nextVal = iter.next()).done){\n\t\tvar dofsInGen = nextVal.value.getActiveDOFs(time);\n\t\tfor (var i = 0; i < dofsInGen.length; i++) {\n\t\t\ts.add(dofsInGen[i]);\n\t\t}\n\t}\n\n\tvar dofs = [];\n\tvar dofIter = s.keys();\n\tvar nextDOF;\n\twhile(!(nextDOF = dofIter.next()).done){\n\t\tdofs.push(nextDOF.value);\n\t}\n\treturn dofs;\n};\n\n/**\n * Called by each generator when they start.  We will pass through 1 started when\n * at least one has started and all have been either started or removed.\n */\nLookatMultiLayerStatusManager.prototype.handleStarted = function(generator){\n\tvar genStatus = this._layerStatuses.get(generator);\n\tgenStatus.layerHasStarted = true;\n\tif(this._clipStartedHandler) {\n\t\tvar allStartedOrRemoved = true;\n\t\tfor (var genStatusI of this._layerStatuses.values()) {\n\t\t\tif (!(genStatusI.layerHasStarted || genStatusI.layerHasRemoved)) {\n\t\t\t\tallStartedOrRemoved = false;\n\t\t\t}\n\t\t}\n\t\tif (allStartedOrRemoved) {\n\t\t\tthis._clipStartedHandler();\n\t\t\tthis._haveSentStart = true;\n\t\t}\n\t}\n};\n\n/**\n * Called by each generator when/if they stopped\n *\n * Each clip will be either removed exactly once and stopped at most once.  We will\n * pass through a single stop if it comes in on the last active (not stopped or removed) layer.\n *\n * @param {LookatMotionGenerator} generator - the generator sending this event\n * @param {boolean} interrupted\n */\nLookatMultiLayerStatusManager.prototype.handleStopped = function(generator, interrupted){\n\tvar genStatus = this._layerStatuses.get(generator);\n\tif(genStatus.layerHasStopped){\n\t\tslog(channel, \"LookatMultiLayerStatManager: getting stop event for stopped layer \"+generator);\n\t}\n\tgenStatus.layerHasStopped = true;\n\tif(this._clipStoppedHandler) {\n\t\tvar allFinished = true;\n\t\tfor (var genStatusI of this._layerStatuses.values()) {\n\t\t\tif (!(genStatusI.layerHasStopped || genStatusI.layerHasRemoved)) {\n\t\t\t\tallFinished = false;\n\t\t\t}\n\t\t}\n\t\tif(allFinished) {\n\t\t\tthis._clipStoppedHandler(interrupted);\n\t\t}\n\t}\n};\n\n/**\n * Called by each generator when/if they are removed.\n *\n * Each clip will be either removed exactly once and stopped at most once.  We will\n * pass through a single \"remove\" when all have been removed.\n *\n * @param {LookatMotionGenerator} generator - the generator sending this event\n * @param {boolean} started\n * @param {boolean} stopped\n */\nLookatMultiLayerStatusManager.prototype.handleRemoved = function(generator, started, stopped){\n\tvar genStatus = this._layerStatuses.get(generator);\n\tgenStatus.layerHasRemoved = true;\n\tvar genStatusI = null;\n\n\t//check if we need to start, which could happen if one layer already started then a second layer\n\t//removes without starting\n\tif(!this._haveSentStart && this._clipStartedHandler){\n\t\t//should send start if there will be no more starts and we have started at least once\n\t\t//all clips removed or started\n\t\tvar noMoreStartsRemain = true;\n\t\tfor(genStatusI of this._layerStatuses.values()) {\n\t\t\tif (!(genStatusI.layerHasRemoved || genStatusI.layerHasStarted)) {\n\t\t\t\tnoMoreStartsRemain = false;\n\t\t\t}\n\t\t}\n\t\tif(noMoreStartsRemain){\n\t\t\tthis._clipRemovedHandler();\n\t\t\tthis._haveSentStart = true;\n\t\t}\n\t}\n\n\tif(this._clipRemovedHandler){\n\t\tvar allRemoved = true;\n\t\tfor (genStatusI of this._layerStatuses.values()) {\n\t\t\tif (!genStatusI.layerHasRemoved) {\n\t\t\t\tallRemoved = false;\n\t\t\t}\n\t\t}\n\t\tif(allRemoved) {\n\t\t\tthis._clipRemovedHandler(started, stopped);\n\t\t}\n\t}\n};\n\n\n\nmodule.exports = LookatMultiLayerStatusManager;"],"sourceRoot":"/source/"}