{"version":3,"sources":["animation-animate/timeline/LoopedMotionGenerator.js"],"names":[],"mappings":"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","file":"animation-animate/timeline/LoopedMotionGenerator.js","sourcesContent":["/**\n * @author mattb\n */\n\n\"use strict\";\n\nvar MotionValidator = require(\"../../ifr-motion/base/MotionValidator\");\nvar BaseMotionGenerator = require(\"./BaseMotionGenerator\");\nvar TimelineEventDispatcher = require(\"./TimelineEventDispatcher\");\n\n/**\n * @param {Motion[]} motionList\n * @param {number} numLoops - number of times to loop through the motion list, 0 to loop forever\n * @param {Time} startTime\n * @param {RobotInfo} robotInfo\n * @param {string[]} [dofNames]\n * @constructor\n * @extends BaseMotionGenerator\n */\nvar LoopedMotionGenerator = function(motionList, numLoops, startTime, robotInfo, dofNames)\n{\n\tif (!motionList)\n\t{\n\t\tthrow new Error(\"tried to construct LoopedMotionGenerator with empty motion list\");\n\t}\n\tif (numLoops < 0)\n\t{\n\t\tthrow new Error(\"numLoops value is negative: \"+numLoops);\n\t}\n\n\tif (!dofNames)\n\t{\n\t\tdofNames = Object.keys(motionList[0].getTracks());\n\t}\n\n\t// check that all of the motions in the list have all of the dofs\n\tvar m, i, tracks;\n\tfor (m=0; m<motionList.length; m++)\n\t{\n\t\ttracks = motionList[m].getTracks();\n\t\tfor (i=0; i<dofNames.length; i++)\n\t\t{\n\t\t\tif (!tracks.hasOwnProperty(dofNames[i]))\n\t\t\t{\n\t\t\t\tthrow new Error(\"LoopedMotionGenerator: motion \"+m+\" doesn't have a track for required DOF: \"+dofNames[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\t/** @type {number[]} */\n\tthis._durationList = [];\n\n\t// calculate motion durations\n\tfor (m=0; m<motionList.length; m++)\n\t{\n\t\tvar motionDuration = 0;\n\t\tfor (i=0; i<dofNames.length; i++)\n\t\t{\n\t\t\tvar trackDuration = motionList[m].getTracks()[dofNames[i]].getLength();\n\t\t\tif (trackDuration > motionDuration)\n\t\t\t{\n\t\t\t\tmotionDuration = trackDuration;\n\t\t\t}\n\t\t}\n\t\tthis._durationList.push(motionDuration);\n\t}\n\n\t/** @type {number} */\n\tthis._loopDuration = 0;\n\tfor (m=0; m<motionList.length; m++)\n\t{\n\t\tthis._loopDuration = this._loopDuration + this._durationList[m];\n\t}\n\n\tvar duration = 0;\n\tif (numLoops === 0)\n\t{\n\t\t// loop forever\n\t\tduration = Number.MAX_VALUE;\n\t}\n\telse\n\t{\n\t\tduration = this._loopDuration * numLoops;\n\t}\n\n\tBaseMotionGenerator.call(this, motionList[0].getName(), startTime, dofNames, duration);\n\n\tfor (m=0; m<motionList.length; m++)\n\t{\n\t\tMotionValidator.valuesExist(motionList[m]);\n\t}\n\n\t/** @type {Motion[]} */\n\tthis._motionList = motionList;\n\t/** @type {number} */\n\tthis._numLoops = numLoops;\n\n\t/** @type {number[]} */\n\tthis._customEventTimes = [];\n\t/** @type {number} */\n\tthis._eventLoopIndex = 0;\n\t/** @type {number} */\n\tthis._eventIndex = 0;\n\n\t/** @type {InterpolatorSet} */\n\tthis._interpolatorSet = robotInfo.getKinematicInfo().getInterpolatorSet();\n};\n\nLoopedMotionGenerator.prototype = Object.create(BaseMotionGenerator.prototype);\nLoopedMotionGenerator.prototype.constructor = LoopedMotionGenerator;\n\n/**\n * @param {MotionEvent[][]} motionEventsList\n * @override\n */\nLoopedMotionGenerator.prototype.setEvents = function(motionEventsList)\n{\n\tif (motionEventsList.length !== this._motionList.length)\n\t{\n\t\tthrow new Error(\"motionEventsList length \"+motionEventsList.length+\" doesn't match motionList length \"+this._motionList.length);\n\t}\n\n\tvar timeOffset = 0;\n\tfor (var m=0; m<this._motionList.length; m++)\n\t{\n\t\tvar motionEvents = motionEventsList[m];\n\t\tfor (var evi = 0; evi < motionEvents.length; evi++)\n\t\t{\n\t\t\tthis._customEvents.push(motionEvents[evi]);\n\t\t\tthis._customEventTimes.push(timeOffset + motionEvents[evi].getTimestamp());\n\t\t}\n\t\ttimeOffset = timeOffset + this._durationList[m];\n\t}\n};\n\n/**\n * @param {string} dofName\n * @param {LayerState} partialRender\n * @returns {number[]}\n * @override\n */\nLoopedMotionGenerator.prototype.getDOFState = function(dofName, partialRender) // eslint-disable-line no-unused-vars\n{\n\tvar relativeCurrentTime = this._currentTime.subtract(this.getStartTime());\n\tvar relativeEndTime = this.getDurationForDOF(dofName);\n\tif (relativeEndTime !== null)\n\t{\n\t\tvar sampleTime = Math.min(relativeCurrentTime, relativeEndTime);\n\t\tsampleTime = Math.max(sampleTime, 0);\n\n\t\tvar loopIndex = Math.floor(sampleTime / this._loopDuration);\n\t\tif (this._numLoops !== 0)\n\t\t{\n\t\t\tloopIndex = Math.min(loopIndex, this._numLoops-1);\n\t\t}\n\n\t\tvar loopTime = sampleTime - (this._loopDuration * loopIndex);\n\n\t\tvar motionIndex = 0;\n\t\tvar motionTime = loopTime;\n\t\twhile (motionIndex < this._motionList.length-1 && motionTime > this._durationList[motionIndex])\n\t\t{\n\t\t\tmotionTime = motionTime - this._durationList[motionIndex];\n\t\t\tmotionIndex++;\n\t\t}\n\n\t\tvar sample = this._motionList[motionIndex].getTracks()[dofName].getDataAtTime(motionTime, this._interpolatorSet.getInterpolator(dofName));\n\n\t\treturn sample;\n\t}\n\telse\n\t{\n\t\treturn null;\n\t}\n};\n\n/**\n * @override\n */\nLoopedMotionGenerator.prototype.queueCustomEvents = function()\n{\n\tif(this.hasEntered() && !this.hasExited() && this._clipEventHandler)\n\t{\n\t\tvar relativeCurrentTime = this._currentTime.subtract(this.getStartTime());\n\t\tvar relativeEndTime = this.getDuration();\n\n\t\tvar sampleTime = Math.min(relativeCurrentTime, relativeEndTime);\n\t\tsampleTime = Math.max(sampleTime, 0);\n\n\t\tvar loopIndex = Math.floor(sampleTime / this._loopDuration);\n\t\tif (this._numLoops !== 0)\n\t\t{\n\t\t\tloopIndex = Math.min(loopIndex, this._numLoops-1);\n\t\t}\n\n\t\tvar loopTime = sampleTime - (this._loopDuration * loopIndex);\n\n\t\t// iterate up through any loops we've completed\n\t\twhile (this._eventLoopIndex < loopIndex)\n\t\t{\n\t\t\twhile (this._eventIndex < this._customEvents.length)\n\t\t\t{\n\t\t\t\tTimelineEventDispatcher.queueEvent(this._clipEventHandler, [this._customEvents[this._eventIndex]]);\n\t\t\t\tthis._eventIndex++;\n\t\t\t}\n\n\t\t\tthis._eventLoopIndex++;\n\t\t\tthis._eventIndex = 0;\n\t\t}\n\n\t\t// iterate up through loopTime for the current loop\n\t\twhile (this._eventIndex < this._customEvents.length && this._customEventTimes[this._eventIndex] <= loopTime)\n\t\t{\n\t\t\tTimelineEventDispatcher.queueEvent(this._clipEventHandler, [this._customEvents[this._eventIndex]]);\n\t\t\tthis._eventIndex++;\n\t\t}\n\t}\n};\n\n\nmodule.exports = LoopedMotionGenerator;\n"],"sourceRoot":"/source/"}