{"version":3,"sources":["animation-animate/timeline/SimpleLayerCombiner.js"],"names":[],"mappings":";;;;AAIA;;AAEA,IAAI,gBAAgB,QAAQ,iBAAR,CAAhB;;;;;AAMJ,IAAI,sBAAsB,SAAtB,mBAAsB,GAC1B;AACC,eAAc,IAAd,CAAmB,IAAnB;;;AADD,KAIC,CAAK,eAAL,GAAuB,EAAvB,CAJD;CAD0B;;AAQ1B,oBAAoB,SAApB,GAAgC,OAAO,MAAP,CAAc,cAAc,SAAd,CAA9C;AACA,oBAAoB,SAApB,CAA8B,WAA9B,GAA4C,mBAA5C;;;;;;AAMA,oBAAoB,SAApB,CAA8B,iBAA9B,GAAkD,UAAS,SAAT,EAAoB,cAApB,EAClD;AACC,MAAK,eAAL,CAAqB,SAArB,IAAkC,cAAlC,CADD;CADkD;;;;;;;AAUlD,oBAAoB,SAApB,CAA8B,aAA9B,GAA8C,UAAS,UAAT,EAAqB,WAArB,EAC9C;AACC,KAAI,CAAC,UAAD,EACJ;AACC,SAAO,IAAP,CADD;EADA;;AAKA,KAAI,gBAAgB,YAAY,CAAZ,EAAe,OAAf,EAAhB,CANL;AAOC,MAAK,IAAI,IAAE,CAAF,EAAK,IAAE,WAAW,MAAX,EAAmB,GAAnC,EACA;AACC,MAAI,WAAW,YAAY,CAAZ,EAAe,WAAf,EAAX,CADL;AAEC,OAAK,IAAI,IAAE,CAAF,EAAK,IAAE,SAAS,MAAT,EAAiB,GAAjC,EACA;AACC,QAAK,cAAL,CAAoB,aAApB,EAAmC,WAAW,CAAX,CAAnC,EAAkD,YAAY,CAAZ,CAAlD,EAAkE,SAAS,CAAT,CAAlE,EADD;GADA;EAHD;;AASA,QAAO,aAAP,CAhBD;CAD8C;;;;;;;;;AA2B9C,oBAAoB,SAApB,CAA8B,cAA9B,GAA+C,UAAS,aAAT,EAAwB,SAAxB,EAAmC,UAAnC,EAA+C,OAA/C,EAC/C;AACC,KAAI,eAAe,cAAc,OAAd,GAAwB,GAAxB,CAA4B,OAA5B,CAAf,CADL;AAEC,KAAI,aAAa,WAAW,OAAX,GAAqB,GAArB,CAAyB,OAAzB,CAAb,CAFL;;AAIC,KAAI,WAAW,KAAK,eAAL,CAAqB,SAArB,CAAX,CAJL;;AAMC,KAAI,CAAC,YAAD,IAAiB,CAAC,UAAD,IAAe,CAAC,QAAD,EACpC;;EADA,MAKA;AACC,OAAI,gBAAgB,SAAS,cAAT,CAAwB,OAAxB,EAAiC,YAAjC,EAA+C,UAA/C,EAA2D,IAA3D,CAAhB,CADL;AAEC,iBAAc,OAAd,GAAwB,GAAxB,CAA4B,OAA5B,EAAqC,aAArC,EAFD;GALA;CAP8C;;AAkB/C,OAAO,OAAP,GAAiB,mBAAjB","file":"animation-animate/timeline/SimpleLayerCombiner.js","sourcesContent":["/**\n * @author mattb\n */\n\n\"use strict\";\n\nvar LayerCombiner = require(\"./LayerCombiner\");\n\n\n/**\n * @constructor\n */\nvar SimpleLayerCombiner = function()\n{\n\tLayerCombiner.call(this);\n\n\t/** @type {Object.<string, SampleCombiner>} */\n\tthis.sampleCombiners = {};\n};\n\nSimpleLayerCombiner.prototype = Object.create(LayerCombiner.prototype);\nSimpleLayerCombiner.prototype.constructor = SimpleLayerCombiner;\n\n/**\n * @param {string} layerName\n * @param {SampleCombiner} sampleCombiner\n */\nSimpleLayerCombiner.prototype.setSampleCombiner = function(layerName, sampleCombiner)\n{\n\tthis.sampleCombiners[layerName] = sampleCombiner;\n};\n\n/**\n * @param {string[]} layerNames\n * @param {LayerState[]} layerStates\n * @returns {LayerState}\n */\nSimpleLayerCombiner.prototype.combineLayers = function(layerNames, layerStates)\n{\n\tif (!layerNames)\n\t{\n\t\treturn null;\n\t}\n\n\tvar combinedState = layerStates[0].getCopy();\n\tfor (var i=1; i<layerNames.length; i++)\n\t{\n\t\tvar dofNames = layerStates[i].getDOFNames();\n\t\tfor (var d=0; d<dofNames.length; d++)\n\t\t{\n\t\t\tthis.incrementState(combinedState, layerNames[i], layerStates[i], dofNames[d]);\n\t\t}\n\t}\n\n\treturn combinedState;\n};\n\n/**\n * @param {LayerState} combinedState\n * @param {string} layerName\n * @param {LayerState} layerState\n * @param {string} dofName\n * @abstract\n */\nSimpleLayerCombiner.prototype.incrementState = function(combinedState, layerName, layerState, dofName)\n{\n\tvar currentValue = combinedState.getPose().get(dofName);\n\tvar layerValue = layerState.getPose().get(dofName);\n\n\tvar combiner = this.sampleCombiners[layerName];\n\n\tif (!currentValue || !layerValue || !combiner)\n\t{\n\t\t// skip layer\n\t}\n\telse\n\t{\n\t\tvar combinedValue = combiner.combineSamples(dofName, currentValue, layerValue, null);\n\t\tcombinedState.getPose().set(dofName, combinedValue);\n\t}\n};\n\nmodule.exports = SimpleLayerCombiner;"],"sourceRoot":"/source/"}