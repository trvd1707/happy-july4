{"version":3,"sources":["animation-animate/timeline/PropertiesPose.js"],"names":[],"mappings":";;;;;AAMA;;;;;;;AAMA,IAAI,iBAAiB,SAAjB,cAAiB,CAAS,QAAT,EACrB;AACC,YAAW,QAAC,KAAa,SAAb,GAA0B,QAA3B,GAAsC,EAAtC;;AADZ,KAGC,CAAK,OAAL,GAAe,EAAf,CAHD;AAIC,MAAK,IAAI,IAAE,CAAF,EAAK,IAAE,SAAS,MAAT,EAAiB,GAAjC,EACA;AACC,OAAK,OAAL,CAAa,SAAS,CAAT,CAAb,IAA4B,EAA5B,CADD;EADA;CALoB;;;;;;;;;AAkBrB,eAAe,SAAf,CAAyB,GAAzB,GAA+B,UAAS,OAAT,EAAkB,aAAlB,EAC/B;AACC,KAAI,KAAK,OAAL,CAAa,cAAb,CAA4B,OAA5B,CAAJ,EACA;AACC,OAAK,OAAL,CAAa,OAAb,IAAwB,EAAxB,CADD;AAEC,MAAI,QAAQ,gBAAkB,aAAlB,GAAkC,EAAlC,CAFb;AAGC,MAAI,OAAO,OAAO,IAAP,CAAY,KAAZ,CAAP,CAHL;AAIC,OAAK,IAAI,IAAE,CAAF,EAAK,IAAE,KAAK,MAAL,EAAa,GAA7B,EACA;AACC,QAAK,OAAL,CAAa,OAAb,EAAsB,KAAK,CAAL,CAAtB,IAAiC,MAAM,KAAK,CAAL,CAAN,CAAjC,CADD;GADA;EALD;CAF8B;;;;;;;;;AAqB/B,eAAe,SAAf,CAAyB,GAAzB,GAA+B,UAAS,OAAT,EAAkB,aAAlB,EAC/B;AACC,KAAI,KAAK,OAAL,CAAa,cAAb,CAA4B,OAA5B,CAAJ,EACA;AACC,MAAI,QAAQ,gBAAkB,aAAlB,GAAkC,EAAlC,CADb;AAEC,MAAI,OAAO,OAAO,IAAP,CAAY,KAAZ,CAAP,CAFL;AAGC,OAAK,IAAI,IAAE,CAAF,EAAK,IAAE,KAAK,MAAL,EAAa,GAA7B,EACA;AACC,QAAK,OAAL,CAAa,OAAb,EAAsB,KAAK,CAAL,CAAtB,IAAiC,MAAM,KAAK,CAAL,CAAN,CAAjC,CADD;GADA;EAJD;CAF8B;;;;;;;;;;;;;AAwB/B,eAAe,SAAf,CAAyB,GAAzB,GAA+B,UAAS,OAAT,EAAkB,YAAlB,EAC/B;AACC,KAAI,KAAK,OAAL,CAAa,cAAb,CAA4B,OAA5B,CAAJ,EACA;AACC,MAAI,GAAJ,CADD;AAEC,MAAI,iBAAiB,SAAjB,EACJ;AACC,SAAM,KAAK,OAAL,CAAa,OAAb,EAAsB,YAAtB,CAAN,CADD;GADA,MAKA;AACC,SAAM,KAAK,OAAL,CAAa,OAAb,CAAN,CADD;GALA;AAQA,SAAO,GAAC,KAAQ,SAAR,GAAqB,GAAtB,GAA4B,IAA5B,CAVR;EADA,MAcA;AACC,SAAO,IAAP,CADD;EAdA;CAF8B;;;;;AAwB/B,eAAe,SAAf,CAAyB,WAAzB,GAAuC,YACvC;AACC,QAAO,OAAO,IAAP,CAAY,KAAK,OAAL,CAAnB,CADD;CADuC;;;;;;;AAUvC,eAAe,SAAf,CAAyB,OAAzB,GAAmC,YACnC;AACC,KAAI,WAAW,KAAK,WAAL,EAAX,CADL;AAEC,KAAI,IAAI,IAAI,cAAJ,CAAmB,QAAnB,CAAJ,CAFL;AAGC,MAAK,IAAI,IAAE,CAAF,EAAK,IAAE,SAAS,MAAT,EAAiB,GAAjC,EACA;AACC,IAAE,GAAF,CAAM,SAAS,CAAT,CAAN,EAAmB,KAAK,GAAL,CAAS,SAAS,CAAT,CAAT,CAAnB,EADD;EADA;AAIA,QAAO,CAAP,CAPD;CADmC;;AAWnC,OAAO,OAAP,GAAiB,cAAjB","file":"animation-animate/timeline/PropertiesPose.js","sourcesContent":["/**\n * @author mattb, jg\n * Copyright 2015 IF Robots LLC\n */\n\n\n\"use strict\";\n\n/**\n * @param {Array.<string>} dofNames - array of DOF names that this pose will store values for\n * @constructor\n */\nvar PropertiesPose = function(dofNames)\n{\n\tdofNames = (dofNames !== undefined) ? dofNames : [];\n\t/** @type {Object.<string, Object.<string, string|number|boolean>>} */\n\tthis.dofVals = {};\n\tfor (var i=0; i<dofNames.length; i++)\n\t{\n\t\tthis.dofVals[dofNames[i]] = {};\n\t}\n};\n\n/**\n * Set the entry for the specified DOF name to the specified value.  If the specified DOF name\n * is not an element of this pose, this call has no effect.\n *\n * @param {string} dofName - name of the DOF entry to set\n * @param {Object.<string, string|number|boolean>} dofProperties - properties for the specified DOF\n */\nPropertiesPose.prototype.set = function(dofName, dofProperties)\n{\n\tif (this.dofVals.hasOwnProperty(dofName))\n\t{\n\t\tthis.dofVals[dofName] = {};\n\t\tvar props = (dofProperties) ? dofProperties : {};\n\t\tvar keys = Object.keys(props);\n\t\tfor (var i=0; i<keys.length; i++)\n\t\t{\n\t\t\tthis.dofVals[dofName][keys[i]] = props[keys[i]];\n\t\t}\n\t}\n};\n\n/**\n * Adds the specified properties to the current set of properties for the specified DOF.  If the specified DOF name\n * is not an element of this pose, this call has no effect.\n *\n * @param {string} dofName - name of the DOF entry to add to\n * @param {Object.<string, string|number|boolean>} dofProperties - properties for the specified DOF\n */\nPropertiesPose.prototype.add = function(dofName, dofProperties)\n{\n\tif (this.dofVals.hasOwnProperty(dofName))\n\t{\n\t\tvar props = (dofProperties) ? dofProperties : {};\n\t\tvar keys = Object.keys(props);\n\t\tfor (var i=0; i<keys.length; i++)\n\t\t{\n\t\t\tthis.dofVals[dofName][keys[i]] = props[keys[i]];\n\t\t}\n\t}\n};\n\n/**\n * Get the properties for the specified DOF.  If the specified DOF is not an\n * element of this pose, null is returned.\n *\n * If propertyName is specified, this call will return the specified element of the DOF's\n * property set, or null if no such element exists.\n *\n * @param {string} dofName name of the DOF value to get\n * @param {string} [propertyName] property name to get\n * @return {*} the requested DOF value, or null if not present\n */\nPropertiesPose.prototype.get = function(dofName, propertyName)\n{\n\tif (this.dofVals.hasOwnProperty(dofName))\n\t{\n\t\tvar val;\n\t\tif (propertyName !== undefined)\n\t\t{\n\t\t\tval = this.dofVals[dofName][propertyName];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tval = this.dofVals[dofName];\n\t\t}\n\t\treturn (val !== undefined) ? val : null;\n\t}\n\telse\n\t{\n\t\treturn null;\n\t}\n};\n\n/**\n * @return {Array.<string>} the array of DOF names that this pose stores values for\n */\nPropertiesPose.prototype.getDOFNames = function()\n{\n\treturn Object.keys(this.dofVals);\n};\n\n/**\n * Get a copy of this pose that does not share any reps.\n *\n * @return {PropertiesPose}\n */\nPropertiesPose.prototype.getCopy = function()\n{\n\tvar dofNames = this.getDOFNames();\n\tvar p = new PropertiesPose(dofNames);\n\tfor (var i=0; i<dofNames.length; i++)\n\t{\n\t\tp.add(dofNames[i], this.get(dofNames[i]));\n\t}\n\treturn p;\n};\n\nmodule.exports = PropertiesPose;"],"sourceRoot":"/source/"}