{"version":3,"sources":["animation-body/LEDOutput.js"],"names":[],"mappings":"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","file":"animation-body/LEDOutput.js","sourcesContent":["/**\n * @author mattb\n */\n\n\n\"use strict\";\n\n\nvar LEDInterface = require(\"./LEDInterface\");\n\nvar TimerTools = require(\"../ifr-core/TimerTools\");\n\n\n/**\n * Timeline output connecting to the LED service.\n * @param {Clock} clock - the timeline clock\n * @param {RobotInfo} robotInfo - robot info object\n * @param {string} bodyServiceURL - base URL for the body service\n * @param {boolean} [startEnabled] - optional, if true, start up with LED output enabled (defaults to true)\n * @param {number} [updateIntervalMillis] - if specified and non-zero, auto-update at the given interval\n * @param {string} [sessionToken] - optional session security token\n * @constructor\n */\nvar LEDOutput = function(clock, robotInfo, bodyServiceURL, startEnabled, updateIntervalMillis, sessionToken)\n{\n\t/** @type {Clock} */\n\tthis.clock = clock;\n\t/** @type {RobotInfo} */\n\tthis.robotInfo = robotInfo;\n\t/** @type {Time} */\n\tthis.outputTime = null;\n\t/** @type {Pose} */\n\tthis.outputPose = null;\n\n\t/** @type {number} */\n\tthis.reactionTime = 1/50;\n\t/** @type {number} */\n\tthis.velocityCalcDelta = 1/50;\n\t/** @type {number} */\n\tthis.rateLimit = 50;\n\n\t/** @type {LEDInterface} */\n\tthis.ledInterface = new LEDInterface(bodyServiceURL, sessionToken);\n\t/** @type {string[]} */\n\tthis.dofNames = this.robotInfo.getDOFSet(\"LED\").getDOFs();\n\n\t/** @type {boolean} */\n\tthis.enabled = startEnabled !== undefined ? startEnabled : true;\n\n\tthis.updateHandle = null;\n\tif (updateIntervalMillis)\n\t{\n\t\tvar self = this;\n\t\tthis.updateHandle = TimerTools.setInterval(function()\n\t\t{\n\t\t\tself.update();\n\t\t}, updateIntervalMillis);\n\t}\n};\n\n/**\n * @return {boolean}\n */\nLEDOutput.prototype.isConnected = function()\n{\n\treturn this.ledInterface.isConnected();\n};\n\n/**\n * Sets whether or not LED output is enabled.\n * @param {boolean} enabled\n */\nLEDOutput.prototype.setEnabled = function(enabled)\n{\n\tthis.enabled = enabled;\n};\n\n/**\n * @param {Time} time\n * @param {Pose} pose\n */\nLEDOutput.prototype.handleOutput = function(time, pose)\n{\n\tthis.outputTime = time;\n\tthis.outputPose = pose;\n};\n\nLEDOutput.prototype.update = function()\n{\n\tvar currentTime = this.clock.currentTime();\n\n\tvar targets = this.computeTargetsForTime(currentTime.add(this.reactionTime));\n\n\tif (targets !== null && this.enabled && this.ledInterface.isConnected())\n\t{\n\t\tvar rgbValue = [];\n\t\tfor (var i=0; i<this.dofNames.length; i++)\n\t\t{\n\t\t\trgbValue.push(targets[i].position);\n\t\t}\n\n\t\tthis.ledInterface.setCommand(rgbValue, this.rateLimit);\n\t\tthis.ledInterface.sendCommand();\n\t}\n};\n\n/**\n * @param {Time} targetTime\n * @return {Object[]}\n */\nLEDOutput.prototype.computeTargetsForTime = function(targetTime) // eslint-disable-line no-unused-vars\n{\n\tif (this.outputPose !== null)\n\t{\n\t\tvar targetPose = this.outputPose;\n\n\t\tvar targets = [];\n\t\tfor (var i=0; i<this.dofNames.length; i++)\n\t\t{\n\t\t\tvar targetValue = targetPose.get(this.dofNames[i], 0);\n\t\t\tvar velocity = targetPose.get(this.dofNames[i], 1);\n\n\t\t\ttargets.push({position: targetValue, velocity: velocity});\n\t\t}\n\n\t\treturn targets;\n\t}\n\telse\n\t{\n\t\treturn null;\n\t}\n};\n\n/**\n * Permanently disables this output and stops all associated computation.\n */\nLEDOutput.prototype.dispose = function()\n{\n\tthis.ledInterface.close();\n\tif (this.updateHandle !== null)\n\t{\n\t\tTimerTools.clearInterval(this.updateHandle);\n\t\tthis.updateHandle = null;\n\t}\n\tthis.robotInfo = null;\n\tthis.outputPose = null;\n};\n\n\nmodule.exports = LEDOutput;\n"],"sourceRoot":"/source/"}