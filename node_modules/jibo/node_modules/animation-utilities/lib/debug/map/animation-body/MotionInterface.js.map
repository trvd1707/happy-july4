{"version":3,"sources":["animation-body/MotionInterface.js"],"names":[],"mappings":"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","file":"animation-body/MotionInterface.js","sourcesContent":["/**\n * @author mattb\n */\n\n\n\"use strict\";\n\n\nvar BodyData = require(\"./BodyData\");\nvar Clock = require(\"../ifr-core/Clock\");\n\n\n/**\n * @param {string} bodyServiceURL - base URL for the body service\n * @param {string} [sessionToken] - optional session security token\n * @param {string} [baseDOFName] - base DOF name (optional)\n * @param {string} [middleDOFName] - middle DOF name (optional)\n * @param {string} [neckDOFName] - neck DOF name (optional)\n * @constructor\n */\nvar MotionInterface = function(bodyServiceURL, sessionToken, baseDOFName, middleDOFName, neckDOFName)\n{\n\tvar baseDOF = baseDOFName || \"bottomSection_r\";\n\tvar middleDOF = middleDOFName || \"middleSection_r\";\n\tvar neckDOF = neckDOFName || \"topSection_r\";\n\n\t/** @type {Object.<string, string>} */\n\tthis.dofToAxis = {};\n\tthis.dofToAxis[baseDOF] = \"pelvis\";\n\tthis.dofToAxis[middleDOF] = \"torso\";\n\tthis.dofToAxis[neckDOF] = \"neck\";\n\n\t/** @type string[] */\n\tthis.dofNames = [baseDOF, middleDOF, neckDOF];\n\n\t/** @type {number} */\n\tthis.stateMessageCount = 0;\n\t/** @type {AxisState} */\n\tthis.latestAxisState = null;\n\n\t/** @type {AxisCommand} */\n\tthis.command = new BodyData.AxisCommand();\n\tthis.command.pelvis = new BodyData.SingleAxisCommand();\n\tthis.command.torso = new BodyData.SingleAxisCommand();\n\tthis.command.neck = new BodyData.SingleAxisCommand();\n\n\tvar self = this;\n\n\tif (sessionToken)\n\t{\n\t\tthis.stateSocket = new WebSocket(bodyServiceURL+\"/axis_state\", sessionToken);\n\t}\n\telse\n\t{\n\t\tthis.stateSocket = new WebSocket(bodyServiceURL+\"/axis_state\");\n\t}\n\tthis.stateSocket.onmessage = function(event)\n\t{\n\t\tvar data = JSON.parse(event.data);\n\t\tself.latestAxisState = new BodyData.AxisState().setFromJson(data);\n\t\tself.stateMessageCount++;\n\t};\n\n\tif (sessionToken)\n\t{\n\t\tthis.commandSocket = new WebSocket(bodyServiceURL+\"/axis_command\", sessionToken);\n\t}\n\telse\n\t{\n\t\tthis.commandSocket = new WebSocket(bodyServiceURL+\"/axis_command\");\n\t}\n};\n\n/**\n * @return {string[]}\n */\nMotionInterface.prototype.getMotionDOFNames = function()\n{\n\treturn this.dofNames;\n};\n\n/**\n * @param {string} dofName\n * @return {SingleAxisState}\n */\nMotionInterface.prototype.getState = function(dofName)\n{\n\tif (!this.dofToAxis.hasOwnProperty(dofName))\n\t{\n\t\tthrow new Error(\"unknown motion DOF name: \"+dofName);\n\t}\n\n\tif (this.latestAxisState !== null)\n\t{\n\t\treturn this.latestAxisState[this.dofToAxis[dofName]];\n\t}\n\telse\n\t{\n\t\treturn null;\n\t}\n};\n\n/**\n * @return {number}\n */\nMotionInterface.prototype.getStateMessageCount = function()\n{\n\treturn this.stateMessageCount;\n};\n\n/**\n * @param {string} dofName - DOF name\n * @param {AxisCommandMode} commandMode - command mode for the axis\n * @param {number|number[]} commandValue - command data (as defined by the given mode)\n * @param {number} [velocityLimit] - optional velocity limit in radians/second\n * @param {number} [accelerationLimit] - optional acceleration limit in radians/second^2\n * @param {number} [currentLimit] - optional current limit in amperes\n * @return {boolean} true if the command was set successfully\n */\nMotionInterface.prototype.setCommand = function(dofName, commandMode, commandValue, velocityLimit, accelerationLimit, currentLimit)\n{\n\tif (!this.dofToAxis.hasOwnProperty(dofName))\n\t{\n\t\tthrow new Error(\"unknown motion DOF name: \"+dofName);\n\t}\n\n\tvar state = this.getState(dofName);\n\tif (state !== null)\n\t{\n\t\t/** @type {SingleAxisCommand} */\n\t\tvar command = this.command[this.dofToAxis[dofName]];\n\n\t\tcommand.mode = commandMode;\n\t\tcommand.value = (commandValue instanceof Array) ? commandValue : [commandValue];\n\t\tcommand.vel_limit = (velocityLimit !== undefined && velocityLimit !== null) ? velocityLimit : state.vel_limit;\n\t\tcommand.acc_limit = (accelerationLimit !== undefined && accelerationLimit !== null) ? accelerationLimit : state.acc_limit;\n\t\tcommand.cur_limit = (currentLimit !== undefined && currentLimit !== null) ? currentLimit : state.cur_limit;\n\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n};\n\n/**\n * @return {boolean} true if the command was sent successfully\n */\nMotionInterface.prototype.sendCommand = function()\n{\n\tif (this.commandSocket.readyState === WebSocket.OPEN)\n\t{\n\t\tthis.command.setTimestamp(Clock.currentTime());\n\t\tvar cmd = JSON.stringify(this.command);\n\t\tthis.commandSocket.send(cmd);\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n};\n\n/**\n * @return {boolean} true if the motion interface is connected\n */\nMotionInterface.prototype.isConnected = function()\n{\n\treturn this.latestAxisState !== null && this.commandSocket.readyState === WebSocket.OPEN;\n};\n\nMotionInterface.prototype.close = function()\n{\n\tthis.stateSocket.close();\n\tthis.commandSocket.close();\n};\n\n\nmodule.exports = MotionInterface;\n"],"sourceRoot":"/source/"}