{"version":3,"sources":["animation-body/BodyOutput.js"],"names":[],"mappings":";;;;AAKA;;AAGA,IAAI,kBAAkB,QAAQ,mBAAR,CAAlB;;AAEJ,IAAI,aAAa,QAAQ,wBAAR,CAAb;;;;;;;;;;;;AAaJ,IAAI,aAAa,SAAb,UAAa,CAAS,KAAT,EAAgB,SAAhB,EAA2B,cAA3B,EAA2C,YAA3C,EAAyD,oBAAzD,EAA+E,YAA/E,EACjB;;AAEC,MAAK,KAAL,GAAa,KAAb;;AAFD,KAIC,CAAK,SAAL,GAAiB,SAAjB;;AAJD,KAMC,CAAK,UAAL,GAAkB,IAAlB;;AAND,KAQC,CAAK,UAAL,GAAkB,IAAlB;;;AARD,KAWC,CAAK,YAAL,GAAoB,IAAE,EAAF;;AAXrB,KAaC,CAAK,iBAAL,GAAyB,IAAE,EAAF;;;AAb1B,KAgBC,CAAK,eAAL,GAAuB,IAAI,eAAJ,CAAoB,cAApB,EAAoC,YAApC,CAAvB;;AAhBD,KAkBC,CAAK,QAAL,GAAgB,KAAK,eAAL,CAAqB,iBAArB,EAAhB;;;AAlBD,KAqBC,CAAK,YAAL,GAAoB,EAApB,CArBD;AAsBC,MAAK,IAAI,IAAE,CAAF,EAAK,IAAE,KAAK,QAAL,CAAc,MAAd,EAAsB,GAAtC,EACA;AACC,OAAK,YAAL,CAAkB,IAAlB,CAAuB,iBAAiB,SAAjB,GAA6B,YAA7B,GAA4C,KAA5C,CAAvB,CADD;EADA;;;AAtBD,KA4BC,CAAK,aAAL,GAAqB,EAArB,CA5BD;;AA8BC,MAAK,YAAL,GAAoB,IAApB,CA9BD;AA+BC,KAAI,oBAAJ,EACA;AACC,MAAI,OAAO,IAAP,CADL;AAEC,OAAK,YAAL,GAAoB,WAAW,WAAX,CAAuB,YAC3C;AACC,QAAK,MAAL,GADD;GAD2C,EAGxC,oBAHiB,CAApB,CAFD;EADA;;AASA,MAAK,aAAL,GAAqB,IAArB,CAxCD;CADiB;;;;;AA+CjB,WAAW,SAAX,CAAqB,iBAArB,GAAyC,YACzC;AACC,QAAO,KAAK,QAAL,CADR;CADyC;;;;;AAQzC,WAAW,SAAX,CAAqB,WAArB,GAAmC,YACnC;AACC,QAAO,KAAK,eAAL,CAAqB,WAArB,EAAP,CADD;CADmC;;;;;;;;AAWnC,WAAW,SAAX,CAAqB,UAArB,GAAkC,UAAS,OAAT,EAClC;AACC,MAAK,IAAI,IAAE,CAAF,EAAK,IAAE,KAAK,YAAL,CAAkB,MAAlB,EAA0B,GAA1C,EACA;AACC,OAAK,YAAL,CAAkB,CAAlB,IAAuB,OAAC,YAAmB,KAAnB,GAA4B,QAAQ,CAAR,CAA7B,GAA0C,OAA1C,CADxB;EADA;CAFiC;;;;;;AAYlC,WAAW,SAAX,CAAqB,eAArB,GAAuC,UAAS,YAAT,EACvC;AACC,MAAK,aAAL,CAAmB,IAAnB,CAAwB,YAAxB,EADD;CADuC;;;;;;AASvC,WAAW,SAAX,CAAqB,YAArB,GAAoC,UAAS,IAAT,EAAe,IAAf,EACpC;AACC,MAAK,UAAL,GAAkB,IAAlB,CADD;AAEC,MAAK,UAAL,GAAkB,IAAlB,CAFD;AAGC,MAAK,qBAAL,CAA2B,IAA3B,EAAiC,IAAjC,EAHD;CADoC;;AAOpC,WAAW,SAAX,CAAqB,MAArB,GAA8B,YAC9B;;CAD8B;;;;;;;AAU9B,WAAW,SAAX,CAAqB,qBAArB,GAA6C,UAAS,UAAT,EAAqB,gBAArB,EAC7C;AACC,KAAI,CAAC,gBAAD,EACJ;AACC,SAAO,KAAK,aAAL,CADR;EADA;;AAKA,KAAI,KAAK,UAAL,KAAoB,IAApB,EACJ;AACC,MAAI,aAAa,KAAK,UAAL,CADlB;;AAGC,MAAI,UAAU,EAAV,CAHL;AAIC,OAAK,IAAI,IAAE,CAAF,EAAK,IAAE,KAAK,QAAL,CAAc,MAAd,EAAsB,GAAtC,EACA;AACC,OAAI,cAAc,WAAW,GAAX,CAAe,KAAK,QAAL,CAAc,CAAd,CAAf,EAAiC,CAAjC,CAAd,CADL;AAEC,OAAI,WAAW,WAAW,GAAX,CAAe,KAAK,QAAL,CAAc,CAAd,CAAf,EAAiC,CAAjC,CAAX,CAFL;AAGC,OAAG,KAAK,GAAL,CAAS,QAAT,IAAqB,IAArB,EAA0B;AAC5B,eAAW,CAAX,CAD4B;IAA7B;;AAIA,WAAQ,IAAR,CAAa,EAAC,UAAU,WAAV,EAAuB,UAAU,QAAV,EAArC,EAPD;GADA;;AAWA,OAAK,aAAL,GAAqB,OAArB,CAfD;AAgBC,SAAO,OAAP,CAhBD;EADA,MAoBA;AACC,OAAK,aAAL,GAAqB,IAArB,CADD;AAEC,SAAO,IAAP,CAFD;EApBA;CAP4C;;;;;AAoC7C,WAAW,SAAX,CAAqB,OAArB,GAA+B,YAC/B;AACC,MAAK,eAAL,CAAqB,KAArB,GADD;AAEC,KAAI,KAAK,YAAL,KAAsB,IAAtB,EACJ;AACC,aAAW,aAAX,CAAyB,KAAK,YAAL,CAAzB,CADD;AAEC,OAAK,YAAL,GAAoB,IAApB,CAFD;EADA;AAKA,MAAK,SAAL,GAAiB,IAAjB,CAPD;AAQC,MAAK,UAAL,GAAkB,IAAlB,CARD;CAD+B;;AAa/B,OAAO,OAAP,GAAiB,UAAjB","file":"animation-body/BodyOutput.js","sourcesContent":["/**\n * @author mattb\n */\n\n\n\"use strict\";\n\n\nvar MotionInterface = require(\"./MotionInterface\");\n\nvar TimerTools = require(\"../ifr-core/TimerTools\");\n\n\n/**\n * Timeline output connecting to the body service.\n * @param {Clock} clock - the timeline clock\n * @param {RobotInfo} robotInfo - robot info object\n * @param {string} bodyServiceURL - base URL for the body service\n * @param {boolean} [startEnabled] - optional, if true, start up with motors enabled (defaults to false)\n * @param {number} [updateIntervalMillis] - if specified and non-zero, auto-update at the given interval\n * @param {string} [sessionToken] - optional session security token\n * @constructor\n */\nvar BodyOutput = function(clock, robotInfo, bodyServiceURL, startEnabled, updateIntervalMillis, sessionToken)\n{\n\t/** @type {Clock} */\n\tthis.clock = clock;\n\t/** @type {RobotInfo} */\n\tthis.robotInfo = robotInfo;\n\t/** @type {Time} */\n\tthis.outputTime = null;\n\t/** @type {Pose} */\n\tthis.outputPose = null;\n\n\t/** @type {number} */\n\tthis.reactionTime = 1/50;\n\t/** @type {number} */\n\tthis.velocityCalcDelta = 1/50;\n\n\t/** @type {MotionInterface} */\n\tthis.motionInterface = new MotionInterface(bodyServiceURL, sessionToken);\n\t/** @type {string[]} */\n\tthis.dofNames = this.motionInterface.getMotionDOFNames();\n\n\t/** @type {boolean[]} */\n\tthis.enabledArray = [];\n\tfor (var i=0; i<this.dofNames.length; i++)\n\t{\n\t\tthis.enabledArray.push(startEnabled !== undefined ? startEnabled : false);\n\t}\n\n\t/** @type {Function[]} */\n\tthis.infoListeners = [];\n\n\tthis.updateHandle = null;\n\tif (updateIntervalMillis)\n\t{\n\t\tvar self = this;\n\t\tthis.updateHandle = TimerTools.setInterval(function()\n\t\t{\n\t\t\tself.update();\n\t\t}, updateIntervalMillis);\n\t}\n\n\tthis.cachedTargets = null;\n};\n\n/**\n * @return {string[]}\n */\nBodyOutput.prototype.getMotionDOFNames = function()\n{\n\treturn this.dofNames;\n};\n\n/**\n * @return {boolean}\n */\nBodyOutput.prototype.isConnected = function()\n{\n\treturn this.motionInterface.isConnected();\n};\n\n/**\n * Sets whether or not motor output is enabled.\n * Can specify a single boolean (for all motion DOFs collectively) or an\n * array of booleans (for each individual motion DOF).\n * @param {boolean|boolean[]} enabled\n */\nBodyOutput.prototype.setEnabled = function(enabled)\n{\n\tfor (var i=0; i<this.enabledArray.length; i++)\n\t{\n\t\tthis.enabledArray[i] = (enabled instanceof Array) ? enabled[i] : enabled;\n\t}\n};\n\n/**\n * Adds an info listener callback.\n * @param {Function} infoListener\n */\nBodyOutput.prototype.addInfoListener = function(infoListener)\n{\n\tthis.infoListeners.push(infoListener);\n};\n\n/**\n * @param {Time} time\n * @param {Pose} pose\n */\nBodyOutput.prototype.handleOutput = function(time, pose)\n{\n\tthis.outputTime = time;\n\tthis.outputPose = pose;\n\tthis.computeTargetsForTime(time, true);\n};\n\nBodyOutput.prototype.update = function()\n{\n\t// override in subclass\n};\n\n/**\n * @param {Time} targetTime\n * @param {boolean} [recomputeTargets]\n * @return {Object[]}\n */\nBodyOutput.prototype.computeTargetsForTime = function(targetTime, recomputeTargets)\n{\n\tif (!recomputeTargets)\n\t{\n\t\treturn this.cachedTargets;\n\t}\n\n\tif (this.outputPose !== null)\n\t{\n\t\tvar targetPose = this.outputPose;\n\n\t\tvar targets = [];\n\t\tfor (var i=0; i<this.dofNames.length; i++)\n\t\t{\n\t\t\tvar targetAngle = targetPose.get(this.dofNames[i], 0);\n\t\t\tvar velocity = targetPose.get(this.dofNames[i], 1);\n\t\t\tif(Math.abs(velocity) < 0.01){\n\t\t\t\tvelocity = 0;\n\t\t\t}\n\n\t\t\ttargets.push({position: targetAngle, velocity: velocity});\n\t\t}\n\n\t\tthis.cachedTargets = targets;\n\t\treturn targets;\n\t}\n\telse\n\t{\n\t\tthis.cachedTargets = null;\n\t\treturn null;\n\t}\n};\n\n/**\n * Permanently disables this output and stops all associated computation.\n */\nBodyOutput.prototype.dispose = function()\n{\n\tthis.motionInterface.close();\n\tif (this.updateHandle !== null)\n\t{\n\t\tTimerTools.clearInterval(this.updateHandle);\n\t\tthis.updateHandle = null;\n\t}\n\tthis.robotInfo = null;\n\tthis.outputPose = null;\n};\n\n\nmodule.exports = BodyOutput;\n"],"sourceRoot":"/source/"}