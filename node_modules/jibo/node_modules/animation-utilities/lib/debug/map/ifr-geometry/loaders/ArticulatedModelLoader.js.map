{"version":3,"sources":["ifr-geometry/loaders/ArticulatedModelLoader.js"],"names":[],"mappings":"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","file":"ifr-geometry/loaders/ArticulatedModelLoader.js","sourcesContent":["/**\n * @author mattb\n * Copyright 2014 IF Robots LLC\n */\n\n\"use strict\";\n\nvar ModelLoader = require(\"./ModelLoader\");\nvar SkeletonLoader = require(\"./SkeletonLoader\");\nvar THREE = require(\"three\");\n\n/**\n * @constructor\n */\nvar ArticulatedModelLoadResult = function()\n{\n\t/** @type {string} */\n\tthis.modelUrl = null;\n\t/** @type {string} */\n\tthis.skeletonUrl = null;\n\t/** @type {!boolean} */\n\tthis.success = false;\n\t/** @type {string} */\n\tthis.message = \"\";\n\n\t/** @type {ModelLoadResult} */\n\tthis.modelResult = null;\n\t/** @type {SkeletonLoadResult} */\n\tthis.skeletonResult = null;\n\n\t/** @type {THREE.Object3D} */\n\tthis.modelRoot = null;\n};\n\n/**\n * @param {ModelLoader} modelLoader\n * @param {SkeletonLoader} skeletonLoader\n * @constructor\n */\nvar ArticulatedModelLoader = function(modelLoader, skeletonLoader)\n{\n\t/** @type {ModelLoader} */\n\tthis.modelLoader = modelLoader || new ModelLoader();\n\t/** @type {SkeletonLoader} */\n\tthis.skeletonLoader = skeletonLoader || new SkeletonLoader();\n\n\t/** @type {ArticulatedModelLoadResult} */\n\tthis._result = null;\n};\n\n/**\n * @return {ArticulatedModelLoadResult}\n */\nArticulatedModelLoader.prototype.getResult = function()\n{\n\treturn this._result;\n};\n\n/**\n * @param {string} modelName\n * @param {!string} modelUrl - must not be null\n * @param {string} skeletonUrl - can be null\n * @param callback\n */\nArticulatedModelLoader.prototype.load = function(modelName, modelUrl, skeletonUrl, callback)\n{\n\tif (skeletonUrl)\n\t{\n\t\tvar self = this;\n\t\tthis.skeletonLoader.load(skeletonUrl, function()\n\t\t{\n\t\t\tvar skeletonResult = self.skeletonLoader.getResult();\n\t\t\tif (skeletonResult.success)\n\t\t\t{\n\t\t\t\tself._loadModel(modelName, modelUrl, skeletonResult, callback);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar result = new ArticulatedModelLoadResult();\n\t\t\t\tresult.modelUrl = modelUrl;\n\t\t\t\tresult.skeletonUrl = skeletonUrl;\n\t\t\t\tresult.skeletonResult = skeletonResult;\n\t\t\t\tresult.success = false;\n\t\t\t\tresult.message = \"skeleton load failed with message: \"+skeletonResult.message;\n\t\t\t\tself._result = result;\n\t\t\t\tcallback();\n\t\t\t}\n\t\t});\n\t}\n\telse\n\t{\n\t\tthis._loadModel(modelName, modelUrl, null, callback);\n\t}\n};\n\n/**\n * @param {string} modelName\n * @param {!string} modelUrl\n * @param {SkeletonLoadResult} skeletonResult\n * @param callback\n * @private\n */\nArticulatedModelLoader.prototype._loadModel = function(modelName, modelUrl, skeletonResult, callback)\n{\n\tvar self = this;\n\tthis.modelLoader.load(modelUrl, function()\n\t{\n\t\tself._result = new ArticulatedModelLoadResult();\n\t\tself._result.modelUrl = modelUrl;\n\t\tself._result.skeletonUrl = skeletonResult ? skeletonResult.url : null;\n\t\tself._result.skeletonResult = skeletonResult;\n\n\t\tvar modelResult = self.modelLoader.getResult();\n\t\tself._result.modelResult = modelResult;\n\t\tif (!modelResult.success)\n\t\t{\n\t\t\tself._result.success = false;\n\t\t\tself._result.message = \"model load failed with message: \"+modelResult.message;\n\t\t\tcallback();\n\t\t\treturn;\n\t\t}\n\n\t\tvar modelRoot = new THREE.Object3D();\n\t\tmodelRoot.name = modelName || \"\";\n\n\t\tvar i;\n\t\tif (!skeletonResult)\n\t\t{\n\t\t\tfor (i=0; i<modelResult.meshes.length; i++)\n\t\t\t{\n\t\t\t\tmodelRoot.add(modelResult.meshes[i].mesh);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar skeletonRoot = skeletonResult.skeletonRoot;\n\t\t\tmodelRoot.add(skeletonRoot);\n\n\t\t\tfor (i=0; i<modelResult.meshes.length; i++)\n\t\t\t{\n\t\t\t\tvar mesh = modelResult.meshes[i];\n\n\t\t\t\tif (mesh.bones)\n\t\t\t\t{\n\t\t\t\t\tfor (var b=0; b<mesh.bones.length; b++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar boneParent = skeletonRoot.getObjectByName(mesh.boneFrameNames[b], true);\n\t\t\t\t\t\tif (boneParent)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tboneParent.add(mesh.bones[b]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tself._result.success = false;\n\t\t\t\t\t\t\tself._result.message = \"unable to find skeleton frame: \"+mesh.boneFrameNames[b]+\" required to attach bone \"+b+\" of mesh: \"+mesh.name;\n\t\t\t\t\t\t\tcallback();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tmesh.mesh.material.skinning = true;\n\t\t\t\t\tmodelRoot.add(mesh.mesh);\n\t\t\t\t}\n\t\t\t\telse if (mesh.skeletonFrameName)\n\t\t\t\t{\n\t\t\t\t\tvar parent = skeletonRoot.getObjectByName(mesh.skeletonFrameName, true);\n\t\t\t\t\tif (parent)\n\t\t\t\t\t{\n\t\t\t\t\t\tparent.add(mesh.mesh);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tself._result.success = false;\n\t\t\t\t\t\tself._result.message = \"unable to find skeleton frame: \"+mesh.skeletonFrameName+\" required to attach mesh: \"+mesh.name;\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tself._result.success = false;\n\t\t\t\t\tself._result.message = \"unable to attach mesh: \"+mesh.name+\" - no skeleton frame or skinning data specified\";\n\t\t\t\t\tcallback();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tself._result.success = true;\n\t\tself._result.modelRoot = modelRoot;\n\t\tcallback();\n\t});\n};\n\nmodule.exports = ArticulatedModelLoader;"],"sourceRoot":"/source/"}