{"version":3,"sources":["ifr-geometry/BasicFrame.js"],"names":[],"mappings":";;;;;AAKA;;AAEA,IAAI,QAAQ,QAAQ,OAAR,CAAR;;;;;;;AAOJ,IAAI,aAAa,SAAb,UAAa,CAAS,IAAT,EAAe,QAAf,EAAyB,WAAzB,EACjB;;AAEC,OAAK,IAAL,GAAY,QAAQ,EAAR;;AAFb,MAIC,CAAK,QAAL,GAAgB,YAAY,IAAI,MAAM,OAAN,EAAhB;;AAJjB,MAMC,CAAK,WAAL,GAAmB,eAAe,IAAI,MAAM,UAAN,EAAnB,CANpB;CADiB;;;;;;AAcjB,WAAW,SAAX,CAAqB,WAArB,GAAmC,UAAS,QAAT,EACnC;AACC,OAAK,IAAL,GAAY,SAAS,IAAT,CADb;AAEC,OAAK,QAAL,CAAc,IAAd,CAAmB,WAAW,eAAX,CAA2B,SAAS,cAAT,CAA9C,EAFD;AAGC,OAAK,WAAL,CAAiB,IAAjB,CAAsB,WAAW,kBAAX,CAA8B,SAAS,YAAT,CAApD,EAHD;;AAKC,SAAO,IAAP,CALD;CADmC;;;;;AAYnC,WAAW,SAAX,CAAqB,SAArB,GAAiC,YACjC;AACC,SAAO,IAAI,MAAM,OAAN,EAAJ,CAAoB,OAApB,CAA4B,KAAK,QAAL,EAAe,KAAK,WAAL,EAAkB,IAAI,MAAM,OAAN,CAAc,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,CAA7D,CAAP,CADD;CADiC;;;;;;AASjC,WAAW,eAAX,GAA6B,UAAS,SAAT,EAC7B;AACC,SAAO,IAAI,MAAM,OAAN,EAAJ,CAAoB,SAApB,CAA8B,SAA9B,CAAP,CADD;CAD6B;;;;;;AAS7B,WAAW,kBAAX,GAAgC,UAAS,SAAT,EAChC;AACC,MAAI,OAAO,SAAP,CADL;AAEC,MAAI,IAAI,IAAI,MAAM,UAAN,CAAiB,KAAK,CAAL,CAArB,EAA8B,KAAK,CAAL,CAA9B,EAAuC,KAAK,CAAL,CAAvC,EAAgD,KAAK,CAAL,CAAhD,CAAJ;AAFL,GAGC,CAAE,OAAF;AAHD,SAIQ,CAAP,CAJD;CADgC;;AAQhC,OAAO,OAAP,GAAiB,UAAjB","file":"ifr-geometry/BasicFrame.js","sourcesContent":["/**\n * @author mattb\n * Copyright 2014 IF Robots LLC\n */\n\n\"use strict\";\n\nvar THREE = require(\"three\");\n/**\n * @param {string} name\n * @param {THREE.Vector3} position\n * @param {THREE.Quaternion} orientation\n * @constructor\n */\nvar BasicFrame = function(name, position, orientation)\n{\n\t/** @type {string} */\n\tthis.name = name || \"\";\n\t/** @type {THREE.Vector3} */\n\tthis.position = position || new THREE.Vector3();\n\t/** @type {THREE.Quaternion} */\n\tthis.orientation = orientation || new THREE.Quaternion();\n};\n\n/**\n * @param {object} jsonData\n * @return {BasicFrame}\n */\nBasicFrame.prototype.setFromJson = function(jsonData)\n{\n\tthis.name = jsonData.name;\n\tthis.position.copy(BasicFrame.vector3FromJson(jsonData.xyzTranslation));\n\tthis.orientation.copy(BasicFrame.quaternionFromJson(jsonData.wxyzRotation));\n\n\treturn this;\n};\n\n/**\n * @return {THREE.Matrix4}\n */\nBasicFrame.prototype.toMatrix4 = function()\n{\n\treturn new THREE.Matrix4().compose(this.position, this.orientation, new THREE.Vector3(1, 1, 1));\n};\n\n/**\n * @param {Array} jsonArray\n * @return {THREE.Vector3}\n */\nBasicFrame.vector3FromJson = function(jsonArray)\n{\n\treturn new THREE.Vector3().fromArray(jsonArray);\n};\n\n/**\n * @param {Array} jsonArray\n * @return {THREE.Quaternion}\n */\nBasicFrame.quaternionFromJson = function(jsonArray)\n{\n\tvar wxyz = jsonArray;\n\tvar q = new THREE.Quaternion(wxyz[1], wxyz[2], wxyz[3], wxyz[0]); // x, y, z, w\n\tq.inverse(); // switching from \"world\" frame convention (Apache/JSON) to \"body\" frame convention (THREE.js)\n\treturn q;\n};\n\nmodule.exports = BasicFrame;"],"sourceRoot":"/source/"}