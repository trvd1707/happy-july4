{"version":3,"sources":["ifr-geometry/loaders/ModelLoader.js"],"names":[],"mappings":"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","file":"ifr-geometry/loaders/ModelLoader.js","sourcesContent":["/**\n * @author mattb\n * Copyright 2014 IF Robots LLC\n */\n\n\"use strict\";\n\nvar BasicMesh = require(\"../BasicMesh\");\nvar BasicFrame = require(\"../BasicFrame\");\nvar FileTools = require(\"../../ifr-core/FileTools\");\nvar THREE = require(\"three\");\n\n/**\n * @constructor\n */\nvar ModelLoadResult = function()\n{\n\t/** @type {string} */\n\tthis.url = null;\n\t/** @type {!boolean} */\n\tthis.success = false;\n\t/** @type {string} */\n\tthis.message = \"\";\n\n\t/** @type {Array.<BasicMesh>} */\n\tthis.meshes = null;\n};\n\n/**\n * @param {THREE.MeshPhongMaterial} defaultMaterial\n * @constructor\n */\nvar ModelLoader = function(defaultMaterial)\n{\n\t/** @type {THREE.MeshPhongMaterial} */\n\tthis.defaultMaterial = defaultMaterial;\n\tif (!this.defaultMaterial)\n\t{\n\t\tthis.defaultMaterial = new THREE.MeshPhongMaterial();\n\t}\n\n\t/** @type {string} */\n\tthis.baseTextureURL = null;\n\n\t/** @type {ModelLoadResult} */\n\tthis._result = null;\n};\n\n/**\n * @return {ModelLoadResult}\n */\nModelLoader.prototype.getResult = function()\n{\n\treturn this._result;\n};\n\n/**\n * @param {string} url\n * @param callback\n */\nModelLoader.prototype.load = function(url, callback)\n{\n\tvar self = this;\n\tFileTools.loadJSON(url, function(error, data)\n\t{\n\t\tif (error === null)\n\t\t{\n\t\t\tself.parseData(data, url);\n\t\t\tif (callback)\n\t\t\t{\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar result = new ModelLoadResult();\n\t\t\tresult.url = url;\n\t\t\tresult.success = false;\n\t\t\tresult.message = error;\n\t\t\tself._result = result;\n\t\t\tif (callback)\n\t\t\t{\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t});\n};\n\n/**\n * @param {Object} jsonData\n * @param {string} dataUrl\n */\nModelLoader.prototype.parseData = function(jsonData, dataUrl)\n{\n\tthis._result = new ModelLoadResult();\n\tthis._result.url = dataUrl;\n\n\tif (jsonData.header.fileType !== \"Meshes\")\n\t{\n\t\tthis._result.success = false;\n\t\tthis._result.message = \"don't know how to handle file type: \"+jsonData.header.fileType;\n\t\treturn;\n\t}\n\n\tvar parentDir = dataUrl.substring(0, dataUrl.lastIndexOf('/')+1);\n\n\tthis._result.meshes = [];\n\tfor (var meshIndex=0; meshIndex<jsonData.content.meshes.length; meshIndex++)\n\t{\n\t\tvar meshData = jsonData.content.meshes[meshIndex];\n\n\t\tvar mesh = new BasicMesh();\n\t\tmesh.name = meshData.name;\n\t\tmesh.skeletonFrameName = meshData.skeletonFrameName;\n\n\t\tvar geom = new THREE.BufferGeometry();\n\n\t\tvar positionData = new Float32Array(meshData.position);\n\t\tgeom.addAttribute(\"position\", new THREE.BufferAttribute(positionData, 3));\n\n\t\tif (meshData.normal)\n\t\t{\n\t\t\tvar normalData = new Float32Array(meshData.normal);\n\t\t\tgeom.addAttribute(\"normal\", new THREE.BufferAttribute(normalData, 3));\n\t\t}\n\n\t\tif (meshData.textureCoordinates)\n\t\t{\n\t\t\tvar textureData = new Float32Array(meshData.textureCoordinates);\n\t\t\tgeom.addAttribute(\"uv\", new THREE.BufferAttribute(textureData, 2));\n\t\t}\n\n\t\tif (meshData.triangles)\n\t\t{\n\t\t\tvar faceData = new Uint32Array(meshData.triangles);\n\t\t\tgeom.addAttribute(\"index\", new THREE.BufferAttribute(faceData, 3));\n\t\t}\n\n\t\tif (meshData.color)\n\t\t{\n\t\t\tvar colorData = new Float32Array(meshData.color.length / 4 * 3);\n\t\t\tfor (var i = 0; i < meshData.color.length / 4; i++)\n\t\t\t{\n\t\t\t\tcolorData[i * 3] = meshData.color[i * 4];\n\t\t\t\tcolorData[i * 3 + 1] = meshData.color[i * 4 + 1];\n\t\t\t\tcolorData[i * 3 + 2] = meshData.color[i * 4 + 2];\n\t\t\t}\n\t\t\tgeom.addAttribute(\"color\", new THREE.BufferAttribute(colorData, 3));\n\t\t}\n\n\t\t/** @type {THREE.MeshPhongMaterial} */\n\t\tvar meshMaterial = this.defaultMaterial.clone();\n\t\tmeshMaterial.vertexColors = meshData.color ? THREE.VertexColors : THREE.NoColors;\n\n\t\tif (meshData.material)\n\t\t{\n\t\t\tvar mat = meshData.material;\n\t\t\tif (mat.ambient)\n\t\t\t{\n\t\t\t\tmeshMaterial.ambient = new THREE.Color(mat.ambient[0], mat.ambient[1], mat.ambient[2]);\n\t\t\t}\n\t\t\tif (mat.diffuse)\n\t\t\t{\n\t\t\t\tmeshMaterial.color = new THREE.Color(mat.diffuse[0], mat.diffuse[1], mat.diffuse[2]);\n\t\t\t}\n\t\t\tif (mat.specular)\n\t\t\t{\n\t\t\t\tmeshMaterial.specular = new THREE.Color(mat.specular[0], mat.specular[1], mat.specular[2]);\n\t\t\t}\n\t\t\tif (mat.emissive)\n\t\t\t{\n\t\t\t\tmeshMaterial.emissive = new THREE.Color(mat.emissive[0], mat.emissive[1], mat.emissive[2]);\n\t\t\t}\n\t\t\tif (mat.shininess)\n\t\t\t{\n\t\t\t\tmeshMaterial.shininess = mat.shininess;\n\t\t\t}\n\t\t\tif (mat.texture)\n\t\t\t{\n\t\t\t\tvar textureURL = this.baseTextureURL ? this.baseTextureURL+mat.texture : parentDir+mat.texture;\n\t\t\t\tvar texture = THREE.ImageUtils.loadTexture(textureURL);\n\t\t\t\ttexture.minFilter = THREE.LinearFilter;\n\t\t\t\tmeshMaterial.map = texture;\n\t\t\t}\n\t\t}\n\n\t\tif (!meshData.skin)\n\t\t{\n\t\t\tmesh.mesh = new THREE.Mesh(geom, meshMaterial);\n\t\t\tmesh.mesh.name = meshData.name;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmesh.mesh = new THREE.SkinnedMesh(geom, meshMaterial);\n\t\t\tmesh.mesh.name = meshData.name;\n\n\t\t\tvar skinData = meshData.skin;\n\t\t\tmesh.boneFrameNames = skinData.skeletonTotalInfluences;\n\t\t\tvar numBones = mesh.boneFrameNames.length;\n\n\t\t\tvar bindFrame = new BasicFrame().setFromJson(skinData.skinBindFrame);\n\t\t\tvar bindMatrix = bindFrame.toMatrix4();\n\n\t\t\tmesh.bones = [];\n\t\t\tvar boneInverses = [];\n\t\t\tfor (var b=0; b<numBones; b++)\n\t\t\t{\n\t\t\t\tvar boneFrame = new BasicFrame().setFromJson(skinData.skinBindInverses[b]);\n\t\t\t\tboneInverses.push(boneFrame.toMatrix4());\n\t\t\t\tvar bone = new THREE.Bone(mesh.mesh);\n\t\t\t\tmesh.bones.push(bone);\n\t\t\t}\n\n\t\t\tvar skeleton = new THREE.Skeleton(mesh.bones, boneInverses, false);\n\n\t\t\tmesh.mesh.bindMode = \"detached\";\n\t\t\tmesh.mesh.bind(skeleton, bindMatrix);\n\n\t\t\tvar numVertices = positionData.length / 3;\n\t\t\tvar skinWeights = new Float32Array(skinData.skeletonWeightsByVertex);\n\t\t\tvar skinIndices = new Float32Array(skinData.skeletonInfluencesByVertex);\n\n\t\t\tif (skinWeights.length !== numVertices*4)\n\t\t\t{\n\t\t\t\tthis._result.success = false;\n\t\t\t\tthis._result.message = \"expected \"+numVertices*4+\" skeleton weights for mesh \"+mesh.name+\", but got: \"+skinWeights.length;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (skinIndices.length !== numVertices*4)\n\t\t\t{\n\t\t\t\tthis._result.success = false;\n\t\t\t\tthis._result.message = \"expected \"+numVertices*4+\" skeleton influences for mesh \"+mesh.name+\", but got: \"+skinIndices.length;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tgeom.addAttribute(\"skinWeight\", new THREE.BufferAttribute(skinWeights, 4));\n\t\t\tgeom.addAttribute(\"skinIndex\", new THREE.BufferAttribute(skinIndices, 4));\n\t\t}\n\n\t\tthis._result.meshes.push(mesh);\n\t}\n\n\tthis._result.success = true;\n};\n\nmodule.exports = ModelLoader;"],"sourceRoot":"/source/"}