{"version":3,"sources":["ifr-visualizer/MouseTargetPositioner.js"],"names":[],"mappings":"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","file":"ifr-visualizer/MouseTargetPositioner.js","sourcesContent":["/**\n * @author jg\n * Copyright 2015 IF Robots LLC\n */\n\n\"use strict\";\n\nvar THREE = require(\"three\");\nvar MouseCoordinateWrangler = require(\"./MouseCoordinateWrangler\");\nvar ViewportTargetPositioner = require(\"./ViewportTargetPositioner\");\nvar slog = require(\"../ifr-core/SLog\");\n\nvar channel = \"UI_TARGET\";\n\n/**\n * @callback MouseEventSelectionFilter\n * @param {MouseEvent}\n * @return {boolean}\n */\n\n/**\n *\n * @param {Element} element - the gl element\n * @param {THREE.PerspectiveCamera} camera - camera that is projecting this scene\n * @param {THREE.Vector3} defaultInitialPosition - initial position, (0,0,0) will be used if omitted\n * @param {THREE.Vector3} pointOnGroundPlane - any point on the ground plane, (0,0,0) will be used if omitted\n * @param {THREE.Vector3} groundPlaneNormal - normal of the ground plane, (0,1,0) will be used if omitted\n * @param {string[]} [initialTargetNames] - names of initial target positioners.  defaults to [\"default\"].  pass [] to start with no positioners.\n * @constructor\n */\nvar MouseTargetPositioner = function(element, camera, defaultInitialPosition, pointOnGroundPlane, groundPlaneNormal, initialTargetNames){\n\n\tif(defaultInitialPosition == null){ //null or undefined (eqnull)\n\t\tdefaultInitialPosition = new THREE.Vector3(0,0,0);\n\t}\n\tif(pointOnGroundPlane == null){ //null or undefined (eqnull)\n\t\tpointOnGroundPlane = new THREE.Vector3(0,0,0);\n\t}\n\tif(groundPlaneNormal == null){ //null or undefined (eqnull)\n\t\tgroundPlaneNormal = new THREE.Vector3(0,1,0);\n\t}\n\tif(initialTargetNames == null){ //null or undefined (eqnull)\n\t\tinitialTargetNames = [\"default\"];\n\t}\n\n\t/** positionChangedCallback[] */\n\tvar positionChangedListeners = [];\n\n\t/** @type{Map<string,ViewportTargetPositioner>} */\n\tvar targetPositioners = new Map();\n\n\t/** @type{string} */\n\tvar selectedPositionerName = null;\n\n\tvar capture = true;\n\n\n\t/** @type {MouseEventSelectionFilter} */\n\tvar isForMe = null;\n\t/** @type {MouseEventSelectionFilter} */\n\tvar isForGroundPlane = null;\n\t/** @type {MouseEventSelectionFilter} */\n\tvar isForCameraPlane = null;\n\n\t/** @type {BasicScene} */\n\tvar renderInScene = null;\n\n\t/**\n\t * @param {MouseEvent} event\n\t */\n\tvar processEvent = function(event){\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\t\tvar local = MouseCoordinateWrangler.getLocalCoordinatesNDCCentered(event, element);\n\t\tif(selectedPositionerName != null){\n\t\t\tvar currentVTP = targetPositioners.get(selectedPositionerName);\n\t\t\tif(currentVTP != null){\n\t\t\t\tif(isForGroundPlane(event)) {\n\t\t\t\t\tcurrentVTP.moveToNDCPoint(local.x, local.y, true);\n\t\t\t\t}else if(isForCameraPlane(event)){\n\t\t\t\t\tcurrentVTP.moveToNDCPoint(local.x, local.y, false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * @param {MouseEvent} event\n\t */\n\tvar mouseMoved = function(event){\n\t\tif(isForMe(event)){\n\t\t\tprocessEvent(event);\n\t\t}\n\t};\n\n\tvar acceptOutOfWindowMotions = true;\n\t/**\n\t * @param {MouseEvent} event\n\t */\n\tvar mouseUp = function(event){ // eslint-disable-line no-unused-vars\n\t\tif(acceptOutOfWindowMotions){\n\t\t\tdocument.removeEventListener(\"mousemove\", mouseMoved, capture);\n\t\t\tdocument.removeEventListener(\"mouseup\", mouseUp, capture);\n\t\t}else{\n\t\t\telement.removeEventListener(\"mousemove\", mouseMoved, capture);\n\t\t\telement.removeEventListener(\"mouseup\", mouseUp, capture);\n\t\t\telement.removeEventListener(\"mouseleave\", mouseUp, capture);\n\t\t}\n\t};\n\n\telement.addEventListener( 'mousedown', function(event){\n\t\tif(isForMe(event)) {\n\t\t\tprocessEvent(event);\n\t\t\tif(acceptOutOfWindowMotions){\n\t\t\t\tdocument.addEventListener('mousemove', mouseMoved, capture);\n\t\t\t\tdocument.addEventListener('mouseup', mouseUp, capture);\n\t\t\t}else{\n\t\t\t\telement.addEventListener('mousemove', mouseMoved, capture);\n\t\t\t\telement.addEventListener('mouseup', mouseUp, capture);\n\t\t\t\telement.addEventListener('mouseleave', mouseUp, capture);\n\t\t\t}\n\t\t}\n\t}, capture );\n\n\n\t/**\n\t * Set mouse filters for this positioner.  The \"isForMeFilter\" is first applied, and only\n\t * events that match this filter will be processed at all.  \"isForGroupPlane\" and \"isForCamera\"\n\t * filters will only be run on events that already passed the \"isForMeFilter\".  \"isForGroundPlane\"\n\t * is evaluated first, points will not be used for camera plane if they match for ground plane.\n\t *\n\t * @param {MouseEventSelectionFilter} [isForMeFilter] - specify filter for this positioner (default is NONE of alt, meta, ctrl down)\n\t * @param {MouseEventSelectionFilter} [isForGroundPlaneFilter] - specify filter for ground plane clicks (default is shift down)\n\t * @param {MouseEventSelectionFilter} [isForCameraPlaneFilter] - specify filter for camera plane clicks (default is shift up)\n\t */\n\tthis.setMouseFilters = function(isForMeFilter,\n\t\t\t\t\t\t\t\t\tisForGroundPlaneFilter,\n\t\t\t\t\t\t\t\t\tisForCameraPlaneFilter){\n\t\tif(isForMeFilter!=null){ //null or undefined\n\t\t\tisForMe = isForMeFilter;\n\t\t}else{\n\t\t\tisForMe = function(event){\n\t\t\t\treturn (!event.altKey && !event.metaKey && !event.ctrlKey);\n\t\t\t};\n\t\t}\n\t\tif(isForGroundPlaneFilter!=null){ //null or undefined\n\t\t\tisForGroundPlane = isForGroundPlaneFilter;\n\t\t}else{\n\t\t\tisForGroundPlane = function(event){\n\t\t\t\treturn event.shiftKey;\n\t\t\t};\n\t\t}\n\t\tif(isForCameraPlaneFilter!=null){ //null or undefined\n\t\t\tisForCameraPlane = isForCameraPlaneFilter;\n\t\t}else{\n\t\t\tisForCameraPlane = function(event){\n\t\t\t\treturn !event.shiftKey;\n\t\t\t};\n\t\t}\n\t};\n\n\n\n\t/**\n\t * @param {positionChangedCallback} cb\n\t */\n\tthis.addPositionChangedCallback = function(cb){\n\t\tvar cbIndex = positionChangedListeners.indexOf(cb);\n\t\tif (cbIndex < 0) {\n\t\t\tpositionChangedListeners.push(cb);\n\t\t}\n\t};\n\n\t/**\n\t * @param {positionChangedCallback} cb\n\t */\n\tthis.removePositionChangedCallback = function(cb){\n\t\tvar cbIndex = positionChangedListeners.indexOf(cb);\n\t\tif (cbIndex > -1) {\n\t\t\tpositionChangedListeners.splice(cbIndex, 1);\n\t\t}\n\t};\n\n\t/**\n\t * @param {THREE.Vector3} position\n\t * @param {string} name\n\t */\n\tthis.notifyPositionChangedCallbacks = function(position, name){\n\t\tfor (var i=0; i<positionChangedListeners.length; i++){\n\t\t\tpositionChangedListeners[i](position, name);\n\t\t}\n\t};\n\n\t/**\n\t * @param {string} name\n\t\t * @param {THREE.Vector3} [initialPosition] defaults to value passed to MouseTargetPositioner constructor.\n\t */\n\tthis.addTargetPositioner = function(name, initialPosition){\n\t\tif(!targetPositioners.has(name)) {\n\t\t\tif (initialPosition == null) { //null or undefined (eqnull)\n\t\t\t\tinitialPosition = defaultInitialPosition;\n\t\t\t}\n\t\t\tvar vtp = new ViewportTargetPositioner(name, camera, initialPosition, pointOnGroundPlane, groundPlaneNormal);\n\t\t\tvtp.addPositionChangedCallback(this.notifyPositionChangedCallbacks);\n\t\t\tif(renderInScene!==null){\n\t\t\t\tvtp.installRendererIntoScene(renderInScene);\n\t\t\t}\n\t\t\ttargetPositioners.set(name, vtp);\n\t\t\tif(selectedPositionerName === null){\n\t\t\t\tselectedPositionerName = name;\n\t\t\t\tvtp.setHighlighted(true);\n\t\t\t}else{\n\t\t\t\tvtp.setHighlighted(false);\n\t\t\t}\n\t\t}else{\n\t\t\tslog(channel, \"Not adding MouseTargetPositioner target \"+name+\", already have target with that name\");\n\t\t}\n\t};\n\n\tthis.removeTargetPositioner = function(name){\n\t\tif(targetPositioners.has(name)){\n\t\t\tvar vtp = targetPositioners.get(name);\n\t\t\tif(renderInScene!==null){\n\t\t\t\tvtp.removeRendererFromScene(renderInScene);\n\t\t\t}\n\t\t\tvtp.removePositionChangedCallback(this.notifyPositionChangedCallbacks);\n\t\t\ttargetPositioners.delete(name);\n\t\t\tif(selectedPositionerName === name){\n\t\t\t\tselectedPositionerName = null;\n\t\t\t}\n\t\t}\n\t};\n\n\tthis.getTargetPositionerNames = function(){\n\t\tvar names = [];\n\t\tvar nameIter = targetPositioners.keys();\n\t\tvar nextName;\n\t\twhile(!(nextName = nameIter.next()).done){\n\t\t\tnames.push(nextName.value);\n\t\t}\n\t\treturn names;\n\t};\n\n\t/**\n\t * @param {?string} name - name of target to select, null to deselect all\n\t */\n\tthis.selectTarget = function(name){\n\t\tif(selectedPositionerName != null){\n\t\t\tvar currentlySelected = targetPositioners.get(selectedPositionerName);\n\t\t\tif(currentlySelected != null){\n\t\t\t\tcurrentlySelected.setHighlighted(false);\n\t\t\t}\n\t\t}\n\t\tif(name != null) {\n\t\t\tvar newlySelected = targetPositioners.get(name);\n\t\t\tif (newlySelected != null) {\n\t\t\t\tnewlySelected.setHighlighted(true);\n\t\t\t}\n\t\t}\n\t\tselectedPositionerName = name;\n\t};\n\n\tthis.installRendererIntoScene = function(scene){\n\t\tif(renderInScene !== null){\n\t\t\tthrow new Error(\"Remove MTP renderer from existing scene before installing in another!\");\n\t\t}\n\t\tfor(var vtp of targetPositioners.values()){\n\t\t\tvtp.installRendererIntoScene(scene);\n\t\t}\n\t\trenderInScene = scene;\n\t};\n\n\tthis.removeRendererFromScene = function(scene){\n\t\tfor(var vtp of targetPositioners.values()){\n\t\t\tvtp.removeRendererFromScene(scene);\n\t\t}\n\t\trenderInScene = null;\n\t};\n\n\t//set to default\n\tthis.setMouseFilters();\n\n\tfor(var installName of initialTargetNames){\n\t\tthis.addTargetPositioner(installName);\n\t}\n\n};\n\n\n\n\n\nmodule.exports = MouseTargetPositioner;"],"sourceRoot":"/source/"}