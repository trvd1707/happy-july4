{"version":3,"sources":["ifr-visualizer/GLTextOverlayPool.js"],"names":[],"mappings":"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","file":"ifr-visualizer/GLTextOverlayPool.js","sourcesContent":["/**\n * @author jg\n * Copyright 2016 IF Robots LLC\n */\n\n\"use strict\";\n\nvar TextOverlay = require(\"./TextOverlayPool\");\nvar MouseCoordinateWrangler = require(\"./MouseCoordinateWrangler\");\n\n\n/**\n * @param {BasicScene} renderInScene\n * @constructor\n */\nvar GLTextOverlayPool = function(renderInScene){\n\tthis.textOverlay = new TextOverlay(renderInScene.getContainer());\n\n\t/**\n\t * @type {HTMLElement}\n\t */\n\tthis.container = renderInScene.getContainer();\n\n\t/**\n\t * @type {THREE.Camera}\n\t */\n\tthis.camera = renderInScene.getCamera();\n\n\t/** @type {BasicScene} */\n\tthis.addedToScene = null;\n\n\tthis.postRenderCallbackInstalled = null;\n\n\t//TODO: textOverlay doesn't support adding/removing from container, so we will attach exactly once for now\n\tthis._addToScene(renderInScene);\n};\n\n/**\n * @param {BasicScene} renderInScene\n * @private\n */\nGLTextOverlayPool.prototype._addToScene = function(renderInScene)\n{\n\t//cache the callback so we can remove it.\n\tthis.postRenderCallbackInstalled = this.postRenderCleanup.bind(this);\n\tthis.addedToScene = renderInScene;\n\n\trenderInScene.addPostRenderCallback(this.postRenderCallbackInstalled);\n};\n\n/**\n * Removes this GLTextOverlayPool from the scene it was added to.  Does nothing if\n * it has already been removed or was never added.\n */\nGLTextOverlayPool.prototype.removeFromScene = function()\n{\n\tif(this.addedToScene!=null){\n\t\tthis.addedToScene.removePostRenderCallback(this.postRenderCallbackInstalled);\n\t\tthis.addedToScene = null;\n\t\tthis.postRenderCallbackInstalled = null;\n\t}\n\tthis.textOverlay.postRenderCleanup();\n\tthis.textOverlay.returnAllLeased();\n};\n\n/**\n *\n * @param {string} text\n * @param {number} pixelX\n * @param {number} pixelY\n * @param {?string} [color]\n * @param {?number} [size]\n */\nGLTextOverlayPool.prototype.drawOnce2D = function(text, pixelX, pixelY, color, size){\n\tthis.textOverlay.drawOnce2D(text, pixelX, pixelY, color, size);\n};\n\n/**\n *\n * @param {string} text\n * @param {number} worldX\n * @param {number} worldY\n * @param {number} worldZ\n * @param {?string} [color]\n * @param {?number} [size]\n */\nGLTextOverlayPool.prototype.drawOnce3D = function(text, worldX, worldY, worldZ, color, size){\n\tvar p2d = MouseCoordinateWrangler.projectToScreenPixels(worldX, worldY, worldZ, this.camera, this.container, true);\n\tif(p2d!==null){\n\t\tthis.textOverlay.drawOnce2D(text, p2d.x, p2d.y, color, size);\n\t}\n};\n\n/**\n *\n * @param {string} text\n * @param {number} pixelX\n * @param {number} pixelY\n * @param {?string} [color]\n * @param {?number} [size]\n * @return {TextElement}\n */\nGLTextOverlayPool.prototype.lease2D = function(text, pixelX, pixelY, color, size){\n\treturn this.textOverlay.lease2D(text, pixelX, pixelY, color, size);\n};\n\n/**\n *\n * @param {string} text\n * @param {number} worldX\n * @param {number} worldY\n * @param {number} worldZ\n * @param {?string} [color]\n * @param {?number} [size]\n * @return {TextElement}\n */\nGLTextOverlayPool.prototype.lease3D = function(text, worldX, worldY, worldZ, color, size){\n\tvar p2d = MouseCoordinateWrangler.projectToScreenPixels(worldX, worldY, worldZ, this.camera, this.container, true);\n\tif(p2d!==null) {\n\t\tthis.textOverlay.lease2D(text, p2d.x, p2d.y, color, size);\n\t}else{\n\t\tthis.textOverlay.lease2D(text, -1000, -1000, color, size); //make it offscreen in case it is to be fixed later\n\t}\n};\n\n/**\n * @param {TextElement} element\n */\nGLTextOverlayPool.prototype.returnLeased = function(element){\n\tthis.textOverlay.returnLeased(element);\n};\n\nGLTextOverlayPool.prototype.returnAllLeased = function(){\n\tthis.textOverlay.returnAllLeased();\n};\n\n\n\nGLTextOverlayPool.prototype.postRenderCleanup = function(){\n\tthis.textOverlay.postRenderCleanup();\n};\n\n\nmodule.exports = GLTextOverlayPool;"],"sourceRoot":"/source/"}