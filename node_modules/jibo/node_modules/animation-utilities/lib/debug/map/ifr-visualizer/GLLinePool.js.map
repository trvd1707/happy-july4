{"version":3,"sources":["ifr-visualizer/GLLinePool.js"],"names":[],"mappings":";;;;;AAKA;;AAEA,IAAI,QAAQ,QAAQ,OAAR,CAAR;;;;;;;;;AASJ,IAAI,iBAAiB,SAAjB,cAAiB,CAAS,IAAT,EAAe,IAAf,EAAqB,KAArB,EAA2B;AAC/C,MAAK,IAAL,GAAY,IAAZ,CAD+C;AAE/C,MAAK,IAAL,GAAY,IAAZ,CAF+C;AAG/C,MAAK,KAAL,GAAa,KAAb,CAH+C;CAA3B;;;;;;AAUrB,eAAe,SAAf,CAAyB,WAAzB,GAAuC,UAAS,IAAT,EAAe,IAAf,EAAoB;AAC1D,MAAK,IAAL,GAAY,IAAZ,CAD0D;AAE1D,MAAK,IAAL,GAAY,IAAZ,CAF0D;CAApB;;;;;AAQvC,eAAe,SAAf,CAAyB,QAAzB,GAAoC,UAAS,KAAT,EAAe;AAClD,MAAK,KAAL,GAAa,KAAb,CADkD;CAAf;;;;;;;AASpC,IAAI,aAAa,SAAb,UAAa,CAAS,aAAT,EAAwB,WAAxB,EACjB;AACC,KAAG,gBAAgB,SAAhB,IAA6B,gBAAgB,IAAhB,EAAqB;AACpD,gBAAc,GAAd,CADoD;EAArD;;AADD,KAKC,CAAK,QAAL,GAAgB,WAAhB;;;AALD,KAQC,CAAK,YAAL,GAAoB,CAApB;;;AARD,KAWC,CAAK,SAAL,GAAiB,IAAI,MAAM,OAAN,CAAc,OAAlB,EAA0B,OAA1B,EAAkC,OAAlC,CAAjB;;;AAXD,KAcC,CAAK,WAAL,GAAmB,IAAI,MAAM,KAAN,CAAY,CAAhB,EAAkB,CAAlB,EAAoB,CAApB,CAAnB;;;AAdD,KAiBC,CAAK,YAAL,GAAoB,IAAI,MAAM,iBAAN,CAAwB;;AAE/C,gBAAc,MAAM,YAAN;EAFK,CAApB;;;AAjBD,KAuBC,CAAK,YAAL,GAAoB,IAAI,MAAM,QAAN,EAAxB,CAvBD;AAwBC,MAAI,IAAI,IAAI,CAAJ,EAAO,IAAI,KAAK,QAAL,EAAe,GAAlC,EACA;AACC,OAAK,YAAL,CAAkB,QAAlB,CAA2B,IAA3B,CAAgC,IAAI,MAAM,OAAN,EAAJ,CAAoB,IAApB,CAAyB,KAAK,SAAL,CAAzD,EADD;AAEC,OAAK,YAAL,CAAkB,QAAlB,CAA2B,IAA3B,CAAgC,IAAI,MAAM,OAAN,EAAJ,CAAoB,IAApB,CAAyB,KAAK,SAAL,CAAzD,EAFD;AAGC,OAAK,YAAL,CAAkB,MAAlB,CAAyB,IAAzB,CAA8B,IAAI,MAAM,KAAN,EAAJ,CAAkB,IAAlB,CAAuB,KAAK,WAAL,CAArD,EAHD;AAIC,OAAK,YAAL,CAAkB,MAAlB,CAAyB,IAAzB,CAA8B,IAAI,MAAM,KAAN,EAAJ,CAAkB,IAAlB,CAAuB,KAAK,WAAL,CAArD,EAJD;EADA;;;AAxBD,KAiCC,CAAK,IAAL,GAAY,IAAI,MAAM,IAAN,CAAW,KAAK,YAAL,EAAmB,KAAK,YAAL,EAAmB,MAAM,UAAN,CAAjE;;;;AAjCD,KAqCC,CAAK,IAAL,CAAU,aAAV,GAA0B,KAA1B,CArCD;;AAuCC,MAAK,YAAL,CAAkB,SAAlB,GAA8B,CAA9B,CAvCD;;AAyCC,MAAK,2BAAL,GAAmC,IAAnC,CAzCD;AA0CC,MAAK,uBAAL,GAA+B,IAA/B;;;AA1CD,KA6CC,CAAK,YAAL,GAAoB,IAApB;;;;;AA7CD,KAkDC,CAAK,WAAL,GAAmB,EAAnB,CAlDD;;AAoDC,KAAG,kBAAkB,SAAlB,EACH;AACC,OAAK,UAAL,CAAgB,aAAhB,EADD;EADA;CArDgB;;;;;;AA+DjB,WAAW,SAAX,CAAqB,UAArB,GAAkC,UAAS,aAAT,EAClC;AACC,eAAc,QAAd,GAAyB,GAAzB,CAA6B,KAAK,IAAL,CAA7B;;;AADD,KAIC,CAAK,2BAAL,GAAmC,KAAK,iBAAL,CAAuB,IAAvB,CAA4B,IAA5B,CAAnC,CAJD;AAKC,MAAK,uBAAL,GAA+B,KAAK,gBAAL,CAAsB,IAAtB,CAA2B,IAA3B,CAA/B,CALD;AAMC,MAAK,YAAL,GAAoB,aAApB,CAND;;AAQC,eAAc,qBAAd,CAAoC,KAAK,2BAAL,CAApC,CARD;AASC,eAAc,iBAAd,CAAgC,KAAK,uBAAL,CAAhC,CATD;CADkC;;;;;;AAiBlC,WAAW,SAAX,CAAqB,eAArB,GAAuC,YACvC;AACC,KAAG,KAAK,YAAL,IAAmB,IAAnB,EAAwB;AAC1B,OAAK,YAAL,CAAkB,QAAlB,GAA6B,MAA7B,CAAoC,KAAK,IAAL,CAApC,CAD0B;AAE1B,OAAK,YAAL,CAAkB,wBAAlB,CAA2C,KAAK,2BAAL,CAA3C,CAF0B;AAG1B,OAAK,YAAL,CAAkB,oBAAlB,CAAuC,KAAK,uBAAL,CAAvC,CAH0B;AAI1B,OAAK,YAAL,GAAoB,IAApB,CAJ0B;AAK1B,OAAK,2BAAL,GAAmC,IAAnC,CAL0B;EAA3B;CAFsC;;;;;;;;AAkBvC,WAAW,SAAX,CAAqB,QAArB,GAAgC,UAAS,IAAT,EAAe,IAAf,EAAqB,KAArB,EAChC;AACC,KAAG,KAAK,YAAL,GAAoB,KAAK,QAAL,EACvB;AACC,OAAK,YAAL,CAAkB,QAAlB,CAA2B,KAAK,YAAL,GAAkB,CAAlB,CAA3B,CAAgD,IAAhD,CAAqD,IAArD,EADD;AAEC,OAAK,YAAL,CAAkB,QAAlB,CAA2B,KAAK,YAAL,GAAkB,CAAlB,GAAoB,CAApB,CAA3B,CAAkD,IAAlD,CAAuD,IAAvD,EAFD;AAGC,OAAK,YAAL,CAAkB,kBAAlB,GAAuC,IAAvC,CAHD;;AAKC,MAAG,UAAU,SAAV,EAAoB;AACtB,QAAK,YAAL,CAAkB,MAAlB,CAAyB,KAAK,YAAL,GAAkB,CAAlB,CAAzB,CAA8C,IAA9C,CAAmD,KAAnD,EADsB;AAEtB,QAAK,YAAL,CAAkB,MAAlB,CAAyB,KAAK,YAAL,GAAkB,CAAlB,GAAoB,CAApB,CAAzB,CAAgD,IAAhD,CAAqD,KAArD,EAFsB;AAGtB,QAAK,YAAL,CAAkB,gBAAlB,GAAqC,IAArC,CAHsB;GAAvB;;AAMA,OAAK,YAAL,GAXD;EADA;CAF+B;;;;;;;;AAwBhC,WAAW,SAAX,CAAqB,SAArB,GAAiC,UAAS,IAAT,EAAe,IAAf,EAAqB,KAArB,EACjC;AACC,KAAI,OAAO,IAAI,cAAJ,CAAmB,IAAnB,EAAyB,IAAzB,EAA+B,KAA/B,CAAP,CADL;AAEC,MAAK,WAAL,CAAiB,IAAjB,CAAsB,IAAtB,EAFD;AAGC,QAAO,IAAP,CAHD;CADiC;;;;;AAUjC,WAAW,SAAX,CAAqB,YAArB,GAAoC,UAAS,MAAT,EAAgB;AACnD,KAAI,QAAQ,KAAK,WAAL,CAAiB,OAAjB,CAAyB,MAAzB,CAAR,CAD+C;AAEnD,KAAG,SAAS,CAAT,EAAW;AACb,OAAK,WAAL,CAAiB,MAAjB,CAAwB,KAAxB,EAA+B,CAA/B,EADa;EAAd,MAEK;AACJ,UAAQ,GAAR,CAAY,yDAAuD,MAAvD,GAA8D,GAA9D,CAAZ,CADI;EAFL;CAFmC;;AASpC,WAAW,SAAX,CAAqB,eAArB,GAAuC,YAAU;AAChD,MAAK,WAAL,CAAiB,MAAjB,GAA0B,CAA1B,CADgD;CAAV;;;;;;;AAUvC,WAAW,SAAX,CAAqB,YAArB,GAAoC,UAAS,SAAT,EACpC;AACC,MAAK,YAAL,CAAkB,SAAlB,GAA8B,SAA9B,CADD;AAEC,QAAO,IAAP,CAFD;CADoC;;AAMpC,WAAW,SAAX,CAAqB,gBAArB,GAAwC,YACxC;AACC,MAAI,IAAI,IAAI,CAAJ,EAAO,IAAI,KAAK,WAAL,CAAiB,MAAjB,EAAyB,GAA5C,EAAgD;AAC/C,MAAI,KAAK,KAAK,WAAL,CAAiB,CAAjB,CAAL,CAD2C;AAE/C,OAAK,QAAL,CAAc,GAAG,IAAH,EAAS,GAAG,IAAH,EAAS,GAAG,KAAH,CAAhC,CAF+C;EAAhD;CAFuC;;AAQxC,WAAW,SAAX,CAAqB,iBAArB,GAAyC,YACzC;AACC,KAAG,KAAK,YAAL,GAAoB,CAApB,EACH;AACC,OAAI,IAAI,IAAI,CAAJ,EAAO,IAAI,KAAK,YAAL,EAAmB,GAAtC,EACA;AACC,QAAK,YAAL,CAAkB,QAAlB,CAA2B,IAAE,CAAF,CAA3B,CAAgC,IAAhC,CAAqC,KAAK,SAAL,CAArC,CADD;AAEC,QAAK,YAAL,CAAkB,QAAlB,CAA2B,IAAE,CAAF,GAAI,CAAJ,CAA3B,CAAkC,IAAlC,CAAuC,KAAK,SAAL,CAAvC,CAFD;AAGC,QAAK,YAAL,CAAkB,MAAlB,CAAyB,IAAE,CAAF,CAAzB,CAA8B,IAA9B,CAAmC,KAAK,WAAL,CAAnC,CAHD;AAIC,QAAK,YAAL,CAAkB,MAAlB,CAAyB,IAAE,CAAF,GAAI,CAAJ,CAAzB,CAAgC,IAAhC,CAAqC,KAAK,WAAL,CAArC,CAJD;GADA;AAOA,OAAK,YAAL,CAAkB,kBAAlB,GAAuC,IAAvC,CARD;AASC,OAAK,YAAL,CAAkB,gBAAlB,GAAqC,IAArC,CATD;AAUC,OAAK,YAAL,GAAoB,CAApB,CAVD;EADA;CAFwC;;AAkBzC,OAAO,OAAP,GAAiB,UAAjB","file":"ifr-visualizer/GLLinePool.js","sourcesContent":["/**\n * @author jg\n * Copyright 2015 IF Robots LLC\n */\n\n\"use strict\";\n\nvar THREE = require(\"three\");\n\n/**\n *\n * @param {THREE.Vector3} pos1\n * @param {THREE.Vector3} pos2\n * @param {THREE.Color} color\n * @constructor\n */\nvar GLLinePoolLine = function(pos1, pos2, color){\n\tthis.pos1 = pos1;\n\tthis.pos2 = pos2;\n\tthis.color = color;\n};\n\n/**\n * @param {THREE.Vector3} pos1\n * @param {THREE.Vector3} pos2\n */\nGLLinePoolLine.prototype.setPosition = function(pos1, pos2){\n\tthis.pos1 = pos1;\n\tthis.pos2 = pos2;\n};\n\n/**\n * @param {THREE.Color} color\n */\nGLLinePoolLine.prototype.setColor = function(color){\n\tthis.color = color;\n};\n\n/**\n * @param {BasicScene} renderInScene pool will be added to this scene if provided (optional)\n * @param {number} useMaxLines that can be rendered per update.  default 100 if omitted or null\n * @constructor\n */\nvar GLLinePool = function(renderInScene, useMaxLines)\n{\n\tif(useMaxLines === undefined || useMaxLines === null){\n\t\tuseMaxLines = 100;\n\t}\n\t/**\t@type {number} */\n\tthis.maxLines = useMaxLines;\n\n\t/**\t@type {number} */\n\tthis.numTempLines = 0;\n\n\t/**\t@type {THREE.Vector3} */\n\tthis.unusedVec = new THREE.Vector3(1000000,1000000,1000000);\n\n\t/**\t@type {THREE.Color} */\n\tthis.unusedColor = new THREE.Color(1,1,1);\n\n\t/** @type {THREE.LineBasicMaterial} */\n\tthis.lineMaterial = new THREE.LineBasicMaterial({\n\t//\tcolor: 0xff66ff\n\t\tvertexColors: THREE.VertexColors\n\t});\n\n\t/**\t@type {THREE.Geometry} */\n\tthis.lineGeometry = new THREE.Geometry();\n\tfor(var i = 0; i < this.maxLines; i++)\n\t{\n\t\tthis.lineGeometry.vertices.push(new THREE.Vector3().copy(this.unusedVec));\n\t\tthis.lineGeometry.vertices.push(new THREE.Vector3().copy(this.unusedVec));\n\t\tthis.lineGeometry.colors.push(new THREE.Color().copy(this.unusedColor));\n\t\tthis.lineGeometry.colors.push(new THREE.Color().copy(this.unusedColor));\n\t}\n\n\t/**\t@type {THREE.Line} */\n\tthis.line = new THREE.Line(this.lineGeometry, this.lineMaterial, THREE.LinePieces);\n\n\t//Bounding sphere is computed once only for frustum culling\n\t//could also force recompute by this.lineGeometry.boundingSphere = null;\n\tthis.line.frustumCulled = false;\n\n\tthis.lineMaterial.linewidth = 1;\n\n\tthis.postRenderCallbackInstalled = null;\n\tthis.renderCallbackInstalled = null;\n\n\t/** @type {BasicScene} */\n\tthis.addedToScene = null;\n\n\t/**\n\t * @type {GLLinePoolLine[]}\n\t */\n\tthis.leasedLines = [];\n\n\tif(renderInScene !== undefined)\n\t{\n\t\tthis.addToScene(renderInScene);\n\t}\n};\n\n/**\n *\n * @param {BasicScene} renderInScene\n */\nGLLinePool.prototype.addToScene = function(renderInScene)\n{\n\trenderInScene.getScene().add(this.line);\n\n\t//cache the callback so we can remove it.\n\tthis.postRenderCallbackInstalled = this.postRenderCleanup.bind(this);\n\tthis.renderCallbackInstalled = this.prepareForRender.bind(this);\n\tthis.addedToScene = renderInScene;\n\n\trenderInScene.addPostRenderCallback(this.postRenderCallbackInstalled);\n\trenderInScene.addRenderCallback(this.renderCallbackInstalled);\n};\n\n/**\n * Removes this GLLinePool from the scene it was added to.  Does nothing if\n * it has already been removed or was never added.\n */\nGLLinePool.prototype.removeFromScene = function()\n{\n\tif(this.addedToScene!=null){\n\t\tthis.addedToScene.getScene().remove(this.line);\n\t\tthis.addedToScene.removePostRenderCallback(this.postRenderCallbackInstalled);\n\t\tthis.addedToScene.removeRenderCallback(this.renderCallbackInstalled);\n\t\tthis.addedToScene = null;\n\t\tthis.postRenderCallbackInstalled = null;\n\t}\n};\n\n\n/**\n *\n * @param {THREE.Vector3} pos1\n * @param {THREE.Vector3} pos2\n * @param {THREE.Color} color\n */\nGLLinePool.prototype.drawOnce = function(pos1, pos2, color)\n{\n\tif(this.numTempLines < this.maxLines)\n\t{\n\t\tthis.lineGeometry.vertices[this.numTempLines*2].copy(pos1);\n\t\tthis.lineGeometry.vertices[this.numTempLines*2+1].copy(pos2);\n\t\tthis.lineGeometry.verticesNeedUpdate = true;\n\n\t\tif(color !== undefined){\n\t\t\tthis.lineGeometry.colors[this.numTempLines*2].copy(color);\n\t\t\tthis.lineGeometry.colors[this.numTempLines*2+1].copy(color);\n\t\t\tthis.lineGeometry.colorsNeedUpdate = true;\n\t\t}\n\n\t\tthis.numTempLines++;\n\t}\n};\n\n/**\n * @param {THREE.Vector3} pos1\n * @param {THREE.Vector3} pos2\n * @param {THREE.Color} color\n * @return GLLinePoolLine\n */\nGLLinePool.prototype.leaseLine = function(pos1, pos2, color)\n{\n\tvar line = new GLLinePoolLine(pos1, pos2, color);\n\tthis.leasedLines.push(line);\n\treturn line;\n};\n\n/**\n * @param {GLLinePoolLine} leased\n */\nGLLinePool.prototype.returnLeased = function(leased){\n\tvar index = this.leasedLines.indexOf(leased);\n\tif(index >= 0){\n\t\tthis.leasedLines.splice(index, 1);\n\t}else{\n\t\tconsole.log(\"Error, cannot return line that has not been leased!(\"+leased+\")\");\n\t}\n};\n\nGLLinePool.prototype.returnAllLeased = function(){\n\tthis.leasedLines.length = 0;\n};\n\n\n/**\n *\n * @param {number} lineWidth set line width. default 1.\n * @return {GLLinePool} this for chaining\n */\nGLLinePool.prototype.setLineWidth = function(lineWidth)\n{\n\tthis.lineMaterial.linewidth = lineWidth;\n\treturn this;\n};\n\nGLLinePool.prototype.prepareForRender = function()\n{\n\tfor(var i = 0; i < this.leasedLines.length; i++){\n\t\tvar ll = this.leasedLines[i];\n\t\tthis.drawOnce(ll.pos1, ll.pos2, ll.color);\n\t}\n};\n\nGLLinePool.prototype.postRenderCleanup = function()\n{\n\tif(this.numTempLines > 0)\n\t{\n\t\tfor(var i = 0; i < this.numTempLines; i++)\n\t\t{\n\t\t\tthis.lineGeometry.vertices[i*2].copy(this.unusedVec);\n\t\t\tthis.lineGeometry.vertices[i*2+1].copy(this.unusedVec);\n\t\t\tthis.lineGeometry.colors[i*2].copy(this.unusedColor);\n\t\t\tthis.lineGeometry.colors[i*2+1].copy(this.unusedColor);\n\t\t}\n\t\tthis.lineGeometry.verticesNeedUpdate = true;\n\t\tthis.lineGeometry.colorsNeedUpdate = true;\n\t\tthis.numTempLines = 0;\n\t}\n};\n\n\nmodule.exports = GLLinePool;\n"],"sourceRoot":"/source/"}