{"version":3,"sources":["ifr-visualizer/ViewportTargetPositioner.js"],"names":[],"mappings":"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","file":"ifr-visualizer/ViewportTargetPositioner.js","sourcesContent":["/**\n * @author jg\n * Copyright 2015 IF Robots LLC\n */\n\n\"use strict\";\n\nvar THREE = require(\"three\");\nvar MouseCoordinateWrangler = require(\"./MouseCoordinateWrangler\");\nvar AnchoredTargetVisualizer = require(\"./AnchoredTargetVisualizer\");\nvar slog = require(\"../ifr-core/SLog\");\n\nvar channel = \"UI_TARGET\";\n\n\n/**\n * Callback to receive 3D position updates\n *\n * @callback positionChangedCallback\n * @param {THREE.Vector3} newPosition\n * @param {string} targetName\n */\n\n\n/**\n * @param {string} name - name of this positioner, reported to listeners\n * @param {THREE.PerspectiveCamera} camera - camera that is projecting this scene\n * @param {THREE.Vector3} initialPosition - initial position, (0,0,0) will be used if omitted\n * @param {THREE.Vector3} pointOnGroundPlane - any point on the ground plane, (0,0,0) will be used if omitted\n * @param {THREE.Vector3} groundPlaneNormal - normal of the ground plane, (0,1,0) will be used if omitted\n * @constructor\n */\nvar ViewportTargetPositioner = function(name, camera, initialPosition, pointOnGroundPlane, groundPlaneNormal){\n\n\t/**\n\t * @type {string}\n\t * @private\n\t */\n\tthis._name = name;\n\n\t/**\n\t * @type {THREE.PerspectiveCamera}\n\t * @private\n\t */\n\tthis._camera = camera;\n\n\t/**\n\t * @type {THREE.Vector3}\n\t * @private\n\t */\n\tthis._initialPosition = initialPosition;\n\tif(this._initialPosition == null){ //null or undefined (eqnull)\n\t\tthis._initialPosition = new THREE.Vector3(0,0,0);\n\t}\n\n\t/**\n\t * @type {THREE.Vector3}\n\t * @private\n\t */\n\tthis._pointOnGroundPlane = pointOnGroundPlane;\n\tif(this._pointOnGroundPlane == null){ //null or undefined (eqnull)\n\t\tthis._pointOnGroundPlane = new THREE.Vector3(0,0,0);\n\t}\n\n\t/**\n\t * @type {THREE.Vector3}\n\t * @private\n\t */\n\tthis._groundPlaneNormal = groundPlaneNormal;\n\tif(this._groundPlaneNormal == null){ //null or undefined (eqnull)\n\t\tthis._groundPlaneNormal = new THREE.Vector3(0,1,0);\n\t}\n\n\t/**\n\t * @type {THREE.Vector3}\n\t * @private\n\t */\n\tthis._lastPosition = new THREE.Vector3().copy(this._initialPosition);\n\n\t/**\n\t * @type {positionChangedCallback[]}\n\t * @private\n\t */\n\tthis._positionChangedListeners = [];\n\n\t/**\n\t * @type {AnchoredTargetVisualizer}\n\t * @private\n\t */\n\tthis._anchoredTargetVis = new AnchoredTargetVisualizer(this._groundPlaneNormal);\n\n\tif(this._lastPosition != null){\n\t\tthis._anchoredTargetVis.setPosition(this._lastPosition);\n\t}\n};\n\n/**\n * Move this positioner to the point represented by this NDC screen plane point, by either\n * moving the current target to be above the ground plane point clicked (if groundPlane is true),\n * or by moving the current target to the point clicked on the plane defined by camera's forward vector\n * and the current target (if groundPlane is false).\n *\n * @param {number} viewportNDCPointX - NDC (-1 to 1) X val on screen plane\n * @param {number} viewportNDCPointY - NDC (-1 to 1) Y val on screen plane\n * @param {boolean} groundPlane - treat as ground-plane point if true, treat as vertical plane if false\n */\nViewportTargetPositioner.prototype.moveToNDCPoint = function(viewportNDCPointX, viewportNDCPointY, groundPlane){\n\tvar p;\n\tif(groundPlane) {\n\t\tvar groundPoint = MouseCoordinateWrangler.unprojectScreenToPlane(viewportNDCPointX, viewportNDCPointY, this._camera, this._pointOnGroundPlane, this._groundPlaneNormal);\n\t\tif(groundPoint!=null){ //null or undefined (eqnull)\n\t\t\tp = new THREE.Vector3().copy(this._lastPosition).projectOnVector(this._groundPlaneNormal).add(groundPoint);\n\t\t}else{\n\t\t\tslog(channel, \"ViewportTargetPositioner: ground point not computed, not moving target point\");\n\t\t}\n\t}else{\n\t\t//find where camera is pointing:\n\t\tvar pLocal = new THREE.Vector3( 0, 0, -1 );\n\t\tvar pWorld = pLocal.applyMatrix4(this._camera.matrixWorld);\n\t\tvar cameraDirection = pWorld.sub(this._camera.position);\n\t\tcameraDirection.projectOnPlane(this._groundPlaneNormal);\n\t\tvar pointOnCameraPlane = this._lastPosition;\n\n\t\tif(cameraDirection.lengthSq() < 0.001){\n\t\t\tslog(channel, \"ViewportTargetPositioner: degenerate angle, not moving target point\");\n\t\t\tp = undefined;\n\t\t}else {\n\t\t\tcameraDirection.normalize();\n\t\t\tp = MouseCoordinateWrangler.unprojectScreenToPlane(viewportNDCPointX, viewportNDCPointY, this._camera, pointOnCameraPlane, cameraDirection);\n\t\t}\n\t}\n\tif (p !== undefined) {\n\t\tthis._lastPosition.copy(p);\n\t\tthis._notifyPositionChangedCallbacks(p);\n\t}\n\tthis._anchoredTargetVis.setPosition(this._lastPosition);\n};\n\n\n/**\n * Install a renderer into scene that will draw this mouse target.\n *\n * @param {BasicScene} scene\n */\nViewportTargetPositioner.prototype.installRendererIntoScene = function(scene){\n\tthis._anchoredTargetVis.installRendererIntoScene(scene);\n};\n\n/**\n * Remove the renderer from this scene.\n *\n * @param {BasicScene} scene\n */\nViewportTargetPositioner.prototype.removeRendererFromScene = function(scene){\n\tthis._anchoredTargetVis.removeRendererFromScene(scene);\n};\n\n\n\n/**\n * @param {THREE.Vector3} inplaceVec3\n * @return {THREE.Vector3}\n */\nViewportTargetPositioner.prototype.getPosition = function(inplaceVec3) {\n\tif(inplaceVec3 == null){ //null or undefined (eqnull)\n\t\tinplaceVec3 = new THREE.Vector3();\n\t}\n\tinplaceVec3.copy(this._lastPosition);\n\treturn inplaceVec3;\n};\n\n/**\n * @param {positionChangedCallback} cb\n */\nViewportTargetPositioner.prototype.addPositionChangedCallback = function(cb){\n\tvar cbIndex = this._positionChangedListeners.indexOf(cb);\n\tif(cbIndex < 0) {\n\t\tthis._positionChangedListeners.push(cb);\n\t}\n};\n\n/**\n * @param {positionChangedCallback} cb\n */\nViewportTargetPositioner.prototype.removePositionChangedCallback = function(cb){\n\tvar cbIndex = this._positionChangedListeners.indexOf(cb);\n\tif (cbIndex > -1) {\n\t\tthis._positionChangedListeners.splice(cbIndex, 1);\n\t}\n};\n\n/**\n * @param {THREE.Vector3} position\n * @private\n */\nViewportTargetPositioner.prototype._notifyPositionChangedCallbacks = function(position){\n\tfor (var i=0; i<this._positionChangedListeners.length; i++){\n\t\tthis._positionChangedListeners[i](position, this._name);\n\t}\n};\n\n/**\n * Renders more prominently if highlighted.  Defaults to true.\n * @param {boolean} highlighted\n */\nViewportTargetPositioner.prototype.setHighlighted = function(highlighted){\n\tif(highlighted){\n\t\tthis._anchoredTargetVis.setLineWidth(2);\n\t\tthis._anchoredTargetVis.setBrightness(1);\n\t}else{\n\t\tthis._anchoredTargetVis.setLineWidth(0.5);\n\t\tthis._anchoredTargetVis.setBrightness(0.5);\n\t}\n};\n\n/**\n * @returns {string}\n */\nViewportTargetPositioner.prototype.getName = function(){\n\treturn this._name;\n};\n\nmodule.exports = ViewportTargetPositioner;\n"],"sourceRoot":"/source/"}