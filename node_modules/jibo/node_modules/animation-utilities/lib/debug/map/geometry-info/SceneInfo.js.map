{"version":3,"sources":["geometry-info/SceneInfo.js"],"names":[],"mappings":";;;;AAIA;;AAEA,IAAI,YAAY,QAAQ,uBAAR,CAAZ;;;;;AAKJ,IAAI,YAAY,SAAZ,SAAY,GAChB;;AAEC,MAAK,kBAAL,GAA0B,IAA1B;;AAFD,KAIC,CAAK,eAAL,GAAuB,IAAvB;;AAJD,KAMC,CAAK,gBAAL,GAAwB,IAAxB;;;AAND,KASC,CAAK,OAAL,GAAe,IAAf;;AATD,KAWC,CAAK,aAAL,GAAqB,KAArB;;AAXD,KAaC,CAAK,WAAL,GAAmB,EAAnB,CAbD;CADgB;;;;;;AAqBhB,UAAU,SAAV,CAAoB,IAApB,GAA2B,UAAS,GAAT,EAAc,QAAd,EAC3B;AACC,MAAK,OAAL,GAAe,GAAf,CADD;;AAGC,KAAI,OAAO,IAAP,CAHL;AAIC,WAAU,QAAV,CAAmB,GAAnB,EAAwB,UAAS,KAAT,EAAgB,IAAhB,EACxB;AACC,MAAI,UAAU,IAAV,EACJ;AACC,QAAK,SAAL,CAAe,IAAf,EADD;AAEC,OAAI,QAAJ,EACA;AACC,eADD;IADA;GAHD,MASA;AACC,QAAK,aAAL,GAAqB,KAArB,CADD;AAEC,QAAK,WAAL,GAAmB,KAAnB,CAFD;AAGC,OAAI,QAAJ,EACA;AACC,eADD;IADA;GAZD;EAFuB,CAAxB,CAJD;CAD2B;;;;;AA8B3B,UAAU,SAAV,CAAoB,SAApB,GAAgC,UAAS,QAAT,EAChC;AACC,KAAI,SAAS,MAAT,CAAgB,QAAhB,KAA6B,WAA7B,EACJ;AACC,OAAK,aAAL,GAAqB,KAArB,CADD;AAEC,OAAK,WAAL,GAAmB,yCAAuC,SAAS,MAAT,CAAgB,QAAhB,CAF3D;AAGC,SAHD;EADA;;AAOA,MAAK,kBAAL,GAA0B,SAAS,OAAT,CAAiB,kBAAjB,CAR3B;AASC,MAAK,eAAL,GAAuB,SAAS,OAAT,CAAiB,wBAAjB,CAA0C,CAA1C,CAAvB,CATD;AAUC,MAAK,gBAAL,GAAwB,SAAS,OAAT,CAAiB,wBAAjB,CAA0C,CAA1C,CAAxB,CAVD;;AAYC,MAAK,aAAL,GAAqB,IAArB,CAZD;CADgC;;AAgBhC,OAAO,OAAP,GAAiB,SAAjB","file":"geometry-info/SceneInfo.js","sourcesContent":["/**\n * @author mattb\n */\n\n\"use strict\";\n\nvar FileTools = require(\"../ifr-core/FileTools\");\n\n/**\n * @constructor\n */\nvar SceneInfo = function()\n{\n\t/** @type {string} */\n\tthis.faceScreenMeshName = null;\n\t/** @type {number} */\n\tthis.faceScreenWidth = null;\n\t/** @type {number} */\n\tthis.faceScreenHeight = null;\n\n\t/** @type {string} */\n\tthis.loadURL = null;\n\t/** @type {!boolean} */\n\tthis.loadSucceeded = false;\n\t/** @type {string} */\n\tthis.loadMessage = \"\";\n};\n\n/**\n * @param {string} url\n * @param callback\n */\nSceneInfo.prototype.load = function(url, callback)\n{\n\tthis.loadURL = url;\n\n\tvar self = this;\n\tFileTools.loadJSON(url, function(error, data)\n\t{\n\t\tif (error === null)\n\t\t{\n\t\t\tself.parseData(data);\n\t\t\tif (callback)\n\t\t\t{\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tself.loadSucceeded = false;\n\t\t\tself.loadMessage = error;\n\t\t\tif (callback)\n\t\t\t{\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t});\n};\n\n/**\n * @param {Object} jsonData\n */\nSceneInfo.prototype.parseData = function(jsonData)\n{\n\tif (jsonData.header.fileType !== \"SceneInfo\")\n\t{\n\t\tthis.loadSucceeded = false;\n\t\tthis.loadMessage = \"don't know how to handle file type: \"+jsonData.header.fileType;\n\t\treturn;\n\t}\n\n\tthis.faceScreenMeshName = jsonData.content.faceScreenMeshName;\n\tthis.faceScreenWidth = jsonData.content.faceScreenInternalBounds[0];\n\tthis.faceScreenHeight = jsonData.content.faceScreenInternalBounds[1];\n\n\tthis.loadSucceeded = true;\n};\n\nmodule.exports = SceneInfo;"],"sourceRoot":"/source/"}