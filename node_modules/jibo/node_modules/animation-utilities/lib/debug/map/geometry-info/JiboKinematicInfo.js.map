{"version":3,"sources":["geometry-info/JiboKinematicInfo.js"],"names":[],"mappings":"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","file":"geometry-info/JiboKinematicInfo.js","sourcesContent":["/**\n * @author mattb\n */\n\n\"use strict\";\n\nvar KinematicsLoader = require(\"../ifr-motion/loaders/KinematicsLoader\");\nvar AnimationLoader = require(\"../ifr-motion/loaders/AnimationLoader\");\nvar LimitsLoader = require(\"../ifr-motion/loaders/LimitsLoader\");\nvar SkeletonLoader = require(\"../ifr-geometry/loaders/SkeletonLoader\");\nvar SceneInfo = require(\"./SceneInfo\");\nvar KinematicGroup = require(\"../ifr-motion/dofs/KinematicGroup\");\nvar InterpolatorSet = require(\"../ifr-motion/base/InterpolatorSet\");\nvar SeriesAlignedAxesTargetSelector = require(\"../ifr-motion/base/SeriesAlignedAxesTargetSelector\");\nvar ModelControlGroup = require(\"../ifr-motion/dofs/ModelControlGroup\");\nvar DOFGlobalAlignment = require(\"../ifr-motion/base/DOFGlobalAlignment\");\nvar EyeScreenInfo = require(\"./EyeScreenInfo\");\nvar Pose = require(\"../ifr-motion/base/Pose\");\nvar DOFSet = require(\"./DOFSet\");\nvar slog = require(\"../ifr-core/SLog\");\n\nvar channel = \"MODEL_LOADING\";\n\n/**\n * @param {JiboConfig} jiboConfig\n * @constructor\n */\nvar JiboKinematicInfo = function(jiboConfig)\n{\n\t/** @type {JiboConfig} */\n\tthis._config = jiboConfig;\n\n\t/** @type {ModelControlGroup} */\n\tthis._bodyControlGroup = null;\n\t/** @type {ModelControlGroup} */\n\tthis._eyeControlGroup = null;\n\t/** @type {ModelControlGroup} */\n\tthis._fullControlGroup = null;\n\n\t/** @type {string[]} */\n\tthis._bodyDOFNames = [];\n\t/** @type {string[]} */\n\tthis._eyeDOFNames = [];\n\t/** @type {string[]} */\n\tthis._dofNames = [];\n\n\t/** @type {InterpolatorSet} */\n\tthis._interpolatorSet = new InterpolatorSet();\n\n\t/** @type {KinematicGroup} */\n\tthis._bodyKinematicGroup = null;\n\t/** @type {KinematicGroup} */\n\tthis._fullKinematicGroup = null;\n\n\t/** @type {Motion} */\n\tthis._defaultAnimation = null;\n\t/** @type {Pose} */\n\tthis._defaultPose = null;\n\n\t/** @type {!boolean} */\n\tthis.loadSucceeded = false;\n\t/** @type {string} */\n\tthis.loadMessage = \"\";\n\n\t/** @type {EyeScreenInfo} */\n\tthis._eyeScreenInfo = null;\n\n\t/** @type {Object.<string, DOFSet>} */\n\tthis._dofSets = null;\n\n\t/** @type {DOFGlobalAlignment} */\n\tthis._dofGlobalAlignment = null;\n};\n\nJiboKinematicInfo.prototype.load = function(callback)\n{\n\tvar self = this;\n\n\tvar pending = [];\n\n\tvar callbacksDone = null;\n\n\tvar anyFailed = false;\n\n\tvar bodySkeletonRoot = null;\n\tvar fullSkeletonRoot = null;\n\n\t/** @type {Object.<string, Object>} */\n\tvar dofLimits = null;\n\n\t//register that a callback is going to happen, so we can wait for it, and also note when it happens\n\tvar getCallback = function(identifier, internalCallback){\n\t\tif(pending.indexOf(identifier) >= 0){\n\t\t\tthrow new Error(\"JiboKinematicInfo:Cannot queue 2 loads with the same identifier (\"+identifier+\")\");\n\t\t}\n\t\tpending.push(identifier);\n\t\t//slog(channel, \"JiboKinematicInfo:Queuing load of \"+identifier);\n\t\treturn function(){\n\t\t\tvar index = pending.indexOf(identifier);\n\t\t\tif(index === -1){\n\t\t\t\tslog(channel, \"JiboKinematicInfo:Error, callback \\\"\"+identifier+\"\\\" called but not currently pending.\");\n\t\t\t}else{\n\t\t\t\t//slog(channel, \"JiboKinematicInfo:Unqueuing load of \"+identifier+\" (\"+pending.length+\" remain)\");\n\t\t\t\tpending.splice(index, 1);\n\t\t\t}\n\t\t\tif(internalCallback){\n\t\t\t\tinternalCallback.apply(this, arguments);\n\t\t\t}\n\t\t\tif(pending.length === 0){\n\t\t\t\t//slog(channel, \"JiboKinematicInfo:No more loads queued.  Calling final setup\");\n\t\t\t\tcallbacksDone();\n\t\t\t}\n\t\t};\n\t};\n\n\t//called when all pending callbacks have completed\n\tcallbacksDone = function()\n\t{\n\t\tif(!anyFailed)\n\t\t{\n\t\t\tself.loadSucceeded = true;\n\n\t\t\t// concatenate the dof names\n\t\t\tself._dofNames = self._bodyDOFNames.concat(self._eyeDOFNames);\n\n\t\t\t//init pose's knowledge of total available dofs for array optimization\n\t\t\tif(Pose.hasOwnProperty(\"__globalSetup\")) {\n\t\t\t\tPose.__globalSetup(self._dofNames);\n\t\t\t}\n\n\t\t\t//set up the kinematic groups\n\t\t\tself._bodyKinematicGroup = new KinematicGroup(self._bodyControlGroup.getCopy(), bodySkeletonRoot);\n\n\t\t\t//new array combining the 2 lists, and corresponding controls/kinematic group\n\t\t\tvar fullControlsList = self._eyeControlGroup.getControlList().concat(self._bodyControlGroup.getControlList());\n\t\t\tself._fullControlGroup = new ModelControlGroup();\n\t\t\tself._fullControlGroup.setControlList(fullControlsList);\n\t\t\tself._fullKinematicGroup = new KinematicGroup(self._fullControlGroup.getCopy(), fullSkeletonRoot);\n\n\n\t\t\t//set the default pose\n\t\t\tself._defaultPose = new Pose(\"default pose\", self._dofNames);\n\t\t\tself._defaultAnimation.getPoseAtTime(self._defaultAnimation.getDuration()/2, self._interpolatorSet, self._defaultPose);\n\t\t\tfor (var dofIndex=0; dofIndex<self._dofNames.length; dofIndex++)\n\t\t\t{\n\t\t\t\tif (self._defaultPose.get(self._dofNames[dofIndex], 0) === null)\n\t\t\t\t{\n\t\t\t\t\tself.loadMessage = \"default animation has no value for DOF: \"+self._dofNames[dofIndex];\n\t\t\t\t\tself.loadSucceeded = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//TODO: load this info from file\n\t\t\tself._dofGlobalAlignment = new DOFGlobalAlignment(self._fullKinematicGroup, {\n\t\t\t\tmiddleSection_r:new SeriesAlignedAxesTargetSelector(\"middleSection_r\", [\"bottomSection_r\"], [1]),\n\t\t\t\ttopSection_r:new SeriesAlignedAxesTargetSelector(\"topSection_r\", [\"middleSection_r\", \"bottomSection_r\"], [1,1])\n\t\t\t});\n\n\t\t\t//add the limits info\n\t\t\tvar limitsDOFNames = Object.keys(dofLimits);\n\t\t\tfor (var limitIndex=0; limitIndex<limitsDOFNames.length; limitIndex++)\n\t\t\t{\n\t\t\t\tvar info = self._fullControlGroup.getDOFInfo(limitsDOFNames[limitIndex]);\n\t\t\t\tinfo.setLimitData(dofLimits[limitsDOFNames[limitIndex]]);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tself.loadSucceeded = false;\n\t\t}\n\t\tif(callback)\n\t\t{\n\t\t\tcallback();\n\t\t}\n\t};\n\n\tvar kinematicsLoader = new KinematicsLoader();\n\n\t//use an outstanding callback to ensure load cannot finish until all loads are queued\n\tvar allQueuedCallback = getCallback(\"Ensure All Loads Queued\", null);\n\n\tkinematicsLoader.load(self._config.getBodyKinematicsURL(), getCallback(\"Body Kinematics\", function()\n\t\t{\n\t\t\tvar kinematicsResult = kinematicsLoader.getResult();\n\t\t\tif (kinematicsResult.success)\n\t\t\t{\n\t\t\t\tself._bodyControlGroup = kinematicsResult.modelControlGroup;\n\t\t\t\tself._bodyDOFNames = self._bodyControlGroup.getDOFNames();\n\t\t\t\tself._interpolatorSet.addModelControlGroup(self._bodyControlGroup);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tanyFailed = true;\n\t\t\t\tself.loadMessage = \"body kinematics load failed with message: \"+kinematicsResult.message+\", URL = \"+kinematicsResult.url;\n\t\t\t}\n\t\t}\n\t));\n\n\tkinematicsLoader.load(self._config.getEyeKinematicsURL(), getCallback(\"Eye Kinematics\", function()\n\t\t{\n\t\t\tvar kinematicsResult = kinematicsLoader.getResult();\n\t\t\tif (kinematicsResult.success)\n\t\t\t{\n\t\t\t\tself._eyeControlGroup = kinematicsResult.modelControlGroup;\n\t\t\t\tself._eyeDOFNames = self._eyeControlGroup.getDOFNames();\n\t\t\t\tself._interpolatorSet.addModelControlGroup(self._eyeControlGroup);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tanyFailed = true;\n\t\t\t\tself.loadMessage = \"eye kinematics load failed with message: \"+kinematicsResult.message+\", URL = \"+kinematicsResult.url;\n\t\t\t}\n\t\t}\n\t));\n\n\t/** @type {SkeletonLoader} */\n\tvar bodySkeletonLoader = new SkeletonLoader();\n\tbodySkeletonLoader.load(self._config.getBodySkeletonURL(), getCallback(\"Body Skeleton\", function()\n\t\t{\n\t\t\tvar bodySkeletonResult = bodySkeletonLoader.getResult();\n\n\t\t\tif(bodySkeletonResult.success)\n\t\t\t{\n\t\t\t\tbodySkeletonRoot = bodySkeletonResult.skeletonRoot;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tanyFailed = true;\n\t\t\t\tself.loadMessage = \"body skeleton load failed with message: \"+bodySkeletonResult.message+\", URL = \"+bodySkeletonResult.url;\n\t\t\t}\n\t\t}\n\t));\n\n\t/** @type {SkeletonLoader} */\n\tvar fullSkeletonLoader = new SkeletonLoader();\n\tfullSkeletonLoader.load(self._config.getFullSkeletonURL(), getCallback(\"Full Skeleton\", function()\n\t\t{\n\t\t\tvar fullSkeletonResult = fullSkeletonLoader.getResult();\n\n\t\t\tif(fullSkeletonResult.success)\n\t\t\t{\n\t\t\t\tfullSkeletonRoot = fullSkeletonResult.skeletonRoot;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tanyFailed = true;\n\t\t\t\tself.loadMessage = \"full skeleton load failed with message: \"+fullSkeletonResult.message+\", URL = \"+fullSkeletonResult.url;\n\t\t\t}\n\t\t}\n\t));\n\n\tvar animationLoader = new AnimationLoader();\n\tanimationLoader.load(self._config.getRobotURL()+\"jibo_default.anim\", getCallback(\"Default Animation\", function()\n\t\t{\n\t\t\tvar animationResult = animationLoader.getResult();\n\n\t\t\tif (animationResult.success)\n\t\t\t{\n\t\t\t\tself._defaultAnimation = animationResult.motion;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tanyFailed = true;\n\t\t\t\tself.loadMessage = \"default animation load failed with message: \"+animationResult.message+\", URL = \"+animationResult.url;\n\t\t\t}\n\t\t}\n\t));\n\n\tvar sceneInfo = new SceneInfo();\n\tsceneInfo.load(self._config.getSceneInfoURL(), getCallback(\"Scene Info\", function()\n\t\t{\n\t\t\tif (sceneInfo.loadSucceeded)\n\t\t\t{\n\t\t\t\tself._eyeScreenInfo = new EyeScreenInfo(sceneInfo.faceScreenWidth, sceneInfo.faceScreenHeight, sceneInfo.faceScreenMeshName);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tanyFailed = true;\n\t\t\t\tself.loadMessage = \"scene info failed with load message: \"+sceneInfo.loadMessage+\", URL = \"+self._config.getSceneInfoURL();\n\t\t\t}\n\t\t}\n\t));\n\n\tDOFSet.load(self._config.getDOFGroupsURL(), getCallback(\"DOF Groups\", function(allDOFSets, errorMessage)\n\t\t{\n\t\t\tif (allDOFSets != null) //check for null or undefined (eqnull)\n\t\t\t{\n\t\t\t\tself._dofSets = allDOFSets;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tanyFailed = true;\n\t\t\t\tself.loadMessage = \"DOF Groups failed with load message: \"+errorMessage+\", URL = \" + self._config.getDOFGroupsURL();\n\t\t\t}\n\t\t}\n\t));\n\n\tvar limitsLoader = new LimitsLoader();\n\tlimitsLoader.load(self._config.getLimitsURL(), getCallback(\"Limits\", function()\n\t\t{\n\t\t\tvar limitsResult = limitsLoader.getResult();\n\n\t\t\tif (limitsResult.success)\n\t\t\t{\n\t\t\t\tdofLimits = limitsResult.dofLimits;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tanyFailed = true;\n\t\t\t\tself.loadMessage = \"limits data load failed with message: \"+limitsResult.message+\", URL = \"+limitsResult.url;\n\t\t\t}\n\t\t}\n\t));\n\n\n\t//This must be called after all loads queued\n\tallQueuedCallback();\n};\n\n/**\n * @return {ModelControlGroup}\n */\nJiboKinematicInfo.prototype.getBodyControlGroup = function()\n{\n\treturn this._bodyControlGroup;\n};\n\n/**\n * @return {ModelControlGroup}\n */\nJiboKinematicInfo.prototype.getEyeControlGroup = function()\n{\n\treturn this._eyeControlGroup;\n};\n\n/**\n * @return {ModelControlGroup}\n */\nJiboKinematicInfo.prototype.getFullControlGroup = function()\n{\n\treturn this._fullControlGroup;\n};\n\n/**\n * @return {string[]}\n */\nJiboKinematicInfo.prototype.getBodyDOFNames = function()\n{\n\treturn this._bodyDOFNames;\n};\n\n/**\n * @return {string[]}\n */\nJiboKinematicInfo.prototype.getEyeDOFNames = function()\n{\n\treturn this._eyeDOFNames;\n};\n\n/**\n * @return {string[]}\n */\nJiboKinematicInfo.prototype.getDOFNames = function()\n{\n\treturn this._dofNames;\n};\n\n/**\n * @return {KinematicGroup}\n */\nJiboKinematicInfo.prototype.getFullKinematicGroup = function()\n{\n\treturn this._fullKinematicGroup;\n};\n\n/**\n * @return {KinematicGroup}\n */\nJiboKinematicInfo.prototype.getBodyKinematicGroup = function()\n{\n\treturn this._bodyKinematicGroup;\n};\n\n/**\n * @return {InterpolatorSet}\n */\nJiboKinematicInfo.prototype.getInterpolatorSet = function()\n{\n\treturn this._interpolatorSet;\n};\n\n/**\n * @return {Pose}\n */\nJiboKinematicInfo.prototype.getDefaultPose = function()\n{\n\treturn this._defaultPose;\n};\n\n/**\n * @return {EyeScreenInfo}\n */\nJiboKinematicInfo.prototype.getEyeScreenInfo = function()\n{\n\treturn this._eyeScreenInfo;\n};\n\n/**\n * @return {Object.<string,DOFSet>}\n */\nJiboKinematicInfo.prototype.getDOFSets = function()\n{\n\treturn this._dofSets;\n};\n\n/**\n * @return {Object.<string,DOFSet>}\n */\nJiboKinematicInfo.prototype.getDOFGlobalAlignment = function()\n{\n\treturn this._dofGlobalAlignment;\n};\n\n\nmodule.exports = JiboKinematicInfo;"],"sourceRoot":"/source/"}