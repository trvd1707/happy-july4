{"version":3,"sources":["rendering/FaceRenderer.ts"],"names":[],"mappings":"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","file":"rendering/FaceRenderer.js","sourcesContent":["import Background from \"./Background\";\nimport IAuxOutput from \"./IAuxOutput\";\nimport Eye from './Eye';\nimport EyeOverlay from './EyeOverlay';\nimport DOFValues from \"./DOFValues\";\nimport {isNotDirty} from \"./DOFValues\";\nimport Timer from '../utils/Timer';\n\n/**\n * @description\n * Controls the rendering of the eye, overlay, and background.\n * ```\n * let jibo = require('jibo');\n * jibo.init('face', () => {\n *    // Setup complete!\n * });\n * ```\n * @module jibo/face\n */\nclass FaceRenderer implements IAuxOutput {\n    public static WIDTH:number = 1280;\n    public static HEIGHT:number = 720;\n\n    public eye:Eye;\n    public canvas:HTMLCanvasElement;\n    public eyeOverlay:EyeOverlay;\n    public renderer:PIXI.WebGLRenderer;\n\n    /** parent for eye, overlay, background */\n    public stage:PIXI.Container;\n\n    /** What we pass to the renderer */\n    public root:PIXI.Container;\n    public backgroundBorder:PIXI.Graphics;\n    public background:Background;\n    public connected:boolean;\n    private _renderOnlyWhenDirty:boolean;\n    private _previousDofValues:DOFValues;\n    private _currentDofValues:DOFValues;\n    private _paused:boolean;\n    private _zoom:number;\n    private _visible:boolean;\n    private _timer:Timer;\n\n    constructor(timer:Timer, public cache:boolean=true) {\n        \n        // Hide the PIXI.js hello banner\n        (<any>PIXI.utils)._saidHello = true;\n\n        this.stage = new PIXI.Container();\n        this.root = new PIXI.Container();\n        this.backgroundBorder = new PIXI.Graphics();\n\n        this.root.addChild(this.stage);\n        this._renderOnlyWhenDirty = true;\n        this._zoom = 1.0;\n        this.update = this.update.bind(this);\n        this._paused = true;\n        this._timer = timer;\n\n        /**\n         * If false, disconnects face movement from body movement.\n         * @name module:jibo/face#connected\n         * @type {boolean}\n         */\n        this.connected = true;\n\n        // start the update loop\n        this._timer.on('update', this.update);\n    }\n\n    /**\n     * If `true` (default), only renders when there is a change in a DOF value.\n     * Only set to `false` if adding custom animations\n     * in the eye context.\n     * @name module:jibo/face#renderOnlyWhenDirty\n     * @type {boolean}\n     */\n    set renderOnlyWhenDirty(value:boolean) {\n        this._renderOnlyWhenDirty = value;\n    }\n\n    init(element:HTMLElement) {\n        let canvas:HTMLCanvasElement = document.createElement('canvas');\n        canvas.style.width = '100%';\n        canvas.style.height = '100%';\n        this.canvas = canvas;\n        element.appendChild(canvas);\n        this.renderer = new PIXI.WebGLRenderer(FaceRenderer.WIDTH, FaceRenderer.HEIGHT, {\n            view: canvas,\n            backgroundColor: 0x000000,\n            antialias: true\n        });\n\n        this.eye = new Eye(this.renderer, this.cache);\n        this.eyeOverlay = new EyeOverlay(this.renderer, this.cache);\n        this.background = new Background(this.renderer, this.cache);\n        this.reset();\n        this.paused = false;\n        this.visible = true;\n    }\n\n    /**\n     * Resets the layers.\n     * @name module:jibo/face#reset\n     * @type {boolean}\n     */\n    reset(): void {\n        // Remove all\n        this.stage.removeChildren();\n\n        //background textures\n        this.stage.addChild(this.background);\n\n        //for the animation editor\n        this.stage.addChild(this.backgroundBorder);\n        this.stage.addChild(this.eye.stage);\n        this.stage.addChild(this.eyeOverlay.stage);\n    }\n\n    /**\n     * Add a child layer above the eye.\n     * @method module:jibo/face#addChildAboveEye\n     * @private\n     * @param {PIXI.DisplayObject} child Display object to add.\n     * @return {PIXI.DisplayObject} Child added.\n     */\n    addChildAboveEye(child:PIXI.DisplayObject): PIXI.DisplayObject {\n        return this.stage.addChild(child);\n    }\n\n    /**\n     * Add a child layer below the eye.\n     * @method module:jibo/face#addChildBelowEye\n     * @private\n     * @param {PIXI.DisplayObject} child Display object to add.\n     * @return {PIXI.DisplayObject} Child added.\n     */\n    addChildBelowEye(child:PIXI.DisplayObject): PIXI.DisplayObject {\n        const index = this.stage.getChildIndex(this.eye.stage);\n        return this.stage.addChildAt(child, index);\n    }\n\n    display(timestamp:Array<number>, dofValues:DOFValues):void {\n        this._previousDofValues = this._currentDofValues;\n        this._currentDofValues = dofValues;\n\n        if (this.connected) {\n            this.eye.update(timestamp, dofValues);\n            this.eyeOverlay.update(timestamp, dofValues);\n            this.background.update(timestamp, dofValues);\n        }\n    }\n\n    /**\n     * If false, hides the eye, overlay, and background.\n     * @name module:jibo/face#visible\n     * @type {boolean}\n     */\n    set visible(visible:boolean) {\n        this._visible = visible;\n        this.background.visible = visible;\n        this.eye.visible = visible;\n        this.eyeOverlay.visible = visible;\n    }\n\n    get visible(): boolean {\n        return this._visible;\n    }\n\n    update(elapsed:boolean) {\n        if (this._paused) {\n            return;\n        }\n        if(!this._renderOnlyWhenDirty) {\n            this.renderer.render(this.root);\n        }\n        else if(!isNotDirty(this._previousDofValues, this._currentDofValues)) {\n            this.renderer.render(this.root);\n        }\n    }\n\n    /**\n     * If `true`, pauses the face renderer completely.\n     * @name module:jibo/face#paused\n     * @type {boolean}\n     */\n    set paused(value:boolean) {\n        if(value !== this._paused) {\n            this._paused = value;\n        }\n    }\n\n    get paused(): boolean {\n        return this._paused;\n    }\n\n    /**\n     * Changes the stage zoom level. Default is 1 = 100%.\n     * @name module:jibo/face#zoom\n     * @type {number}\n     */\n    set zoom(zoom:number) {\n        this._zoom = zoom;\n        zoom = Math.min(zoom, 1);\n        this.stage.scale.x = zoom;\n        this.stage.scale.y = zoom;\n        this.stage.x = 0.5 * (FaceRenderer.WIDTH - zoom * FaceRenderer.WIDTH);\n        this.stage.y = 0.5 * (FaceRenderer.HEIGHT - zoom * FaceRenderer.HEIGHT);\n    }\n\n    get zoom():number {\n        return this._zoom;\n    }\n\n    makeBorder():void {\n        this.backgroundBorder.lineStyle(3, 0xFFFFFF)\n            .moveTo(0, 0)\n            .lineTo(FaceRenderer.WIDTH, 0)\n            .lineTo(FaceRenderer.WIDTH, FaceRenderer.HEIGHT)\n            .lineTo(0, FaceRenderer.HEIGHT)\n            .lineTo(0, 0);\n    }\n\n    /**\n     * Cleans up the renderer.\n     * @method module:jibo/face#destroy\n     */\n    destroy():void {\n        if (this.canvas) {\n            this.canvas.parentNode.removeChild(this.canvas);\n            this.canvas = null;\n        }\n        if (this._timer) {\n            this._timer.removeListener('update', this.update);\n            this._timer = null;\n        }\n        this._paused = true;\n        this.stage = null;\n        this.eye.destroy();\n        this.eye = null;\n        this.eyeOverlay.destroy();\n        this.eyeOverlay = null;\n        this.background = null;\n        this.backgroundBorder = null;\n        this.root.destroy(true);\n        this.root = null;\n        this.renderer.destroy();\n    }\n}\n\nexport default FaceRenderer;\n"],"sourceRoot":"/source/"}