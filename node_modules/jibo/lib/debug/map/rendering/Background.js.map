{"version":3,"sources":["rendering/Background.ts"],"names":[],"mappings":";;;;;;AAEA;IAAyB,8BAAW;IAShC,oBAAY,QAA2B,EAAS,KAAa;QACzD,iBAAO,CAAC;QADoC,UAAK,GAAL,KAAK,CAAQ;QAEzD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,MAAM,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE,CAAC;QACnD,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IAC1B,CAAC;IAED,sBAAI,2BAAG;aAAP,UAAQ,KAAY;YAChB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;QAClC,CAAC;;;OAAA;IAED,sBAAI,6BAAK;aAAT,UAAU,KAAY;YAClB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;QAClC,CAAC;;;OAAA;IAED,sBAAI,4BAAI;aAAR,UAAS,KAAY;YACjB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC;QACnC,CAAC;;;OAAA;IAED,2BAAM,GAAN,UAAO,SAAkB,EAAE,SAAmB;QAC1C,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YAClB,MAAM,CAAC;QACX,CAAC;QACD,EAAE,CAAA,CAAC,SAAS,CAAC,wBAAwB,IAAI,SAAS,CAAC,wBAAwB,KAAK,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YAC/F,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC,wBAAwB,CAAC;YAEtD,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;gBACb,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAC5D,CAAC;YACD,IAAI,CAAC,CAAC;gBACF,IAAI,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;gBACxB,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC;gBAC7B,IAAI,WAAW,GAAG,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;gBAC9C,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC;gBACxC,IAAI,CAAC,OAAO,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;YACjE,CAAC;QACL,CAAC;QACD,EAAE,CAAA,CAAC,SAAS,CAAC,uBAAuB,KAAK,CAAC,IAAI,SAAS,CAAC,yBAAyB,KAAK,CAAC;YACnF,SAAS,CAAC,wBAAwB,KAAK,CAAC,CAAC,CAAC,CAAC;YAC3C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACxB,CAAC;QACD,IAAI,CAAC,CAAC;YACF,EAAE,CAAA,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC5C,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACjC,CAAC;YACD,IAAI,CAAC,GAAG,GAAG,SAAS,CAAC,uBAAuB,CAAC;YAC7C,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,yBAAyB,CAAC;YACjD,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,wBAAwB,CAAC;QACnD,CAAC;IAEL,CAAC;IACL,iBAAC;AAAD,CA7DA,AA6DC,CA7DwB,IAAI,CAAC,MAAM,GA6DnC;AAED;kBAAe,UAAU,CAAC","file":"rendering/Background.js","sourcesContent":["import DOFValues from \"./DOFValues\";\n\nclass Background extends PIXI.Sprite {\n\n    public renderer:PIXI.WebGLRenderer;\n    public stage:PIXI.Container;\n    public filter:PIXI.filters.ColorMatrixFilter;\n    public connected:boolean;\n    private texturePrev:string;\n\n\n    constructor(renderer:PIXI.WebGLRenderer, public cache:boolean) {\n        super();\n        this.renderer = renderer;\n        this.filter = new PIXI.filters.ColorMatrixFilter();\n        this.filter.reset();\n        this.connected = true;\n    }\n\n    set red(value:number) {\n        this.filter.matrix[0] = value;\n    }\n\n    set green(value:number) {\n        this.filter.matrix[6] = value;\n    }\n\n    set blue(value:number) {\n        this.filter.matrix[12] = value;\n    }\n\n    update(timestamp:number[], dofValues:DOFValues):void {\n        if (!this.connected) {\n            return;\n        }\n        if(dofValues.screenBGTextureInfixBn_r && dofValues.screenBGTextureInfixBn_r !== this.texturePrev) {\n            this.texturePrev = dofValues.screenBGTextureInfixBn_r;\n\n            if (this.cache) {\n                this.texture = PIXI.Texture.fromImage(this.texturePrev);\n            }\n            else {\n                let image = new Image();\n                image.src = this.texturePrev;\n                let baseTexture = new PIXI.BaseTexture(image);\n                baseTexture.imageUrl = this.texturePrev;\n                this.texture = new PIXI.Texture(new PIXI.BaseTexture(image));\n            }\n        }\n        if(dofValues.screenBG_redChannelBn_r === 1 && dofValues.screenBG_greenChannelBn_r === 1 &&\n            dofValues.screenBG_blueChannelBn_r === 1) {\n            this.filters = null;\n        }\n        else {\n            if(!this.filters || this.filters.length === 0) {\n                this.filters = [this.filter];\n            }\n            this.red = dofValues.screenBG_redChannelBn_r;\n            this.green = dofValues.screenBG_greenChannelBn_r;\n            this.blue = dofValues.screenBG_blueChannelBn_r;\n        }\n\n    }\n}\n\nexport default Background;"],"sourceRoot":"/source/"}