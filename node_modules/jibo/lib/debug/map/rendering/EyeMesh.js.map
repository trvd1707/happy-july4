{"version":3,"sources":["rendering/EyeMesh.ts"],"names":[],"mappings":";;;;;;AAAA,oBAAgB,OAAO,CAAC,CAAA;AAGxB;IAAsB,2BAAc;IAIhC,iBAAY,CAAc;QACtB,kBAAM,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;QAEhE,IAAI,CAAC,GAAG,GAAG,IAAI,YAAY,CAAC;YACxB,CAAC,EAAI,CAAC;YACN,GAAG,EAAE,CAAC;YACN,CAAC,EAAI,CAAC;YACN,CAAC,EAAI,GAAG;YACR,GAAG,EAAE,GAAG;YACR,CAAC,EAAI,GAAG;YACR,CAAC,EAAI,CAAC;YACN,GAAG,EAAE,CAAC;YACN,CAAC,EAAI,CAAC;SACT,CAAC,CAAC;QAEH,IAAI,CAAC,QAAQ,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAEtD,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,GAAG,CAAA,CAAC,IAAI,CAAC,GAAU,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC;YAChD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,aAAG,CAClB,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EACX,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAClB,CAAC,CAAC;QACP,CAAC;QAED,IAAI,CAAC,OAAO,GAAG,IAAI,WAAW,CAAC;YAC3B,CAAC,EAAC,CAAC,EAAC,CAAC;YACL,CAAC,EAAC,CAAC,EAAC,CAAC;YACL,CAAC,EAAC,CAAC,EAAC,CAAC;YACL,CAAC,EAAC,CAAC,EAAC,CAAC;YACL,CAAC,EAAC,CAAC,EAAC,CAAC;YACL,CAAC,EAAC,CAAC,EAAC,CAAC;YACL,CAAC,EAAC,CAAC,EAAC,CAAC;YACL,CAAC,EAAC,CAAC,EAAC,CAAC;SACR,CAAC,CAAC;IACP,CAAC;IAED,iCAAe,GAAf;QACI,GAAG,CAAC,CAAC,IAAI,CAAC,GAAU,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAC/C,IAAI,KAAK,GAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC7B,IAAI,KAAK,GAAU,CAAC,GAAG,CAAC,CAAC;YACzB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;YAC/B,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;QACvC,CAAC;QACD,IAAI,CAAC,wBAAwB,EAAE,CAAC;IACpC,CAAC;IACL,cAAC;AAAD,CAlDA,AAkDC,CAlDqB,IAAI,CAAC,IAAI,CAAC,IAAI,GAkDnC;AAED;kBAAe,OAAO,CAAC","file":"rendering/EyeMesh.js","sourcesContent":["import DOF from \"./DOF\";\n\n\nclass EyeMesh extends PIXI.mesh.Mesh {\n\n    public dofs:Array<DOF>;\n\n    constructor(t:PIXI.Texture) {\n        super(t, null, null, null, PIXI.mesh.Mesh.DRAW_MODES.TRIANGLES);\n\n        this.uvs = new Float32Array([\n            0,   0,\n            0.5, 0,\n            1,   0,\n            0,   0.5,\n            0.5, 0.5,\n            1,   0.5,\n            0,   1,\n            0.5, 1,\n            1,   1\n        ]);\n\n        this.vertices = new Float32Array(this.uvs.length * 2);\n\n        this.dofs = [];\n        for(let i:number = 0; i < this.uvs.length; i += 2) {\n            this.dofs.push(new DOF(\n                this.uvs[i],\n                this.uvs[i + 1]\n            ));\n        }\n\n        this.indices = new Uint16Array([\n            0,1,3,\n            1,3,4,\n            1,4,5,\n            2,5,1,\n            3,4,7,\n            7,6,3,\n            4,5,7,\n            5,7,8\n        ]);\n    }\n\n    updateTransform() {\n        for (let i:number = 0; i < this.dofs.length; i++) {\n            let point:DOF = this.dofs[i];\n            let index:number = i * 2;\n            this.vertices[index] = point.x;\n            this.vertices[index + 1] = point.y;\n        }\n        this.containerUpdateTransform();\n    }\n}\n\nexport default EyeMesh;\n"],"sourceRoot":"/source/"}