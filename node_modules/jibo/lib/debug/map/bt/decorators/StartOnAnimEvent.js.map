{"version":3,"sources":["bt/decorators/StartOnAnimEvent.js"],"names":[],"mappings":";;;;;;AAAA,0BAAsB,cAAc,CAAC,CAAA;AACrC,uBAAmB,WAAW,CAAC,CAAA;AAC/B,wBAAoB,eAAe,CAAC,CAAA;AAEpC;;;;GAIG;AAEH;;;;;;;;GAQG;AACH;IAA8C,oCAAS;IACtD,0BAAY,OAAO;QAClB,kBAAM,OAAO,CAAC,CAAC;QACT,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAChD,CAAC;IAED,gCAAK,GAAL;QACC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QAChB,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YACtC,iBAAO,CAAC,QAAQ,CAAC,eAAe,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC/E,CAAC;QACD,MAAM,CAAC,gBAAM,CAAC,IAAI,CAAC;IAC1B,CAAC;IAEE,mCAAQ,GAAR,UAAS,YAAY,EAAE,OAAO;QAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;QACnD,CAAC;QACD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,iBAAO,CAAC,QAAQ,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC3F,CAAC;IAEJ,+BAAI,GAAJ;QACC,kBAAkB;QACZ,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YACtC,iBAAO,CAAC,QAAQ,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC3F,CAAC;IACR,CAAC;IAED,iCAAM,GAAN,UAAO,MAAM;QACL,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAChB,MAAM,CAAC,MAAM,CAAC;QAClB,CAAC;QACD,IAAI,CAAC,CAAC;YACJ,MAAM,CAAC,gBAAM,CAAC,IAAI,CAAC;QACrB,CAAC;IACT,CAAC;IACF,uBAAC;AAAD,CAtCA,AAsCC,CAtC6C,mBAAS,GAsCtD;AAtCD;kCAsCC,CAAA","file":"bt/decorators/StartOnAnimEvent.js","sourcesContent":["import Decorator from '../Decorator';\nimport Status from '../Status';\nimport Runtime from '../../Runtime';\n\n/**\n * @callback module:jibo/bt/decorators.StartOnAnimEvent~StartOnEventOnReceived\n * @argument {AnimationInstance} instance The animation instance the event was dispatched from.\n * @argument {Object} payload A payload defined in the `.keys` file.\n */\n\n/**\n * @class StartOnAnimEvent\n * @extends module:jibo/bt.Decorator\n * @memberof module:jibo/bt/decorators\n * @description\n * `StartOnAnimEvent` will begin the execution of its behavior when an animation fires an event from its event layer.\n * @param {String} options.eventName - Name of the event this behavior listens for.\n * @param {module:jibo/bt/decorators.StartOnAnimEvent~StartOnEventOnReceived} options.onReceived - Callback for when `eventName` is dispatched.\n */\nexport default class StartOnAnimEvent extends Decorator {\n\tconstructor(options) {\n\t\tsuper(options);\n        this.didStart = false;\n        this._onEvent = this._onEvent.bind(this);\n\t}\n\n\tstart() {\n\t\tthis.didStart = false;\n        if (this.options.eventName.length !== 0) {\n            Runtime.instance.behaviorEmitter.on(this.options.eventName, this._onEvent);\n        }\n        return Status.WAIT;\n\t}\n\n    _onEvent(animInstance, payload) {\n        if (this.options.onReceived) {\n            this.options.onReceived(animInstance, payload);\n        }\n        this.didStart = true;\n        Runtime.instance.behaviorEmitter.removeListener(this.options.eventName, this._onEvent);\n    }\n\n\tstop() {\n\t\t// remove listener\n        if (this.options.eventName.length !== 0) {\n            Runtime.instance.behaviorEmitter.removeListener(this.options.eventName, this._onEvent);\n        }\n\t}\n\n\tupdate(result) {\n         if (this.didStart) {\n             return result;\n         }\n         else {\n           return Status.WAIT;\n         }\n\t}\n}"],"sourceRoot":"/source/"}