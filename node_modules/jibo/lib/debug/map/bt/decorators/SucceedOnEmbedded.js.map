{"version":3,"sources":["bt/decorators/SucceedOnEmbedded.js"],"names":[],"mappings":"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","file":"bt/decorators/SucceedOnEmbedded.js","sourcesContent":["import Decorator from '../Decorator';\nimport Status from '../Status';\nimport Runtime from '../../Runtime';\n\n\n/**\n * @class EmbeddedListenEmitter\n * @description Passed to the {@link module:jibo/bt/decorators.SucceedOnEmbedded~OnResult} function of the {@link module:jibo/bt/decorators.SucceedOnEmbedded|SucceedOnEmbedded} behavior.\n * @extends EventEmitter\n * @memberof module:jibo/bt\n */\n\n/**\n * @typedef {Object} jibo.bt.decorators.SucceedOnEmbedded~Options\n */\n\n/**\n * Called when the {@link module:jibo/bt.EmbeddedListenEmitter|EmbeddedListenEmitter} is constructed.\n * @callback module:jibo/bt/decorators.SucceedOnEmbedded~OnResult\n * @param {module:jibo/bt.EmbeddedListenEmitter} listener Use this instance to listen for listen events.\n */\n\n/**\n * @class SucceedOnEmbedded\n * @extends module:jibo/bt.Decorator\n * @memberof module:jibo/bt/decorators\n * @description Succeeds the behavior its decorating when the specified audio phrase is spotted.\n * @param {Object} options See {@link module:jibo/bt.Decorator|Decorator} for all options.\n * @param {module:jibo/bt/decorators.SucceedOnEmbedded.Rules} options.rule The embedded rule to listen for.\n * @param {module:jibo/bt/decorators.SucceedOnEmbedded~OnResult} options.onResult Called and passed a {@link module:jibo/bt.EmbeddedListenEmitter|EmbeddedListenEmitter} object. Events are\n *                                     fired from the emitter at certain points in this behavior's lifecycle.\n */\nclass SucceedOnEmbedded extends Decorator {\n    constructor(options) {\n        super(options);\n        this.status = Status.INVALID;\n    }\n    start() {\n        this.status = Status.IN_PROGRESS;\n        let asr = Runtime.instance.asr;\n        if(!asr.isInitialized) {\n            console.warn('Running listen without ASR service');\n            return true;\n        }\n        let options = {};\n        options.embeddedOnly = true;\n        this.listener = asr.createListener(options, this.options.rule);\n        this.listener.start();\n        this.listener.on('embedded', (result, speaker) => {\n            /**\n             * Fired when the phrase is spotted.\n             * @event module:jibo/bt.EmbeddedListenEmitter#hey-jibo\n             * @param {Object} result\n             * @param {Array} speakers Text independent speaker ID results.\n             */\n            this.emitter.emit('hey-jibo', result, speaker);\n            this.listener.removeAllListeners();\n            this.emitter.removeAllListeners();\n            this.status = Status.SUCCEEDED;\n        });                      \n        this.listener.on('error', (error) => {\n            /**\n             * Fired when there is an error.\n             * @event module:jibo/bt.EmbeddedListenEmitter#error\n             * @param {String} error\n             */\n            this.emitter.emit('error', error);\n        });          \n        this.listener.on('finished', () => {\n            this.listener.removeAllListeners();\n            this.emitter.removeAllListeners();\n            this.status = Status.SUCCEEDED;\n        });\n        \n        this.options.onResult(this.emitter);\n        this.status = Status.IN_PROGRESS;\n\n        return true;\n    }\n\n    stop() {\n        this.emitter.removeAllListeners();\n        this.listener.removeAllListeners();\n    }\n\n    update(result) {\n        if(this.status === Status.IN_PROGRESS){\n            return result;\n        }\n        else {\n            return this.status;\n        }\n    }\n}\n\n/**\n * Embedded listen rule types.\n * @name module:jibo/bt/decorators.SucceedOnEmbedded.Rules\n * @property {String} HEY_jibo Listen for \"Hey, Jibo\"\n * @static\n * @enum {String}\n */\nSucceedOnEmbedded.Rules = {\n    /** Listen for \"Hey Jibo\" */\n    HEY_jibo: \"hey_jibo\"\n};\n\n\nexport default SucceedOnEmbedded;"],"sourceRoot":"/source/"}