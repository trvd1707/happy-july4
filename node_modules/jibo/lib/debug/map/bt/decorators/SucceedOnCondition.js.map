{"version":3,"sources":["bt/decorators/SucceedOnCondition.js"],"names":[],"mappings":";;;;;;AAAA,0BAAsB,cAAc,CAAC,CAAA;AACrC,uBAAmB,WAAW,CAAC,CAAA;AAE/B;;;GAGG;AAEH;;;;;;;;;;;;GAYG;AACH;IAAgD,sCAAS;IACrD,4BAAY,OAAO;QACf,kBAAM,OAAO,EAAE;YACX,IAAI,EAAE,cAAW,CAAC;SACrB,CAAC,CAAC;IACP,CAAC;IACJ,kCAAK,GAAL;QACC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,MAAM,CAAC,IAAI,CAAC;IACb,CAAC;IACD,mCAAM,GAAN,UAAO,MAAM;QACZ,EAAE,CAAA,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;YAC/B,MAAM,CAAC,gBAAM,CAAC,SAAS,CAAC;QACzB,CAAC;QACD,MAAM,CAAC,MAAM,CAAC;IACf,CAAC;IACF,yBAAC;AAAD,CAhBA,AAgBC,CAhB+C,mBAAS,GAgBxD;AAhBD;oCAgBC,CAAA","file":"bt/decorators/SucceedOnCondition.js","sourcesContent":["import Decorator from '../Decorator';\nimport Status from '../Status';\n\n/**\n * @callback module:jibo/bt/decorators.SucceedOnCondition~SucceedOnConditionConditional\n * @returns {Boolean} `true` to succeed the decorated behavior. `false` otherwise.\n */\n\n/**\n * @class SucceedOnCondition\n * @extends module:jibo/bt.Decorator\n * @memberof module:jibo/bt/decorators\n * @description\n * Explicitly interrupts the behavior it's decorating and returns Status.SUCCEEDED if the\n * conditional evaluates to `true`.\n * @param {Object} options See {@link module:jibo/bt.Decorator|Decorator} for all options.\n * @param {Function} [options.init] Function called at the start of this behavior. Used to initialize any\n * variables or data.\n * @param {module:jibo/bt/decorators.SucceedOnCondition~SucceedOnConditionConditional} options.conditional Function called every frame. Return `true`\n * to force behavior to succeed.\n */\nexport default class SucceedOnCondition extends Decorator {\n    constructor(options) {\n        super(options, {\n            init: function(){}\n        });\n    }\n\tstart() {\n\t\tthis.options.init();\n\t\treturn true;\n\t}\n\tupdate(result) {\n\t\tif(this.options.conditional()) {\n\t\t\treturn Status.SUCCEEDED;\n\t\t}\n\t\treturn result;\n\t}\n}"],"sourceRoot":"/source/"}