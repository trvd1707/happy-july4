{"version":3,"sources":["bt/behaviors/SubtreeJs.js"],"names":[],"mappings":";;;;;;AAAA,yBAAqB,aAAa,CAAC,CAAA;AACnC,wBAAoB,WAAW,CAAC,CAAA;AAEhC;;;;;;;;;;;;;GAaG;AACH;IAAuC,6BAAQ;IAC3C,mBAAY,OAAO;QACf,kBAAM,OAAO,CAAC,CAAC;QACf,IAAI,CAAC,OAAO,GAAG,IAAI,iBAAO,CAAC;YACvB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,UAAU,EAAE,OAAO,CAAC,UAAU;YAC9B,QAAQ,EAAE,OAAO,CAAC,QAAQ;YAC1B,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,SAAS,EAAE,IAAI,CAAC,SAAS;SAC5B,CAAC,CAAC;IACP,CAAC;IACD,yBAAK,GAAL;QAAA,iBAMC;QALG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,UAAC,YAAY;YAClC,KAAI,CAAC,OAAO,CAAC,YAAY,GAAG,YAAY,CAAC;YACzC,KAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;QAC1B,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IACD,wBAAI,GAAJ;QACI,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IACD,0BAAM,GAAN;QACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;IAClC,CAAC;IACL,gBAAC;AAAD,CAzBA,AAyBC,CAzBsC,kBAAQ,GAyB9C;AAzBD;2BAyBC,CAAA","file":"bt/behaviors/SubtreeJs.js","sourcesContent":["import Behavior from '../Behavior';\nimport Subtree from './Subtree';\n\n/**\n * @class SubtreeJs\n * @extends module:jibo/bt.Behavior\n * @memberof module:jibo/bt/behaviors\n * @description Encapsulates an external subtree file (`.bt` file) into a single behavior. This behavior fails if the\n * `.bt` tree fails and succeeds if that tree succeeds.\n * @param {Object} options See {@link module:jibo/bt.Behavior|Behavior} for all options.\n * @param {Function} options.getFileName Returns the path to the `.bt` file this behavior encapsulates. This assumes the root\n *                               of all `.bt` files is in `${project}/behaviors`.\n * @param {Function} options.getNotepad Returns an object that will become this referenced tree's notepad. Think of this as the\n *                              arguments to this subtree.\n * @param {Function} options.onResult Called when the external tree either fails or succeeds. A result object is passed as an argument.\n *                            This result object is populated by the external tree. Think of this as the return value.\n */\nexport default class SubtreeJs extends Behavior {\n    constructor(options) {\n        super(options);\n        this.subtree = new Subtree({\n            name: this.name,\n            getNotepad: options.getNotepad, \n            onResult: options.onResult,\n            blackboard: this.blackboard,\n            emitter: this.emitter,\n            assetPack: this.assetPack\n        });\n    }\n    start() {\n        this.options.getFileName((behaviorPath) => {\n            this.subtree.behaviorPath = behaviorPath;\n            this.subtree._start();\n        });\n        return true;\n    }\n    stop() {\n        this.subtree._stop();\n    }\n    update() {\n        return this.subtree._update();\n    }\n}"],"sourceRoot":"/source/"}