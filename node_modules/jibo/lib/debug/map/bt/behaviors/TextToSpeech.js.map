{"version":3,"sources":["bt/behaviors/TextToSpeech.js"],"names":[],"mappings":";;;;;;AAAA,yBAAqB,aAAa,CAAC,CAAA;AACnC,uBAAmB,WAAW,CAAC,CAAA;AAC/B,wBAAoB,eAAe,CAAC,CAAA;AAEpC;;;;;;;;GAQG;AACH;IAA0C,gCAAQ;IAC9C,sBAAY,OAAO;QACf,kBAAM,OAAO,CAAC,CAAC;QACf,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3D,IAAI,CAAC,MAAM,GAAG,gBAAM,CAAC,OAAO,CAAC;IACjC,CAAC;IAGD,kEAAkE;IAClE,8DAA8D;IAC9D,8EAA8E;IAC9E,0DAA0D;IAC1D,wCAAiB,GAAjB;QACI,IAAI,CAAC,MAAM,GAAG,gBAAM,CAAC,SAAS,CAAC;IACnC,CAAC;IAED,sBAAI,+BAAK;aAAT,UAAU,KAAK;YACX,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;QAC/B,CAAC;;;OAAA;IAED,4BAAK,GAAL;QAAA,iBAkBC;QAjBG,IAAM,GAAG,GAAG,iBAAO,CAAC,QAAQ,CAAC,GAAG,CAAC;QACjC,IAAI,CAAC,MAAM,GAAG,gBAAM,CAAC,WAAW,CAAC;QACjC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,UAAC,GAAG;YAC9B,sGAAsG;YACtG,KAAI,CAAC,MAAM,GAAG,gBAAM,CAAC,SAAS,CAAC;YAC9B,EAAE,CAAA,CAAC,GAAG,CAAC,CAAA,CAAC;gBACL,OAAO,CAAC,GAAG,CAAC,qBAAqB,GAAG,GAAG,CAAC,CAAC;YAC7C,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,uBAAuB;QACvB,IAAI,CAAC,OAAO,EAAE,CAAC;QAEf,mCAAmC;QACnC,GAAG,CAAC,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACpC,GAAG,CAAC,EAAE,CAAC,SAAS,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAC1C,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAED,8BAAO,GAAP;QACI,IAAM,GAAG,GAAG,iBAAO,CAAC,QAAQ,CAAC,GAAG,CAAC;QACjC,wCAAwC;QACxC,GAAG,CAAC,cAAc,CAAC,SAAS,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;QACtD,GAAG,CAAC,cAAc,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IACpD,CAAC;IAED,2BAAI,GAAJ;QACI,IAAI,CAAC,OAAO,EAAE,CAAC;IACnB,CAAC;IAED,6BAAM,GAAN;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,KAAK,gBAAM,CAAC,WAAW,CAAC,CAAC,CAAC;YACrC,IAAI,CAAC,OAAO,EAAE,CAAC;QACnB,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IACL,mBAAC;AAAD,CAzDA,AAyDC,CAzDyC,kBAAQ,GAyDjD;AAzDD;8BAyDC,CAAA","file":"bt/behaviors/TextToSpeech.js","sourcesContent":["import Behavior from '../Behavior';\nimport Status from '../Status';\nimport Runtime from '../../Runtime';\n\n/**\n * @class TextToSpeech\n * @extends module:jibo/bt.Behavior\n * @memberof module:jibo/bt/behaviors\n * @description Makes Jibo speak.\n * @param {Object} options See {@link module:jibo/bt.Behavior|Behavior} for all options.\n * @param {String} options.words The words for Jibo to speak.\n * @param {Function} options.onWord Called each time a word is spoken. The word that is spoken is passed as an argument.\n */\nexport default class TextToSpeech extends Behavior {\n    constructor(options) {\n        super(options);\n        this.onSpeakingStopped = this.onSpeakingStopped.bind(this);\n        this.status = Status.INVALID;\n    }\n\n\n    // Create a callback that we can pass to the tts service to listen\n    // for stopped events that indicate someone called tts.stop().\n    // NOTE: We need to play well with others (aka calls to the low level API that\n    // are implemented by other behaviors or regular app code)\n    onSpeakingStopped() {\n        this.status = Status.SUCCEEDED;\n    }\n\n    set words(words) {\n        this.options.words = words;\n    }\n\n    start() {\n        const tts = Runtime.instance.tts;\n        this.status = Status.IN_PROGRESS;\n        tts.speak(this.options.words, (err) => {\n            // the behavior will succeed (even if there's an error) once we get the response back from tts service\n            this.status = Status.SUCCEEDED;\n             if(err){\n                console.log(\"tts.speak() error: \" + err);\n            }\n        });\n\n        // Remove the listeners\n        this.cleanup();\n\n        // Register for the relevant events\n        tts.on(\"word\", this.options.onWord);\n        tts.on(\"stopped\", this.onSpeakingStopped);\n        return true;\n    }\n\n    cleanup() {\n        const tts = Runtime.instance.tts;\n        // Remove listeners from the tts service\n        tts.removeListener('stopped', this.onSpeakingStopped);\n        tts.removeListener('word', this.options.onWord);\n    }\n\n    stop() {\n        this.cleanup();\n    }\n\n    update() {\n        if (this.status !== Status.IN_PROGRESS) {\n            this.cleanup();\n        }\n        return this.status;\n    }\n}"],"sourceRoot":"/source/"}