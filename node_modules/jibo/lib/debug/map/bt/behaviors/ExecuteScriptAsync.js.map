{"version":3,"sources":["bt/behaviors/ExecuteScriptAsync.js"],"names":[],"mappings":";;;;;;AAAA,yBAAqB,aAAa,CAAC,CAAA;AACnC,uBAAmB,WAAW,CAAC,CAAA;AAE/B;;;;;;GAMG;AAEH;;;;;;;;GAQG;AACH;IAAgD,sCAAQ;IACvD,4BAAY,OAAO;QACZ,kBAAM,OAAO,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,gBAAM,CAAC,OAAO,CAAC;IACjC,CAAC;IACD,kCAAK,GAAL;QACI,IAAI,CAAC,MAAM,GAAG,gBAAM,CAAC,WAAW,CAAC;QACvC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACrE,MAAM,CAAC,IAAI,CAAC;IACb,CAAC;IACE,sCAAS,GAAT;QACI,IAAI,CAAC,MAAM,GAAG,gBAAM,CAAC,SAAS,CAAC;IACnC,CAAC;IACD,mCAAM,GAAN;QACI,IAAI,CAAC,MAAM,GAAG,gBAAM,CAAC,MAAM,CAAC;IAChC,CAAC;IACD,mCAAM,GAAN;QACI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IACL,yBAAC;AAAD,CAnBA,AAmBC,CAnB+C,kBAAQ,GAmBvD;AAnBD;oCAmBC,CAAA","file":"bt/behaviors/ExecuteScriptAsync.js","sourcesContent":["import Behavior from '../Behavior';\nimport Status from '../Status';\n\n/**\n * @callback module:jibo/bt/behaviors.ExecuteScriptAsync~ExecuteFunction\n * @description This behavior calls this function. ExecuteScriptAsync will succeed or fail only when one of the\n * two callbacks are called.\n * @param {Function} succeed Call this function when you want this behavior to succeed.\n * @param {Function} fail Call this function when you want this behavior to fail.\n */\n\n/**\n * @class ExecuteScriptAsync\n * @extends module:jibo/bt.Behavior\n * @memberof module:jibo/bt/behaviors\n * @description Asynchronously executes JavaScript.\n * @param {Object} options See {@link module:jibo/bt.Behavior|Behavior} for all options.\n * @param {module:jibo/bt/behaviors.ExecuteScriptAsync~ExecuteFunction} options.exec Function to execute. Behavior will not stop unless one of the callbacks\n * \t\t\t\t\t\t\t\t\t\t\t\t are called.\n */\nexport default class ExecuteScriptAsync extends Behavior {\n\tconstructor(options) {\n        super(options);\n        this.status = Status.INVALID;\n    }\n    start() {\n        this.status = Status.IN_PROGRESS;\n\t\tthis.options.exec(this.onSucceed.bind(this), this.onFail.bind(this));\n\t\treturn true;\n\t}\n    onSucceed() {\n        this.status = Status.SUCCEEDED;\n    }\n    onFail() {\n        this.status = Status.FAILED;\n    }\n    update() {\n        return this.status;\n    }\n}"],"sourceRoot":"/source/"}