{"version":3,"sources":["bt/behaviors/TimeoutJs.js"],"names":[],"mappings":";;;;;;AAAA,yBAAqB,aAAa,CAAC,CAAA;AACnC,uBAAmB,WAAW,CAAC,CAAA;AAC/B,qBAAiB,QAAQ,CAAC,CAAA;AAC1B,iCAA6B,gCAAgC,CAAC,CAAA;AAG9D;;;GAGG;AAEH;;;;;;;;GAQG;AACH;IAAuC,6BAAQ;IAC9C,mBAAY,OAAO;QACZ,kBAAM,OAAO,CAAC,CAAC;QACf,IAAI,SAAS,GAAG,IAAI,0BAAgB,CAAC;YACjC,OAAO,EAAE,OAAO,CAAC,OAAO;SAC3B,CAAC,CAAC;QACH,IAAI,CAAC,QAAQ,GAAG,IAAI,cAAI,CAAC;YACrB,UAAU,EAAE,CAAC,SAAS,CAAC;SAC1B,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,GAAG,gBAAM,CAAC,OAAO,CAAC;IACjC,CAAC;IACD,yBAAK,GAAL;QACF,IAAI,CAAC,MAAM,GAAG,gBAAM,CAAC,WAAW,CAAC;QACjC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;IAC/B,CAAC;IACD,wBAAI,GAAJ;QACC,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;IACvB,CAAC;IACD,0BAAM,GAAN;QACO,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;QACtC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;IAC1B,CAAC;IACF,gBAAC;AAAD,CAtBA,AAsBC,CAtBsC,kBAAQ,GAsB9C;AAtBD;2BAsBC,CAAA","file":"bt/behaviors/TimeoutJs.js","sourcesContent":["import Behavior from '../Behavior';\nimport Status from '../Status';\nimport Null from './Null';\nimport TimeoutSucceedJs from '../decorators/TimeoutSucceedJs';\n\n\n/**\n * @callback module:jibo/bt/behaviors.TimeoutJs~GetTime\n * @returns {number} Time in milliseconds until the behavior succeeds.\n */\n\n/**\n * @class TimeoutJs\n * @extends module:jibo/bt.Behavior\n * @memberof module:jibo/bt/behaviors\n * @description\n * Succeeds only after the specified amount of time.\n * @param {Object} options See {@link module:jibo/bt.Behavior|Behavior} for all options.\n * @param {module:jibo/bt/behaviors.TimeoutJs~GetTime} options.getTime - Time in milliseconds until `TimeoutJs` succeeds.\n */\nexport default class TimeoutJs extends Behavior {\n\tconstructor(options) {\n        super(options);\n        let decorator = new TimeoutSucceedJs({\n            getTime: options.getTime\n        });\n        this.behavior = new Null({\n            decorators: [decorator]\n        });\n        this.status = Status.INVALID;\n    }\n    start() {\n\t\tthis.status = Status.IN_PROGRESS;\n\t\treturn this.behavior._start();\n\t}\n\tstop() {\n\t\tthis.behavior._stop();\n\t}\n\tupdate() {\n        this.status = this.behavior._update();\n        return this.status;\n\t}\n}\n"],"sourceRoot":"/source/"}