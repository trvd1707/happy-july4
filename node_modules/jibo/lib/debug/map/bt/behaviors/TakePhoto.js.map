{"version":3,"sources":["bt/behaviors/TakePhoto.js"],"names":[],"mappings":";;;;;;AAAA,yBAAqB,aAAa,CAAC,CAAA;AACnC,uBAAmB,WAAW,CAAC,CAAA;AAC/B,wBAAoB,eAAe,CAAC,CAAA;AAEpC;;;;;;;;;;GAUG;AAEH;;;;;;;;;GASG;AACH;IAAuC,6BAAQ;IAE3C,mBAAY,OAAO;QACf,kBAAM,OAAO,EAAE;YACX,YAAY,EAAE,IAAI;SACrB,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,GAAG,gBAAM,CAAC,OAAO,CAAC;IACjC,CAAC;IAED,2BAAO,GAAP,UAAQ,KAAK,EAAE,QAAQ;QACnB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QACtC,IAAI,CAAC,MAAM,GAAG,gBAAM,CAAC,SAAS,CAAC;IACnC,CAAC;IAED,yBAAK,GAAL;QAAA,iBAkBC;QAjBG,IAAI,CAAC,MAAM,GAAG,gBAAM,CAAC,WAAW,CAAC;QACjC,iBAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,CAC1B,IAAI,CAAC,OAAO,CAAC,UAAU,EACvB,IAAI,CAAC,OAAO,CAAC,YAAY,EACzB,iBAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAS,6BAA6B;QACxE,iBAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,EAAQ,2BAA2B;QACtE,UAAC,KAAK,EAAE,QAAQ;YAChB,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACR,KAAI,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;gBAC1B,KAAI,CAAC,MAAM,GAAG,gBAAM,CAAC,SAAS,CAAC;gBAC/B,MAAM,CAAC;YACX,CAAC;YACD,IAAI,CAAC,CAAC;gBACF,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;YACjC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IACD,0BAAM,GAAN;QACI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IACL,gBAAC;AAAD,CApCA,AAoCC,CApCsC,kBAAQ,GAoC9C;AApCD;2BAoCC,CAAA","file":"bt/behaviors/TakePhoto.js","sourcesContent":["import Behavior from '../Behavior';\nimport Status from '../Status';\nimport Runtime from '../../Runtime';\n\n/**\n * Callback for when Jibo takes a photo.\n * ```\n * let behavior = TakePhoto(2, 2, (url) => {\n *    let img = new Imgage();\n *    img.src = url;\n * });\n * ```\n * @callback module:jibo/bt/behaviors.TakePhoto~OnPhoto\n * @param {String} url The image URL.\n */\n\n/**\n * @class TakePhoto\n * @extends module:jibo/bt.Behavior\n * @memberof module:jibo/bt/behaviors\n * @description Makes Jibo take a photo and will return a URL to get the contents of that photo.\n * @param {Object} options Options\n * @param {number} options.resolution `1` for a 672x380 photo. `2` for 1280x720 photo. `3` for 1920x1080 photo. `4` for 2688x1520 photo.\n * @param {module:jibo/bt/behaviors.TakePhoto~OnPhoto} options.onPhoto Called after Jibo takes a picture. The image URL is passed to this function.\n * @param {boolean} [options.noDistortion=true] Removes camera distortion from photo.\n */\nexport default class TakePhoto extends Behavior {\n\n    constructor(options) {\n        super(options, {\n            noDistortion: true\n        });\n        this.status = Status.INVALID;\n    }\n\n    onPhoto(error, imageUrl) {\n        this.options.onPhoto(error, imageUrl);\n        this.status = Status.SUCCEEDED;\n    }\n\n    start() {\n        this.status = Status.IN_PROGRESS;\n        Runtime.instance.lps.takePhoto(\n            this.options.resolution,\n            this.options.noDistortion,\n            Runtime.instance.lps.CameraID.LEFT,        // always LEFT camera for now\n            Runtime.instance.lps.PhotoType.FULL,       // always FULL type for now\n            (error, imageUrl) => {\n            if (error) {\n                this.onPhoto(error, null);\n                this.status = Status.SUCCEEDED;\n                return;\n            }\n            else {\n                this.onPhoto(null, imageUrl);\n            }\n        });\n        return true;\n    }\n    update() {\n        return this.status;\n    }\n}"],"sourceRoot":"/source/"}