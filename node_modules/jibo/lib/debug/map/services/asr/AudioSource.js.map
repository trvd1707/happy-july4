{"version":3,"sources":["services/asr/AudioSource.js"],"names":[],"mappings":";AAAA,IAAY,IAAI,WAAM,MAAM,CAAC,CAAA;AAC7B,6BAAyB,gBAAgB,CAAC,CAAA;AAE1C;IACI,qBAAY,GAAG,EAAE,QAAQ;QACrB,IAAI,MAAM,GAAG,MAAM,CAAC;QACpB,EAAE,CAAA,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YAChD,MAAM,GAAG,KAAK,CAAC;QACnB,CAAC;QACD,IAAI,CAAC,EAAE,CAAA,CAAC,OAAM,CAAC,QAAQ,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC;YACpC,MAAM,GAAG,KAAK,CAAC;YACf,QAAQ,GAAG,CAAC,QAAQ,CAAC,CAAC;QAC1B,CAAC;QACD,IAAI,CAAC,EAAE,GAAG,SAAS,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;QAChC,sBAAY,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;QAC7C,2BAA2B;QAC3B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,QAAQ,IAAI,EAAE,CAAC;QAC/B,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;IACxB,CAAC;IAED,0BAAI,GAAJ,UAAK,EAAE;QACH,IAAI,IAAI,GAAG;YACP,MAAM,EAAE,OAAO;YACf,eAAe,EAAE,IAAI,CAAC,EAAE;YACxB,YAAY,EAAE,IAAI,CAAC,MAAM;YACzB,SAAS,EAAE,IAAI,CAAC,QAAQ;SAC3B,CAAC;QACF,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QAC5B,IAAI,OAAO,GAAG,IAAI,cAAc,EAAE,CAAC;QACnC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QAC1C,OAAO,CAAC,kBAAkB,GAAG;YACzB,EAAE,CAAA,CAAC,OAAO,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,GAAG,IAAI,OAAO,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;gBAC7E,EAAE,EAAE,CAAC;YACT,CAAC;YACD,IAAI,CAAC,EAAE,CAAA,CAAC,OAAO,CAAC,UAAU,IAAI,CAAC,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;gBACtD,EAAE,CAAC,gCAAgC,CAAC,CAAC;YACzC,CAAC;QAEL,CAAC,CAAC;QACF,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACvB,CAAC;IAED,6BAAO,GAAP,UAAQ,EAAE;QACN,IAAI,IAAI,GAAG;YACP,MAAM,EAAE,MAAM;YACd,eAAe,EAAE,IAAI,CAAC,EAAE;YACxB,YAAY,EAAE,IAAI,CAAC,MAAM;YACzB,SAAS,EAAE,EAAE;SAChB,CAAC;QACF,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QAC5B,IAAI,OAAO,GAAG,IAAI,cAAc,EAAE,CAAC;QACnC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QAC1C,OAAO,CAAC,kBAAkB,GAAG;YACzB,EAAE,CAAA,CAAC,OAAO,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,GAAG,IAAI,OAAO,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;gBAC7E,EAAE,EAAE,CAAC;YACT,CAAC;YACD,IAAI,CAAC,EAAE,CAAA,CAAC,OAAO,CAAC,UAAU,IAAI,CAAC,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;gBACtD,EAAE,CAAC,iCAAiC,CAAC,CAAC;YAC1C,CAAC;QAEL,CAAC,CAAC;QACF,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACvB,CAAC;IAED,0BAAI,GAAJ,UAAK,MAAM;QACP,MAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrC,CAAC;IACL,kBAAC;AAAD,CAjEA,AAiEC,IAAA;AAED;kBAAe,WAAW,CAAC","file":"services/asr/AudioSource.js","sourcesContent":["import * as uuid from 'uuid';\nimport ASRVariables from './ASRVariables';\n\nclass AudioSource {\n    constructor(url, wavFiles) {\n        let source = 'alsa';\n        if(Array.isArray(wavFiles) && wavFiles.length > 0) {\n            source = 'wav';\n        }\n        else if(typeof(wavFiles) === 'string') {\n            source = 'wav';\n            wavFiles = [wavFiles];\n        }\n        this.id = 'source-' + uuid.v4();\n        ASRVariables.idToAudioSource[this.id] = this;\n        // source is 'alsa' | 'wav'\n        this.source = source;\n        this.wavFiles = wavFiles || [];\n        this.audioUrl = url;\n    }\n\n    init(cb) {\n        let body = {\n            action: 'start',\n            audio_source_id: this.id,\n            audio_source: this.source,\n            wav_files: this.wavFiles\n        };\n        body = JSON.stringify(body);\n        let request = new XMLHttpRequest();\n        request.open(\"POST\", this.audioUrl, true);\n        request.onreadystatechange = () => {\n            if(request.readyState == 4 && (request.status == 204 || request.status == 200)) {\n                cb();\n            }\n            else if(request.readyState == 4 && request.status === 0) {\n                cb('Could not create audio channel');\n            }\n\n        };\n        request.send(body);\n    }\n\n    destroy(cb) {\n        let body = {\n            action: 'stop',\n            audio_source_id: this.id,\n            audio_source: this.source,\n            wav_files: []\n        };\n        body = JSON.stringify(body);\n        let request = new XMLHttpRequest();\n        request.open(\"POST\", this.audioUrl, true);\n        request.onreadystatechange = () => {\n            if(request.readyState == 4 && (request.status == 204 || request.status == 200)) {\n                cb();\n            }\n            else if(request.readyState == 4 && request.status === 0) {\n                cb('Could not destroy audio channel');\n            }\n\n        };\n        request.send(body);        \n    }\n\n    link(action) {\n        action.setAudioSourceId(this.id);\n    }\n}\n\nexport default AudioSource;"],"sourceRoot":"/source/"}