{"version":3,"sources":["jibo.js"],"names":[],"mappings":"AAAA,yDAAyD;AACzD,4CAA4C;;AAE5C,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IACvC,OAAO,CAAC,gCAAgC,CAAC,CAAC;AAC9C,CAAC;AAGD,qBAAqB;AACrB,mBAAe,MAAM,CAAC,CAAA;AACtB,yBAAqB,YAAY,CAAC,CAAA;AAClC,sBAAkB,SAAS,CAAC,CAAA;AAC5B,sBAAkB,SAAS,CAAC,CAAA;AAC5B,wBAAoB,WAAW,CAAC,CAAA;AAChC,0BAAsB,aAAa,CAAC,CAAA;AAEpC,kCAAkC;AAClC,4BAAwB,eAAe,CAAC,CAAA;AAExC,+BAA+B;AAC/B,IAAI,SAAS,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAC;AAE7C,0DAA0D;AAC1D,sDAAsD;AACtD,MAAM,CAAC,SAAS,GAAG,SAAS,CAAC;AAE7B,wDAAwD;AACxD,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;IAAC,MAAM,CAAC,MAAM,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;AAE7D,EAAE,CAAA,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;IAEd,+BAA+B;IAC/B,oCAAoC;IACpC,qBAAqB;IACrB,IAAI,IAAI,GAAG;QACP,IAAA,YAAE;QACF,UAAA,kBAAQ;QACR,OAAA,eAAK;QACL,OAAA,eAAK;QACL,SAAA,iBAAO;QACP,WAAA,mBAAS;KACZ,CAAC;IAEF,+BAA+B;IAC/B,qBAAW,CAAC,IAAI,CAAC,CAAC;IAElB,4BAA4B;IAC5B,MAAM,CAAC,IAAI,GAAG,IAAI,iBAAO,CAAC,IAAI,CAAC,CAAC;AACpC,CAAC;AAED;kBAAe,MAAM,CAAC,IAAI,CAAC","file":"jibo.js","sourcesContent":["// Only include PixiAnimate if it's not already installed\n// this will be used by the rendering system\n\n// @if DEBUG\nif (!GLOBAL.PIXI || !GLOBAL.PIXI.animate) {  \n    require('pixi-animate/dist/pixi-animate');\n}\n// @endif\n\n// @if RELEASE\nif (!GLOBAL.PIXI || !GLOBAL.PIXI.animate) {  \n    require('pixi-animate');\n}\n// @endif\n\n// Import the classes\nimport bt from './bt';\nimport services from './services';\nimport utils from './utils';\nimport sound from './sound';\nimport Runtime from './Runtime';\nimport rendering from './rendering';\n\n// Import deprecated functionality\nimport deprecation from './deprecation';\n\n// Import external dependencies\nlet WebSocket = require('ws-without-native');\n\n// Replace libchromium's WebSocket with a node.js oriented\n// polyfill to avoid any throttling from browser logic\nGLOBAL.WebSocket = WebSocket;\n\n// Polyfill Object.assign for Electron 0.29.2 and before\nif (!Object.assign) Object.assign = require('object-assign');\n\nif(!GLOBAL.jibo) {\n\n    // Create the class definitions\n    // and hang it on a global namespace\n    // object called jibo\n    let jibo = {\n        bt,\n        services,\n        utils,\n        sound,\n        Runtime,\n        rendering\n    };\n\n    // Deprecate before create jibo\n    deprecation(jibo);\n\n    // Export the jibo singleton\n    GLOBAL.jibo = new Runtime(jibo);\n}\n\nexport default GLOBAL.jibo;"],"sourceRoot":"/source/"}