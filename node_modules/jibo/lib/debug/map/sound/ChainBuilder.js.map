{"version":3,"sources":["sound/ChainBuilder.ts"],"names":[],"mappings":"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","file":"sound/ChainBuilder.js","sourcesContent":["/**\n * @class ChainBuilder\n * @private\n * @param {AudioContext} audioContext The audio context.\n */\nclass ChainBuilder\n{\n    private _firstNode:any;\n    private _lastNode:any;\n    private _nodes:any;\n    private _bufferSourceDst:any;\n\n    constructor(private _context:AudioContext)\n    {\n        this._firstNode = null;\n        this._lastNode  = null;\n        this._nodes = {};\n    }\n\n    /**\n     * Cleans up.\n     * @method ChainBuilder#destroy\n     */\n    destroy():void\n    {\n        this._nodes = null;\n        this._context = null;\n        this._firstNode = null;\n        this._lastNode = null;\n    }\n\n    /**\n     * Gets the nodes.\n     * @method ChainBuilder#nodes\n     * @return {Object}\n     */\n    nodes():any\n    {\n        return this._nodes;\n    }\n\n    /**\n     * Gets the first node.\n     * @method ChainBuilder#first\n     * @return {Object}\n     */\n    first():any\n    {\n        return this._firstNode;\n    }\n\n    /**\n     * Gets the last node.\n     * @method ChainBuilder#last\n     * @return {Object}\n     */\n    last():any\n    {\n        return this._lastNode;\n    }\n\n    /**\n     * Adds a node to the chain.\n     * @method ChainBuilder#_addNode\n     * @private\n     * @param {*} node\n     * @param {*} properties\n     */\n    _addNode(node:any, properties?:any): ChainBuilder\n    {\n        // update this._bufferSourceDst - needed for .cloneBufferSource()\n        const lastIsBufferSource = this._lastNode && ('playbackRate' in this._lastNode);\n        if (lastIsBufferSource)\n        {\n            this._bufferSourceDst = node;\n        }\n\n        // connect this._lastNode to node if suitable\n        if (this._lastNode)\n        {\n            this._lastNode.connect(node);\n        }\n\n        // update this._firstNode && this._lastNode\n        if (!this._firstNode)\n        {\n            this._firstNode = node;\n        }\n        this._lastNode = node;\n\n        // apply properties to the node\n        for (let property in properties)\n        {\n            node[property] = properties[property];\n        }\n        // for chained API\n        return this;\n    }\n\n    /**\n     * Clones the bufferSource. Used just before playing a sound.\n     * @method ChainBuilder#cloneBufferSource\n     * @returns {AudioBufferSourceNode} The clone AudioBufferSourceNode.\n     */\n    cloneBufferSource():AudioBufferSourceNode\n    {\n        // @if DEBUG\n        console.assert(this._nodes.bufferSource, \"No buffersource presents. Add one.\");\n        // @endif\n        const orig = this._nodes.bufferSource;\n        const clone = this._context.createBufferSource();\n        clone.buffer = orig.buffer;\n        clone.playbackRate.value = orig.playbackRate.value;\n        clone.loop = orig.loop;\n        clone.connect(this._bufferSourceDst);\n        return clone;\n    }\n\n    /**\n     * Adds a bufferSource.\n     * @method ChainBuilder#bufferSrouce\n     * @param {Object} [properties] Properties to set in the created node.\n     */\n    bufferSource(properties?:any):ChainBuilder\n    {\n        const node = this._context.createBufferSource();\n        this._nodes.bufferSource = node;\n        return this._addNode(node, properties);\n    }\n\n    /**\n     * Adds a createMediaStreamSource.\n     * @method ChainBuilder#mediaStreamSource\n     * @param {Object} [properties] Properties to set in the created node.\n     */\n    // mediaStreamSource(stream:any, properties?:any):ChainBuilder\n    // {\n    //     const node = this._context.createMediaStreamSource(stream);\n    //     this._nodes.bufferSource = node;\n    //     return this._addNode(node, properties);\n    // }\n\n    /**\n     * Adds a createMediaElementSource.\n     * @method ChainBuilder#mediaElementSource\n     * @param  {HTMLElement} element    The element to add.\n     * @param {Object} [properties] Properties to set in the created node.\n     */\n    // mediaElementSource(element:HTMLElement, properties?:any):ChainBuilder\n    // {\n    //     console.assert(element instanceof HTMLAudioElement || element instanceof HTMLVideoElement);\n    //     const node = this._context.createMediaElementSource(element);\n    //     this._nodes.bufferSource = node;\n    //     return this._addNode(node, properties);\n    // }\n\n    /**\n     * Adds a panner.\n     * @method ChainBuilder#panner\n     * @param {Object} [properties] Properties to set in the created node.\n     */\n    panner(properties?:any):ChainBuilder\n    {\n        const node = this._context.createStereoPanner();\n        this._nodes.panner = node;\n        return this._addNode(node, properties);\n    }\n\n    /**\n     * Adds an analyser.\n     * @method ChainBuilder#analyser\n     * @param {Object} [properties] Properties to set in the created node.\n     */\n    analyser(properties?:any):ChainBuilder\n    {\n        const node = this._context.createAnalyser();\n        this._nodes.analyser = node;\n        return this._addNode(node, properties);\n    }\n\n    /**\n     * Adds a gainNode.\n     * @method ChainBuilder#gainNode\n     * @param {Object} [properties] Properties to set in the created node.\n     */\n    gainNode(properties?:any):ChainBuilder\n    {\n        const node = this._context.createGain();\n        this._nodes.gainNode = node;\n        return this._addNode(node, properties);\n    }\n}\n\nexport default ChainBuilder;\n"],"sourceRoot":"/source/"}