"use strict";
/*
 * Creates a global instance of perf.SerialTimer to make it easier to share a topmost
 * timer across all files doing performance time measurements.
 */
var SerialTimer_1 = require('./SerialTimer');
var assert = require('assert');
// Singleton instance of timer.
var singleton = null;
/**
 * Global performance timer.
 * @class GlobalPerfTimer
 * @memberof module:jibo/utils/perf
 * @private
 */
var GlobalPerfTimer = (function () {
    function GlobalPerfTimer() {
    }
    /*
     * Initializes the global perf timer singleton.
     */
    GlobalPerfTimer.init = function () {
        assert(singleton === null, 'GlobalPerfTimer.init() should only be called once');
        return GlobalPerfTimer.reset();
    };
    /*
     * Resets the timer for the singleton.
     */
    GlobalPerfTimer.reset = function () {
        singleton = new SerialTimer_1.default('jibo');
        return singleton;
    };
    /*
     * Gets the singleton timer instance.
     */
    GlobalPerfTimer.get = function () {
        return singleton;
    };
    return GlobalPerfTimer;
}());
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = GlobalPerfTimer;

//# sourceMappingURL=../../map/utils/perf/GlobalPerfTimer.js.map
