"use strict";
/**
 * The object returned by the SpritesheetTask.
 * @class Spritesheet
 * @memberof module:jibo/rendering/animation
 * @param {PIXI.BaseTexture} baseTexture
 * @param {Object} frames The frames map
 */
var Spritesheet = (function () {
    function Spritesheet(baseTexture, frames) {
        this.frames = {};
        for (var name_1 in frames) {
            var frame = frames[name_1];
            var rect = frame.frame;
            var trim = null;
            var size = new PIXI.Rectangle(rect.x, rect.y, rect.w, rect.h);
            // If the frame is rotated
            if (frame.rotated) {
                size.width = rect.h;
                size.height = rect.w;
            }
            //  Check to see if the sprite is trimmed
            if (frame.trimmed) {
                trim = new PIXI.Rectangle(frame.spriteSourceSize.x, // / resolution,
                frame.spriteSourceSize.y, // / resolution,
                frame.sourceSize.w, // / resolution,
                frame.sourceSize.h // / resolution
                );
            }
            this.frames[name_1] = new PIXI.Texture(baseTexture, size, size.clone(), trim, frame.rotate);
        }
    }
    /**
     * Destroys all the textures/frames of spritesheet.
     * @method module:jibo/rendering/animation.Spritesheet#destroy
     */
    Spritesheet.prototype.destroy = function () {
        for (var name_2 in this.frames) {
            this.frames[name_2].destroy(true);
        }
        this.frames = null;
    };
    return Spritesheet;
}());
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = Spritesheet;

//# sourceMappingURL=../../map/rendering/animation/Spritesheet.js.map
