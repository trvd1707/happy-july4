"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Task_1 = require('../../loader/tasks/Task');
var Shapes_1 = require('../animation/Shapes');
/**
 * Loads a shapes manifest file and sets it up for PixiAnimate.
 * @class ShapesTask
 * @memberof module:jibo/loader
 * @constructor
 * @private
 * @param {String} asset.type Must be "shapes" to signify that this asset should be parsed
 *                            specifically for PixiAnimate.
 * @param {String} [asset.src] The texture image path.
 * @param {Boolean} [asset.cache=false] `true` to cache the result.
 * @param {String} [asset.id] The ID of the task.
 * @param {Function} [asset.complete] The callback to call when the load is completed.
 */
var ShapesTask = (function (_super) {
    __extends(ShapesTask, _super);
    function ShapesTask(manager, asset) {
        _super.call(this, manager, asset, asset.src);
        /**
         * The atlas source path.
         * @name module:jibo/loader.ShapesTask#src
         * @type {String}
         */
        this.src = asset.src;
    }
    /**
     * Tests if an asset should be loaded.
     * @method module:jibo/loader.ShapesTask.test
     * @static
     * @param {Object} asset The asset to test.
     * @return {Boolean} `true` if the asset qualifies for this task.
     */
    ShapesTask.test = function (asset) {
        return asset.type === "shapes" && !!asset.src && /\.shapes\.(json|txt)$/i.test(asset.src);
    };
    /**
     * Starts the load.
     * @method module:jibo/loader.ShapesTask#start
     * @param {module:jibo/loader.Task~completeCallback} callback Callback to call when the load is done.
     */
    ShapesTask.prototype.start = function (callback) {
        var _this = this;
        this.simpleLoad(this.src, function (err, results) {
            if (err) {
                return callback(err);
            }
            callback(null, new Shapes_1.default(_this.id, results));
        });
    };
    return ShapesTask;
}(Task_1.default));
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = ShapesTask;

//# sourceMappingURL=../../map/rendering/tasks/ShapesTask.js.map
