"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Background = (function (_super) {
    __extends(Background, _super);
    function Background(renderer, cache) {
        _super.call(this);
        this.cache = cache;
        this.renderer = renderer;
        this.filter = new PIXI.filters.ColorMatrixFilter();
        this.filter.reset();
        this.connected = true;
    }
    Object.defineProperty(Background.prototype, "red", {
        set: function (value) {
            this.filter.matrix[0] = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Background.prototype, "green", {
        set: function (value) {
            this.filter.matrix[6] = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Background.prototype, "blue", {
        set: function (value) {
            this.filter.matrix[12] = value;
        },
        enumerable: true,
        configurable: true
    });
    Background.prototype.update = function (timestamp, dofValues) {
        if (!this.connected) {
            return;
        }
        if (dofValues.screenBGTextureInfixBn_r && dofValues.screenBGTextureInfixBn_r !== this.texturePrev) {
            this.texturePrev = dofValues.screenBGTextureInfixBn_r;
            if (this.cache) {
                this.texture = PIXI.Texture.fromImage(this.texturePrev);
            }
            else {
                var image = new Image();
                image.src = this.texturePrev;
                var baseTexture = new PIXI.BaseTexture(image);
                baseTexture.imageUrl = this.texturePrev;
                this.texture = new PIXI.Texture(new PIXI.BaseTexture(image));
            }
        }
        if (dofValues.screenBG_redChannelBn_r === 1 && dofValues.screenBG_greenChannelBn_r === 1 &&
            dofValues.screenBG_blueChannelBn_r === 1) {
            this.filters = null;
        }
        else {
            if (!this.filters || this.filters.length === 0) {
                this.filters = [this.filter];
            }
            this.red = dofValues.screenBG_redChannelBn_r;
            this.green = dofValues.screenBG_greenChannelBn_r;
            this.blue = dofValues.screenBG_blueChannelBn_r;
        }
    };
    return Background;
}(PIXI.Sprite));
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = Background;

//# sourceMappingURL=../map/rendering/Background.js.map
