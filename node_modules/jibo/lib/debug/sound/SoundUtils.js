"use strict";
var Sound_1 = require('./Sound');
var SoundPlugin_1 = require('./SoundPlugin');
var LoaderPlugin_1 = require('../loader/LoaderPlugin');
var uuid = require('uuid');
/**
 * Utilities that work with sounds.
 * @class SoundsUtils
 * @memberof module:jibo/sound
 */
var SoundUtils = (function () {
    function SoundUtils() {
    }
    /**
     * Creates a new sound for a sine wave-based tone.
     * @method module:jibo/sound.SoundsUtils.sineTone
     * @param {SoundContext} soundContext
     * @param {Number} hertz
     * @param {Number} seconds duration
     * @return {Sound} New sound
     */
    SoundUtils.sineTone = function (hertz, seconds) {
        var soundContext = SoundPlugin_1.default.instance.context;
        var sound = new Sound_1.default(soundContext, {
            block: true
        });
        // handle parameter
        hertz = hertz || 200;
        seconds = seconds || 1;
        // set default value
        var nChannels = 1;
        var sampleRate = 48000;
        var amplitude = 2;
        // create the buffer
        var buffer = soundContext.context.createBuffer(nChannels, seconds * sampleRate, sampleRate);
        var fArray = buffer.getChannelData(0);
        // fill the buffer
        for (var i = 0; i < fArray.length; i++) {
            var time = i / buffer.sampleRate;
            var angle = hertz * time * Math.PI;
            fArray[i] = Math.sin(angle) * amplitude;
        }
        // set the buffer
        sound.buffer = buffer;
        sound.isLoaded = true;
        return sound;
    };
    /**
     * Creates a new "Audio" stream based on given audio path and project uri; returns the audio object.
     * @method module:jibo/sound.SoundsUtils.playOnce
     * @static
     * @param {String} fileName Full path of the file to play.
     * @param {Function} callback Callback when complete.
     * @return {string} New audio element alias.
     */
    SoundUtils.playOnce = function (src, callback) {
        var alias = uuid.v4();
        // Load the file first
        LoaderPlugin_1.default.instance.load({
            type: 'sound',
            id: alias,
            src: src,
            complete: function (err, sound) {
                if (err) {
                    if (callback) {
                        callback(err);
                    }
                    return;
                }
                sound.play(function (sound) {
                    SoundPlugin_1.default.instance.remove(alias);
                    if (callback) {
                        callback(null);
                    }
                });
            }
        });
        return alias;
    };
    return SoundUtils;
}());
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = SoundUtils;

//# sourceMappingURL=../map/sound/SoundUtils.js.map
