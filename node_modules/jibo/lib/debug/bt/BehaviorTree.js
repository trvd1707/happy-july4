"use strict";
/**
 * @class BehaviorTree
 * @memberof module:jibo/bt
 * @description Object for controlling the playback of the behavior tree.
 *
 * @param {module:jibo/bt.Blackboard} blackboard Reference to the global {@link module:jibo/bt/behaviors.Blackboard|Blackboard} instance
 * @param {Object} notepad Reference to a temporary object to use
 * @param {Object} result
 * @param {module:jibo/bt.BehaviorEmitter} emitter
 */
var BehaviorTree = (function () {
    function BehaviorTree(root, blackboard, notepad, result, emitter) {
        this.root = root;
        this.blackboard = blackboard;
        this.notepad = notepad;
        this.result = result;
        this.emitter = emitter;
    }
    Object.defineProperty(BehaviorTree.prototype, "status", {
        /**
         * Get the current status of the behavior tree
         * @name module:jibo/bt.BehaviorTree~status
         * @type {module:jibo/bt.Status}
         * @readOnly
         */
        get: function () {
            return this.root._status;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Start the behavior tree.
     * @method module:jibo/bt.BehaviorTree~start
     * @return {Boolean} Status result
     */
    BehaviorTree.prototype.start = function () {
        return this.root._start();
    };
    /**
     * Stop the behavior tree.
     * @method module:jibo/bt.BehaviorTree~stop
     */
    BehaviorTree.prototype.stop = function () {
        this.root._stop();
    };
    /**
     * Pause the behavior tree.
     * @private
     * @method module:jibo/bt.BehaviorTree~pause
     */
    BehaviorTree.prototype.pause = function () {
        this.root._pause();
    };
    /**
     * Resume the behavior tree.
     * @private
     * @method module:jibo/bt.BehaviorTree~pause
     */
    BehaviorTree.prototype.unpause = function () {
        this.root._unpause();
    };
    /**
     * Called every frame.
     * @method module:jibo/bt.BehaviorTree~update
     * @returns {module:jibo/bt.Status} The current status of this behavior.
     */
    BehaviorTree.prototype.update = function () {
        return this.root._update();
    };
    return BehaviorTree;
}());
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = BehaviorTree;

//# sourceMappingURL=../map/bt/BehaviorTree.js.map
