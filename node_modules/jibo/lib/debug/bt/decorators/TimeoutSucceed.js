"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Decorator_1 = require('../Decorator');
var Status_1 = require('../Status');
/**
 * @class TimeoutSucceed
 * @extends module:jibo/bt.Decorator
 * @memberof module:jibo/bt/decorators
 * @description
 * Forces the behavior it's decorating to succeed after the specified amount of time.
 * @param {Object} options See {@link module:jibo/bt.Decorator|Decorator} for all options.
 * @param {number} options.timeout - Time in milliseconds until `TimeoutSucceed` forces the behavior it's decorating to succeed.
 */
var TimeoutSucceed = (function (_super) {
    __extends(TimeoutSucceed, _super);
    function TimeoutSucceed() {
        _super.apply(this, arguments);
    }
    TimeoutSucceed.prototype.start = function () {
        this.startTime = new Date().getTime();
        return true;
    };
    TimeoutSucceed.prototype.update = function (result) {
        var elapsed = new Date().getTime() - this.startTime;
        if (elapsed > this.options.timeout) {
            return Status_1.default.SUCCEEDED;
        }
        return result;
    };
    return TimeoutSucceed;
}(Decorator_1.default));
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = TimeoutSucceed;

//# sourceMappingURL=../../map/bt/decorators/TimeoutSucceed.js.map
