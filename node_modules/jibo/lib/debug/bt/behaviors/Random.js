"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var ParentBehavior_1 = require('../ParentBehavior');
var Status_1 = require('../Status');
/**
 * @class Random
 * @extends module:jibo/bt.ParentBehavior
 * @memberof module:jibo/bt/behaviors
 * @description `Random` on start will choose a random node in its children and run that node.
 * @param {Object} options See {@link module:jibo/bt.Behavior|Behavior} for all options.
 * @param {Array<module:jibo/bt.Behavior>} [options.children=[]] An array of child behaviors.
 */
var Random = (function (_super) {
    __extends(Random, _super);
    function Random(options) {
        _super.call(this, options);
        this.current = -1;
    }
    Random.prototype.start = function () {
        if (this.children.length === 0) {
            return false;
        }
        this.current = Math.round(Math.random() * (this.children.length - 1));
        var success = this.children[this.current]._start();
        this.current = success ? this.current : -1;
        return success;
    };
    Random.prototype.stop = function () {
        if (this.current !== -1 && this.current < this.children.length) {
            this.children[this.current]._stop();
            this.current = -1;
        }
    };
    Random.prototype.update = function () {
        var status = this.children[this.current]._update();
        if (status === Status_1.default.PAUSED) {
            return Status_1.default.IN_PROGRESS;
        }
        return status;
    };
    return Random;
}(ParentBehavior_1.default));
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = Random;

//# sourceMappingURL=../../map/bt/behaviors/Random.js.map
