"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Behavior_1 = require('../Behavior');
var Status_1 = require('../Status');
/**
 * @class Null
 * @extends module:jibo/bt.Behavior
 * @memberof module:jibo/bt/behaviors
 * @description `Null` has no behavior. It will remain in-progress until a decorator changes its state.
 * @param {Object} options See {@link module:jibo/bt.Behavior|Behavior} for all options.
 */
var Null = (function (_super) {
    __extends(Null, _super);
    function Null() {
        _super.apply(this, arguments);
    }
    Null.prototype.update = function () {
        return Status_1.default.IN_PROGRESS;
    };
    return Null;
}(Behavior_1.default));
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = Null;

//# sourceMappingURL=../../map/bt/behaviors/Null.js.map
