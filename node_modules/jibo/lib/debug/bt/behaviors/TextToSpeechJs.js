"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Behavior_1 = require('../Behavior');
var TextToSpeech_1 = require('./TextToSpeech');
/**
 * @class TextToSpeechJs
 * @extends module:jibo/bt.Behavior
 * @memberof module:jibo/bt/behaviors
 * @description Makes Jibo speak.
 * @param {Object} options See {@link module:jibo/bt.Behavior|Behavior} for all options.
 * @param {Function} options.getWords Function that returns a string of the words for Jibo to speak.
 * @param {Function} options.onWord Called each time a word is spoken. The word that is spoken is passed as an argument.
 */
var TextToSpeechJs = (function (_super) {
    __extends(TextToSpeechJs, _super);
    function TextToSpeechJs(options) {
        _super.call(this, options);
        this.behavior = new TextToSpeech_1.default({
            emitter: this.emitter,
            blackboard: this.blackboard,
            onWord: this.options.onWord,
            assetPack: this.assetPack
        });
    }
    TextToSpeechJs.prototype.start = function () {
        var _this = this;
        this.options.getWords(function (words) {
            _this.behavior.words = words;
            _this.behavior._start();
        });
        return true;
    };
    TextToSpeechJs.prototype.stop = function () {
        this.behavior._stop();
    };
    TextToSpeechJs.prototype.update = function () {
        return this.behavior._update();
    };
    return TextToSpeechJs;
}(Behavior_1.default));
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = TextToSpeechJs;

//# sourceMappingURL=../../map/bt/behaviors/TextToSpeechJs.js.map
