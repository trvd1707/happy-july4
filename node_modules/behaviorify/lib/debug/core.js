'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    // Behaviors and the arguments order
    Blink: [],
    ExecuteScript: ['exec'],
    ExecuteScriptAsync: ['exec'],
    Listen: ['getOptions', 'rule', 'onResult'],
    ListenEmbedded: ['rule', 'onResult'],
    ListenJs: ['getOptions', 'getRule', 'onResult'],
    LookAt: ['getTarget', 'isContinuous', 'config'],
    Null: [],
    Parallel: ['succeedOnOne', 'children'],
    PlayAnimation: ['animPath', 'config'],
    PlayAudio: ['audioPath'],
    Random: ['children'],
    ReadBarcode: ['onBarcode'],
    Sequence: ['children'],
    Subtree: ['behaviorPath', 'getNotepad', 'onResult'],
    SubtreeJs: ['getFileName', 'getNotepad', 'onResult'],
    Switch: ['children'],
    TakePhoto: ['resolution', 'onPhoto', 'noDistortion'],
    TextToSpeech: ['words', 'onWord'],
    TextToSpeechJs: ['getWords', 'onWord'],
    TimeoutJs: ['getTime'],

    // Decorators
    Case: ['conditional'],
    FailOnCondition: ['init', 'conditional'],
    StartOnAnimEvent: ['eventName', 'onReceived'],
    StartOnCondition: ['init', 'conditional'],
    StartOnEvent: ['eventName', 'onEvent'],
    SucceedOnCondition: ['init', 'conditional'],
    SucceedOnEmbedded: ['rule', 'onResult'],
    SucceedOnEvent: ['eventName', 'onEvent'],
    SucceedOnListen: ['getOptions', 'rule', 'onResult'],
    SucceedOnListenJs: ['getOptions', 'getRule', 'onResult'],
    TimeoutFail: ['timeout'],
    TimeoutSucceed: ['timeout'],
    TimeoutSucceedJs: ['getTime'],
    WhileCondition: ['init', 'conditional']
};
//# sourceMappingURL=map/core.js.map
